{"version":3,"file":"static/js/8562.41629c31.chunk.js","mappings":"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","sources":["views/admin/opportunities/View.js"],"sourcesContent":["import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure, Box, Heading, Input, Select } from '@chakra-ui/react'\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport React from 'react'\nimport moment from 'moment'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { BiLink } from 'react-icons/bi'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport Card from 'components/card/Card'\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { HasAccess } from '../../../redux/accessUtils';\nimport { HSeparator } from 'components/separator/Separator';\nimport AddEdit from './AddEdit';\nimport CommonDeleteModel from 'components/commonDeleteModel';\nimport { deleteManyApi, putApi, getApi } from '../../../services/api';\nimport { FaFilePdf } from \"react-icons/fa\";\nimport html2pdf from \"html2pdf.js\";\nimport { opprtunitiesSchema } from '../../../schema/opprtunitiesSchema';\nimport { useFormik } from 'formik';\nimport dayjs from 'dayjs';\nimport { toast } from 'react-toastify';\n\nconst View = (props) => {\n    const params = useParams()\n    const { id } = params\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n\n    const [opportunityAccess, accountAccess] = HasAccess(['Opportunities', 'Account'])\n\n    const [data, setData] = useState()\n    const { onOpen, onClose } = useDisclosure()\n    const [edit, setEdit] = useState(false);\n    const [deleteModel, setDelete] = useState(false);\n    const [deleteManyModel, setDeleteManyModel] = useState(false);\n    const [loading, setLoading] = useState(false)\n    const navigate = useNavigate()\n    const [type, setType] = useState(\"\")\n    const [editableField, setEditableField] = useState(null);\n    const [editableFieldName, setEditableFieldName] = useState(null);\n    const today = new Date().toISOString().split('T')[0];\n    const todayTime = new Date().toISOString().split('.')[0];\n    const fetchViewData = async () => {\n        if (id) {\n            let result = await getApi('api/opportunity/view/', id);\n            setData(result?.data);\n        }\n    }\n    const generatePDF = () => {\n        setLoading(true)\n        const element = document.getElementById(\"reports\");\n        const hideBtn = document.getElementById(\"hide-btn\");\n\n        if (element) {\n            hideBtn.style.display = 'none';\n            html2pdf()\n                .from(element)\n                .set({\n                    margin: [0, 0, 0, 0],\n                    filename: `Opportunities_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n                    image: { type: \"jpeg\", quality: 0.98 },\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n                })\n                .save().then(() => {\n                    setLoading(false)\n                    hideBtn.style.display = '';\n                })\n            // }, 500);\n        } else {\n            console.error(\"Element with ID 'reports' not found.\");\n            setLoading(false)\n        }\n    };\n    const handleDeleteOpportunities = async (ids) => {\n        try {\n            let response = await deleteManyApi('api/opportunities/deleteMany', ids)\n            if (response.status === 200) {\n                navigate('/opportunities')\n                toast.success(`Opprtunities Delete successfully`)\n                setDeleteManyModel(false)\n            }\n        } catch (error) {\n            console.log(error)\n            toast.error(`server error`)\n\n        }\n\n    }\n\n    const initialValues = {\n        opportunityName: data?.opportunityName,\n        accountName: data?.accountName,\n        assignUser: data?.assignUser,\n        type: data?.type,\n        leadSource: data?.leadSource,\n        currency: data?.currency,\n        opportunityAmount: data?.opportunityAmount,\n        amount: data?.amount,\n        expectedCloseDate: data?.expectedCloseDate,\n        nextStep: data?.nextStep,\n        salesStage: data?.salesStage,\n        probability: data?.probability,\n        description: data?.description,\n        modifiedBy: JSON.parse(localStorage.getItem('user'))._id\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: opprtunitiesSchema,\n        enableReinitialize: true,\n        onSubmit: async (values, { resetForm }) => {\n            setEditableField(null);\n            const payload = {\n                ...values,\n                modifiedDate: new Date()\n            }\n            let response = await putApi(`api/opportunity/edit/${id}`, payload)\n            if (response.status === 200) {\n                fetchViewData()\n                toast.success(`${editableFieldName} Update successfully`)\n            } else {\n                toast.error(`${editableFieldName} not Update`)\n            }\n        },\n    });\n    const handleDoubleClick = (fieldName, value, name) => {\n        formik.setFieldValue(fieldName, value);\n        setEditableField(fieldName)\n        setEditableFieldName(name)\n    };\n\n    const handleBlur = (e) => {\n        formik.handleSubmit();\n    };\n    useEffect(() => {\n        fetchViewData()\n    }, [id, edit])\n\n    return (\n        <div>\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\n                <GridItem colSpan={{ base: 4 }}>\n                <Heading size=\"lg\" m={3}>\n                    {data?.opportunityName || \"\"}\n                </Heading>\n\n                </GridItem>\n                <GridItem colSpan={{ base: 4 }}>\n\n                    <Card >\n                        <Grid gap={4}>\n                            <GridItem colSpan={2}>\n                                <Box>\n                                    <Box display={\"flex\"} justifyContent={\"space-between\"} >\n                                        <Heading size=\"md\" mb={3}>\n                                            Opportunities Details\n                                        </Heading>\n                                        <Flex id=\"hide-btn\" >\n                                            <Menu>\n                                                {(user.role === 'superAdmin' || opportunityAccess?.create || opportunityAccess?.update || opportunityAccess?.delete) && <MenuButton variant=\"outline\" colorScheme='blackAlpha' size=\"sm\" va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\n                                                    Actions\n                                                </MenuButton>}\n                                                <MenuDivider />\n                                                <MenuList minWidth={2}>\n                                                    {(user.role === 'superAdmin' || opportunityAccess?.create) && <MenuItem onClick={() => { setEdit(true); setType(\"add\"); formik.resetForm() }\n                                                    } alignItems={'start'} color={'blue'} icon={<AddIcon />}>Add</MenuItem>}\n                                                    {(user.role === 'superAdmin' || opportunityAccess?.update) && <MenuItem onClick={() => { setEdit(true); setType(\"edit\") }} alignItems={'start'} icon={<EditIcon />}>Edit</MenuItem>}\n                                                    <MenuItem onClick={generatePDF} alignItems={\"start\"} icon={<FaFilePdf />} display={\"flex\"} style={{ alignItems: \"center\" }}>Print as PDF</MenuItem >\n\n                                                    {(user.role === 'superAdmin' || opportunityAccess?.delete) && <>\n                                                        <MenuDivider />\n                                                        <MenuItem alignItems={'start'} onClick={() => setDeleteManyModel(true)} color={'red'} icon={<DeleteIcon />}>Delete</MenuItem>\n                                                    </>}\n                                                </MenuList>\n                                            </Menu>\n                                            <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\" onClick={() => navigate(-1)} >\n                                                Back\n                                            </Button>\n                                        </Flex>\n                                    </Box>\n                                    <HSeparator />\n                                </Box>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Opportunity Name </Text>\n                                {\n                                    editableField === \"opportunityName\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"opportunityName\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.opportunityName}\n                                                borderColor={formik?.errors?.opportunityName && formik?.touched?.opportunityName ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.opportunityName && formik?.touched.opportunityName && formik?.errors.opportunityName}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"opportunityName\", data?.opportunityName, \"Opportunity Name\")}>{data?.opportunityName ? data?.opportunityName : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Account Name </Text>\n                                {\n                                    data?.accountName ?\n                                        <Link to={accountAccess?.view && `/accountView/${data?.accountName}`}>\n                                            <Text color={accountAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: accountAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: accountAccess?.view ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.accountName2 ? data?.accountName2 : ' - '}</Text>\n                                        </Link>\n                                        :\n                                        <Text color={accountAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: accountAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: accountAccess?.view ? 'underline' : 'none' } }}>{data?.accountName2 ? data?.accountName2 : ' - '}</Text>\n\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assigned User </Text>\n                                {\n                                    data?.assignUser ?\n                                        <Link to={user.role === 'superAdmin' && `/userView/${data?.assignUser}`}>\n                                            <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\n                                        </Link>\n                                        :\n                                        <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\n\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Type</Text>\n                                {\n                                    editableField === \"type\" ?\n                                        <>\n                                            <Select\n                                                value={formik?.values.type}\n                                                name=\"type\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                mb={formik?.errors.type && formik?.touched.type ? undefined : '10px'}\n                                                fontWeight='500'\n                                                placeholder={'Type'}\n                                                borderColor={formik?.errors.type && formik?.touched.type ? \"red.300\" : null}\n                                            >\n                                                <option value={\"Existing Bussiness\"} >Existing Bussiness</option>\n                                                <option value={\"New Bussiness\"} >New Bussiness</option>\n                                            </Select>\n                                            <Text mb='10px' color={'red'}> {formik?.errors.type && formik?.touched.type && formik?.errors.type}</Text>\n\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"type\", data?.type, \"Type\")}>{data?.type ? data?.type : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Lead Source</Text>\n                                {\n                                    editableField === \"leadSource\" ?\n                                        <>\n                                            <Select\n                                                value={formik?.values.leadSource}\n                                                name=\"leadSource\"\n                                                onChange={formik?.handleChange}\n                                                onBlur={handleBlur}\n                                                mb={formik?.errors.leadSource && formik?.touched.leadSource ? undefined : '10px'}\n                                                fontWeight='500'\n                                                placeholder={'Lead Source'}\n                                                borderColor={formik?.errors.leadSource && formik?.touched.leadSource ? \"red.300\" : null}\n                                            >\n                                                <option value={\"Cold Call\"}>Cold Call</option>\n                                                <option value={\"Existing Customer\"}>Existing Customer</option>\n                                                <option value={\"Self Generated\"}>Self Generated</option>\n                                                <option value={\"Employee\"}>Employee</option>\n                                                <option value={\"Partner\"}>Partner</option>\n                                                <option value={\"Public Relation\"}>Public Relation</option>\n                                                <option value={\"Direct Mail\"}>Direct Mail</option>\n                                                <option value={\"Conference\"}>Conference</option>\n                                                <option value={\"Trade Show\"}>Trade Show</option>\n                                                <option value={\"Web Site\"}>Web Site</option>\n                                                <option value={\"Word Of Mouth\"}>Word Of Mouth</option>\n                                                <option value={\"Email\"}>Email</option>\n                                                <option value={\"Other\"}>Other</option>\n                                            </Select>\n                                            <Text mb='10px' color={'red'}> {formik.errors.leadSource && formik.touched.leadSource && formik.errors.leadSource}</Text>\n                                        </>\n\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"leadSource\", data?.leadSource, \"Lead Source\")}>{data?.leadSource ? data?.leadSource : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Currency</Text>\n                                {\n                                    editableField === \"currency\" ?\n                                        <>\n                                            <Select\n                                                value={formik?.values.currency}\n                                                name=\"currency\"\n                                                onChange={formik?.handleChange}\n                                                onBlur={handleBlur}\n                                                mb={formik?.errors.currency && formik?.touched.currency ? undefined : '10px'}\n                                                fontWeight='500'\n                                                placeholder={'Select Currency'}\n                                                borderColor={formik?.errors.currency && formik?.touched.currency ? \"red.300\" : null}\n                                            >\n                                                <option value={\"$\"}>USD</option>\n                                            </Select>\n                                            <Text mb='10px' color={'red'}> {formik?.errors.currency && formik?.touched.currency && formik?.errors.currency}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"currency\", data?.currency, \"Currency\")}>{data?.currency ? data?.currency : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Opportunity Amount</Text>\n                                {\n                                    editableField === \"opportunityAmount\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"opportunityAmount\"\n                                                type=\"number\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.opportunityAmount}\n                                                autoFocus\n                                                borderColor={formik?.errors?.opportunityAmount && formik?.touched?.opportunityAmount ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.opportunityAmount && formik?.touched.opportunityAmount && formik?.errors.opportunityAmount}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"opportunityAmount\", data?.opportunityAmount, \"Opportunity Amount\")}>{data?.opportunityAmount ? data?.opportunityAmount : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Amount</Text>\n                                {\n                                    editableField === \"amount\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"amount\"\n                                                type=\"number\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.amount}\n                                                autoFocus\n                                                borderColor={formik?.errors?.amount && formik?.touched?.amount ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.amount && formik?.touched.amount && formik?.errors.amount}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"amount\", data?.amount, \"Amount\")}>{data?.amount ? data?.amount : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Expected Close Date</Text>\n                                {\n                                    editableField === \"expectedCloseDate\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"expectedCloseDate\"\n                                                type=\"date\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={dayjs(formik.values.expectedCloseDate).format(\"YYYY-MM-DD\")}\n                                                autoFocus\n                                                borderColor={formik?.errors?.expectedCloseDate && formik?.touched?.expectedCloseDate ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.expectedCloseDate && formik?.touched.expectedCloseDate && formik?.errors.expectedCloseDate}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"expectedCloseDate\", data?.expectedCloseDate, \"Expected Close Date\")}>{data?.expectedCloseDate ? dayjs(data?.expectedCloseDate).format(\"YYYY-MM-DD\") : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Next Step</Text>\n                                {\n                                    editableField === \"nextStep\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"nextStep\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.nextStep}\n                                                autoFocus\n                                                borderColor={formik?.errors?.nextStep && formik?.touched?.nextStep ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.nextStep && formik?.touched.nextStep && formik?.errors.nextStep}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"nextStep\", data?.nextStep, \"Next Step\")}>{data?.nextStep ? data?.nextStep : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Sales Stage</Text>\n                                {\n                                    editableField === \"salesStage\" ?\n                                        <>\n                                            <Select\n                                                value={formik?.values.salesStage}\n                                                name=\"salesStage\"\n                                                onChange={formik?.handleChange}\n                                                onBlur={handleBlur}\n                                                mb={formik?.errors.salesStage && formik?.touched.salesStage ? undefined : '10px'}\n                                                fontWeight='500'\n                                                placeholder={'Sales Stage'}\n                                                borderColor={formik?.errors.salesStage && formik?.touched.salesStage ? \"red.300\" : null}\n                                            >\n                                                <option value={\"Prospecting\"}>Prospecting</option>\n                                                <option value={\"Qualification\"}>Qualification</option>\n                                                <option value={\"Needs Analysis\"}>Needs Analysis</option>\n                                                <option value={\"Value Propositon\"}>Value Propositon</option>\n                                                <option value={\"Identifying Decision Makers\"}>Identifying Decision Makers</option>\n                                                <option value={\"Perception Analysis\"}>Perception Analysis</option>\n                                                <option value={\"Proposal/Price Quote\"}>Proposal/Price Quote</option>\n                                                <option value={\"Negotiation/Review\"}>Negotiation/Review</option>\n                                                <option value={\"Closed/Won\"}>Closed/Won</option>\n                                                <option value={\"Closed/Lost\"}>Closed/Lost</option>\n                                            </Select>\n                                            <Text mb='10px' color={'red'}> {formik?.errors.salesStage && formik?.touched.salesStage && formik?.errors.salesStage}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"salesStage\", data?.salesStage, \"Sales Stage\")}>{data?.salesStage ? data?.salesStage : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Probability</Text>\n                                {\n                                    editableField === \"probability\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"probability\"\n                                                type=\"number\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.probability}\n                                                autoFocus\n                                                borderColor={formik?.errors?.probability && formik?.touched?.probability ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.probability && formik?.touched.probability && formik?.errors.probability}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"probability\", data?.probability, \"Probability\")}>{data?.probability ? data?.probability : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Description</Text>\n                                {\n                                    editableField === \"description\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"description\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.description}\n                                                autoFocus\n                                                borderColor={formik?.errors?.description && formik?.touched?.description ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description, \"Description\")}>{data?.description ? data?.description : ' - '}</Text>\n                                }\n                            </GridItem>\n\n\n                            {/* <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\n                                <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assign To  </Text>\n                                <Link to={data?.assignTo ? opportunityAccess?.view && `/contactView/${data?.assignTo}` : leadAccess?.view && `/leadView/${data?.assignToLead}`}>\n                                    <Text color={(data?.category === 'contact' && (opportunityAccess?.view || user?.role === 'superAdmin')) ? 'brand.600' : (leadAccess?.view || user?.role === 'superAdmin' && data?.category === 'lead') ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignToName ? data?.assignToName : ' - '}</Text>\n                                </Link>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\n                                <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\n                                {\n                                    editableField === \"description\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"description\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.description}\n                                                autoFocus\n                                                borderColor={formik?.errors?.description && formik?.touched?.description ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description)}>{data?.description ? data?.description : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\n                                {\n                                    editableField === \"notes\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"notes\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.notes}\n                                                autoFocus\n                                                borderColor={formik?.errors?.notes && formik?.touched?.notes ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.notes && formik?.touched.notes && formik?.errors.notes}</Text>\n\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"notes\", data?.notes)}>{data?.notes ? data?.notes : ' - '}</Text>\n                                }\n                            </GridItem> */}\n                        </Grid>\n                    </Card>\n                </GridItem>\n\n            </Grid>\n            {\n                (opportunityAccess?.update || opportunityAccess?.delete || user?.role === 'superAdmin') && <Card mt={3}>\n                    <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\n                        <GridItem colStart={6} >\n                            <Flex justifyContent={\"right\"}>\n                                {(opportunityAccess?.update || user?.role === 'superAdmin') && <Button size=\"sm\" onClick={() => { setEdit(true); setType(\"edit\") }} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>}\n                                {(opportunityAccess?.delete || user?.role === 'superAdmin') && <Button size=\"sm\" style={{ background: 'red.800' }} onClick={() => setDeleteManyModel(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\n                            </Flex>\n                        </GridItem>\n                    </Grid>\n                </Card>\n            }\n            <AddEdit isOpen={edit} size=\"lg\" onClose={() => setEdit(false)} viewClose={onClose} selectedId={id?.event ? id?.event?._def?.extendedProps?._id : id} type={type} />\n            <CommonDeleteModel isOpen={deleteManyModel} onClose={() => setDeleteManyModel(false)} type='Opportunities' handleDeleteData={handleDeleteOpportunities} ids={[id]} />\n        </div >\n    )\n}\n\nexport default View\n"],"names":["props","_formik$errors","_formik$touched","_formik$errors2","_formik$touched2","_formik$errors3","_formik$touched3","_formik$errors4","_formik$touched4","_formik$errors5","_formik$touched5","_formik$errors6","_formik$touched6","_formik$errors7","_formik$touched7","_id$event","_id$event$_def","_id$event$_def$extend","params","useParams","id","user","JSON","parse","localStorage","getItem","opportunityAccess","accountAccess","HasAccess","data","setData","useState","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","deleteManyModel","setDeleteManyModel","loading","setLoading","navigate","useNavigate","type","setType","editableField","setEditableField","editableFieldName","setEditableFieldName","fetchViewData","Date","toISOString","split","async","result","getApi","initialValues","opportunityName","accountName","assignUser","leadSource","currency","opportunityAmount","amount","expectedCloseDate","nextStep","salesStage","probability","description","modifiedBy","_id","formik","useFormik","validationSchema","opprtunitiesSchema","enableReinitialize","onSubmit","values","_ref","resetForm","payload","_objectSpread","modifiedDate","putApi","concat","status","toast","success","error","handleDoubleClick","fieldName","value","name","setFieldValue","handleBlur","e","handleSubmit","useEffect","_jsxs","children","Grid","templateColumns","gap","_jsx","GridItem","colSpan","base","Heading","size","m","Card","Box","display","justifyContent","mb","Flex","Menu","role","create","update","delete","MenuButton","variant","colorScheme","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","onClick","alignItems","color","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","moment","format","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","FaFilePdf","_Fragment","DeleteIcon","leftIcon","IoIosArrowBack","HSeparator","md","Text","fontSize","fontWeight","Input","onChange","handleChange","onBlur","borderColor","errors","touched","autoFocus","onDoubleClick","Link","to","view","sx","textDecoration","cursor","accountName2","assignUserName","Select","undefined","placeholder","dayjs","mt","colStart","background","AddEdit","isOpen","viewClose","selectedId","event","_def","extendedProps","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","log"],"sourceRoot":""}