{"version":3,"file":"static/js/5615.6b09540d.chunk.js","mappings":"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","sources":["components/commonFileUpload/index.js","views/admin/account/components/AccountAdvanceSearch.js","views/admin/account/components/ImportModel.js","views/admin/account/index.js"],"sourcesContent":["// Chakra imports\nimport {\n    Box, Flex,\n    Grid,\n    GridItem,\n    Icon,\n    Text,\n    useColorModeValue\n} from \"@chakra-ui/react\";\n// Custom components\n// Assets\nimport Dropzone from \"components/Dropzone\";\nimport { MdUpload } from \"react-icons/md\";\n\nexport default function CommonFileUpload(props) {\n    // const { used, total, count, ...rest } = props;\n    const { count, text, onFileSelect } = props;\n    // Chakra Color Mode\n    const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\n    const brandColor = useColorModeValue(\"brand.500\", \"white\");\n    const textColorSecondary = \"gray.400\";\n    return (\n        <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\n            <GridItem colSpan={{ base: 12 }} >\n                <Dropzone\n                    w={{ base: \"100%\" }}\n                    me='36px'\n                    minH={200}\n                    img={text === 'Property Photos' ? 'img' : ''}\n                    csv={'csv'}\n                    height={'100%'}\n                    onFileSelect={onFileSelect}\n                    isMultipleAllow={false}\n                    content={\n                        <Box>\n                            <Icon as={MdUpload} w='80px' h='80px' color={brandColor} />\n                            <Flex justify='center' mx='auto' mb='12px'>\n                                <Text fontSize='xl' fontWeight='700' color={brandColor}>\n                                    Upload File\n                                </Text>\n                            </Flex>\n                            {count > 0 && <Text fontSize='sm' fontWeight='500' color='secondaryGray.500'>\n                                Selected Files : {count}\n                            </Text>}\n                        </Box>\n                    }\n                />\n            </GridItem>\n            <GridItem colSpan={{ base: 12 }} >\n                <Flex direction='column' >\n                    <Text\n                        color={textColorPrimary}\n                        fontWeight='bold'\n                        textAlign='start'\n                        fontSize='2xl'\n                        mt={{ base: \"20px\" }}>\n                        Upload {text}\n                    </Text>\n                    <Text\n                        color={textColorSecondary}\n                        fontSize='md'\n                        my={{ base: \"auto\" }}\n                        mx='auto'\n                        textAlign='start'>\n                        Accepted File Type (csv, xlsx file - 15MB max) only 1 file\n                    </Text>\n                </Flex>\n            </GridItem>\n        </Grid>\n    );\n}","import React from 'react';\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Grid, GridItem, Input, FormLabel, Select, Text, Button, } from '@chakra-ui/react';\nimport Spinner from 'components/spinner/Spinner';\nimport { setSearchValue, getSearchData, setGetTagValues } from '../../../../redux/slices/advanceSearchSlice';\nimport { useDispatch } from 'react-redux';\n\n\n\nconst OpprtunityAdvanceSearch = (props) => {\n    const { state, allData, advanceSearch, setAdvanceSearch, isLoding, setSearchedData, setDisplaySearchData, setSearchClear, setSearchbox } = props;\n\n    const dispatch = useDispatch();\n    const initialValues = {\n        name: '',\n        officePhone: '',\n        fax: '',\n        emailAddress: '',\n    }\n    const validationSchema = yup.object({\n        name: yup.string(),\n        officePhone: yup.string(),\n        fax: yup.string(),\n        emailAddress: yup.string()\n    });\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: (values, { resetForm }) => {\n            dispatch(setSearchValue(values))\n            dispatch(getSearchData({ values: values, allData: allData, type: 'Account' }))\n            // const searchResult = allData?.filter(\n            //     (item) =>\n            //         (!values?.senderName || (item?.senderName && item?.senderName.toLowerCase().includes(values?.senderName?.toLowerCase()))) &&\n            //         (!values?.realetedTo || (values.realetedTo === \"contact\" ? item.createBy : item.createByLead)) &&\n            //         (!values?.createByName || (item?.createByName && item?.createByName.toLowerCase().includes(values?.createByName?.toLowerCase())))\n            // )\n            // let getValue = [values.senderName, values?.realetedTo, values?.createByName].filter(value => value);\n            const getValue = [\n                {\n                    name: [\"name\"],\n                    value: values.name\n                },\n                {\n                    name: [\"officePhone\"],\n                    value: values.officePhone\n                },\n                {\n                    name: [\"fax\"],\n                    value: values.fax\n                },\n                {\n                    name: [\"emailAddress\"],\n                    value: values.emailAddress\n                },\n            ]\n            dispatch(setGetTagValues(getValue.filter(item => item.value)))\n            setDisplaySearchData(true)\n            setAdvanceSearch(false)\n            resetForm();\n            setSearchbox('');\n        }\n    })\n\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm, dirty } = formik;\n\n    return (\n        <>\n            <Modal onClose={() => { setAdvanceSearch(false); resetForm() }} isOpen={advanceSearch} isCentered>\n                <ModalOverlay />\n                <ModalContent>\n                    <ModalHeader>Advance Search</ModalHeader>\n                    <ModalCloseButton onClick={() => { setAdvanceSearch(false); resetForm() }} />\n                    <ModalBody>\n                        <Grid templateColumns=\"repeat(12, 1fr)\" mb={3} gap={2}>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\n                                    Account Name\n                                </FormLabel>\n                                <Input\n                                    fontSize='sm'\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    value={values?.name}\n                                    name=\"name\"\n                                    placeholder='Enter Account Name'\n                                    fontWeight='500'\n                                />\n                                <Text mb='10px' color={'red'}> {errors.name && touched.name && errors.name}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\n                                    Office Phone\n                                </FormLabel>\n                                <Input\n                                    fontSize='sm'\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    value={values?.officePhone}\n                                    name=\"officePhone\"\n                                    type=\"number\"\n                                    placeholder='Enter Office Phone'\n                                    fontWeight='500'\n                                />\n                                <Text mb='10px' color={'red'}> {errors.officePhone && touched.officePhone && errors.officePhone}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\n                                    Fax\n                                </FormLabel>\n                                <Input\n                                    fontSize='sm'\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    value={values?.fax}\n                                    name=\"fax\"\n                                    placeholder='Enter Fax'\n                                    type=\"number\"\n                                    fontWeight='500'\n                                />\n                                <Text mb='10px' color={'red'}> {errors.fax && touched.fax && errors.fax}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\n                                    Email Address\n                                </FormLabel>\n                                <Input\n                                    fontSize='sm'\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    value={values?.emailAddress}\n                                    name=\"emailAddress\"\n                                    placeholder='Enter Email Address'\n                                    type=\"email\"\n                                    fontWeight='500'\n                                />\n                                <Text mb='10px' color={'red'}> {errors.emailAddress && touched.emailAddress && errors.emailAddress}</Text>\n                            </GridItem>\n\n\n                        </Grid>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button size=\"sm\" variant=\"brand\" mr={2} onClick={handleSubmit} disabled={isLoding || !dirty ? true : false} >{isLoding ? <Spinner /> : 'Search'}</Button>\n                        <Button size=\"sm\" variant=\"outline\" colorScheme=\"red\" onClick={() => resetForm()}>Clear</Button>\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n        </>\n    )\n}\n\nexport default OpprtunityAdvanceSearch\n","import { Button, Grid, GridItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\nimport Spinner from 'components/spinner/Spinner'\nimport { useFormik } from 'formik'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport CommonFileUpload from 'components/commonFileUpload'\n\nconst ImportModal = (props) => {\n    const { onClose, isOpen, text, customFields } = props\n    const [isLoding, setIsLoding] = useState(false)\n    const navigate = useNavigate();\n\n    const initialValues = {\n        accounts: ''\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        onSubmit: (values, { resetForm }) => {\n            AddData()\n            resetForm();\n        },\n    });\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm } = formik\n\n    const AddData = async () => {\n        try {\n            setIsLoding(true)\n            resetForm()\n\n            if (values.accounts) {\n                onClose();\n                navigate('/accountImport', { state: { fileData: values.accounts, customFields: customFields } });\n            }\n\n        } catch (e) {\n            console.log(e);\n        }\n        finally {\n            setIsLoding(false)\n        }\n    };\n\n    return (\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Import Account</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\n                        <GridItem colSpan={{ base: 12 }}>\n                            <CommonFileUpload count={values.accounts.length} onFileSelect={(file) => setFieldValue('accounts', file)} text={text} />\n                            <Text mb='10px' color={'red'}> {errors.accounts && touched.accounts && <>Please Select {text}</>}</Text>\n                        </GridItem>\n                    </Grid>\n                </ModalBody>\n                <ModalFooter>\n                    <Button size=\"sm\" variant='brand' onClick={handleSubmit} disabled={isLoding ? true : false} >{isLoding ? <Spinner /> : 'Save'}</Button>\n                    <Button sx={{\n                        marginLeft: 2,\n                        textTransform: \"capitalize\",\n                    }} variant=\"outline\"\n                        colorScheme=\"red\" size=\"sm\" onClick={() => {\n                            onClose()\n                            formik.resetForm()\n                        }}>Close</Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nexport default ImportModal","import { useEffect, useState } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { DeleteIcon, EditIcon, ViewIcon } from '@chakra-ui/icons';\nimport { Button, Menu, MenuButton, MenuItem, MenuList, Text, useDisclosure } from '@chakra-ui/react';\nimport { getApi, deleteManyApi } from 'services/api';\nimport { HasAccess } from '../../../redux/accessUtils';\nimport CommonCheckTable from '../../../components/reactTable/checktable';\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport { CiMenuKebab } from 'react-icons/ci';\nimport moment from 'moment';\nimport { MdLeaderboard } from 'react-icons/md';\nimport { IoIosContact } from 'react-icons/io';\nimport AddEdit from './AddEdit';\nimport { useDispatch } from 'react-redux';\nimport { fetchEmailsData } from '../../../redux/slices/emailsSlice';\nimport { toast } from 'react-toastify';\nimport AccountAdvanceSearch from './components/AccountAdvanceSearch';\nimport { fetchAccountData } from '../../../redux/slices/accountSlice';\nimport CommonDeleteModel from '../../../components/commonDeleteModel'\nimport ImportModal from './components/ImportModel';\n\nconst Index = (props) => {\n    const [action, setAction] = useState(false);\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const [selectedValues, setSelectedValues] = useState([]);\n    const [advanceSearch, setAdvanceSearch] = useState(false);\n    const [getTagValuesOutSide, setGetTagValuesOutside] = useState([]);\n    const [searchboxOutside, setSearchboxOutside] = useState('');\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [isLoding, setIsLoding] = useState(false);\n    const [data, setData] = useState([]);\n    const [displaySearchData, setDisplaySearchData] = useState(false);\n    const [searchedData, setSearchedData] = useState([]);\n    const [selectedId, setSelectedId] = useState();\n    const [deleteModel, setDelete] = useState(false);\n    const [edit, setEdit] = useState(false);\n    const [type, setType] = useState(\"\")\n    const [isImport, setIsImport] = useState(false);\n\n    const [permission] = HasAccess([\"Account\"]);\n\n    const actionHeader = {\n        Header: \"Action\",\n        accessor: \"action\",\n        isSortable: false,\n        center: true,\n        cell: ({ row, i }) => (\n            <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\n                <Menu isLazy>\n                    <MenuButton>\n                        <CiMenuKebab />\n                    </MenuButton>\n                    <MenuList\n                        minW={\"fit-content\"}\n                        transform={\"translate(1520px, 173px);\"}\n                    >\n                        {permission?.update && (\n                            <MenuItem\n                                py={2.5}\n                                icon={<EditIcon fontSize={15} mb={1} />}\n                                onClick={() => {\n                                    setType(\"edit\");\n                                    onOpen();\n                                    setSelectedId(row?.values?._id);\n                                }}\n                            >\n                                Edit\n                            </MenuItem>\n                        )}\n                        {permission?.view && (\n                            <MenuItem\n                                py={2.5}\n                                color={\"green\"}\n                                icon={<ViewIcon mb={1} fontSize={15} />}\n                                onClick={() => {\n                                    navigate(`/accountView/${row?.values?._id}`);\n                                }}\n                            >\n                                View\n                            </MenuItem>\n                        )}\n                        {permission?.delete && (\n                            <MenuItem\n                                py={2.5}\n                                color={\"red\"}\n                                icon={<DeleteIcon fontSize={15} mb={1} />}\n                                onClick={() => {\n                                    setDelete(true);\n                                    setSelectedValues([row?.values?._id]);\n                                }}\n                            >\n                                Delete\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Menu>\n            </Text>\n        ),\n    };\n    const tableColumns = [\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n        {\n            Header: 'Account Name', accessor: 'name', cell: (cell) => (\n                <div className=\"selectOpt\">\n                    <Text\n                        onClick={() => handleViewOpen(cell?.row?.original._id)}\n                        me=\"10px\"\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\n                        color='brand.600'\n                        fontSize=\"sm\"\n                        fontWeight=\"700\"\n                    >\n                        {cell?.value}\n                    </Text>\n                </div>\n            )\n        },\n        {\n            Header: 'Office Phone', accessor: 'officePhone',\n        },\n        {\n            Header: 'Fax', accessor: 'fax',\n        },\n        {\n            Header: 'Email Address', accessor: 'emailAddress',\n        },\n        ...(permission?.update || permission?.view || permission?.delete ? [actionHeader] : [])\n\n    ];\n    const handleViewOpen = (id) => {\n        navigate(`/accountView/${id}`)\n    }\n    const customFields = [\n        {\n            \"name\": \"name\",\n            \"label\": \"Account Name\",\n            \"type\": \"text\",\n            \"fixed\": false,\n            \"isDefault\": false,\n            \"delete\": false,\n            \"belongsTo\": null,\n            \"backendType\": \"Mixed\",\n            \"isTableField\": false,\n            \"isView\": false,\n            \"options\": [\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6694b8112cf3cbec6b5286c0\"\n                },\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6694b8112cf3cbec6b5286c1\"\n                }\n            ],\n            \"validation\": [\n                {\n                    \"require\": true,\n                    \"message\": \"Account Name is required\",\n                    \"_id\": \"6694b8112cf3cbec6b5286c2\"\n                },\n                {\n                    \"min\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6694b8112cf3cbec6b5286c3\"\n                },\n                {\n                    \"max\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6694b8112cf3cbec6b5286c4\"\n                },\n                {\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"match\": false,\n                    \"_id\": \"6694b8112cf3cbec6b5286c5\"\n                },\n                {\n                    \"message\": \"\",\n                    \"formikType\": \"\",\n                    \"_id\": \"6694b8112cf3cbec6b5286c6\"\n                }\n            ],\n            \"_id\": \"6694b8112cf3cbec6b5286bf\"\n        },\n        {\n            \"name\": \"officePhone\",\n            \"label\": \"Office Phone\",\n            \"type\": \"number\",\n            \"fixed\": false,\n            \"isDefault\": false,\n            \"delete\": false,\n            \"belongsTo\": null,\n            \"backendType\": \"Mixed\",\n            \"isTableField\": false,\n            \"isView\": false,\n            \"options\": [\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6694b8662cf3cbec6b5289fd\"\n                },\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6694b8662cf3cbec6b5289fe\"\n                }\n            ],\n            \"validation\": [\n                {\n                    \"require\": false,\n                    \"message\": \"\",\n                    \"_id\": \"6694b8662cf3cbec6b5289ff\"\n                },\n                {\n                    \"min\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6694b8662cf3cbec6b528a00\"\n                },\n                {\n                    \"max\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6694b8662cf3cbec6b528a01\"\n                },\n                {\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"match\": false,\n                    \"_id\": \"6694b8662cf3cbec6b528a02\"\n                },\n                {\n                    \"message\": \"\",\n                    \"formikType\": \"\",\n                    \"_id\": \"6694b8662cf3cbec6b528a03\"\n                }\n            ],\n            \"_id\": \"6694b8662cf3cbec6b5289fc\"\n        },\n        {\n            \"name\": \"fax\",\n            \"label\": \"Fax\",\n            \"type\": \"number\",\n            \"fixed\": false,\n            \"isDefault\": false,\n            \"delete\": false,\n            \"belongsTo\": null,\n            \"backendType\": \"Mixed\",\n            \"isTableField\": false,\n            \"isView\": false,\n            \"options\": [\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6694b8742cf3cbec6b528d52\"\n                },\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6694b8742cf3cbec6b528d53\"\n                }\n            ],\n            \"validation\": [\n                {\n                    \"require\": false,\n                    \"message\": \"\",\n                    \"_id\": \"6694b8742cf3cbec6b528d54\"\n                },\n                {\n                    \"min\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6694b8742cf3cbec6b528d55\"\n                },\n                {\n                    \"max\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6694b8742cf3cbec6b528d56\"\n                },\n                {\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"match\": false,\n                    \"_id\": \"6694b8742cf3cbec6b528d57\"\n                },\n                {\n                    \"message\": \"\",\n                    \"formikType\": \"\",\n                    \"_id\": \"6694b8742cf3cbec6b528d58\"\n                }\n            ],\n            \"_id\": \"6694b8742cf3cbec6b528d51\"\n        },\n        {\n            \"name\": \"emailAddress\",\n            \"label\": \"Email Address\",\n            \"type\": \"text\",\n            \"fixed\": false,\n            \"isDefault\": false,\n            \"delete\": false,\n            \"belongsTo\": null,\n            \"backendType\": \"Mixed\",\n            \"isTableField\": false,\n            \"isView\": false,\n            \"options\": [\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6694b8942cf3cbec6b5290bf\"\n                },\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6694b8942cf3cbec6b5290c0\"\n                }\n            ],\n            \"validation\": [\n                {\n                    \"require\": false,\n                    \"message\": \"\",\n                    \"_id\": \"6694b8942cf3cbec6b5290c1\"\n                },\n                {\n                    \"min\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6694b8942cf3cbec6b5290c2\"\n                },\n                {\n                    \"max\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6694b8942cf3cbec6b5290c3\"\n                },\n                {\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"match\": false,\n                    \"_id\": \"6694b8942cf3cbec6b5290c4\"\n                },\n                {\n                    \"message\": \"\",\n                    \"formikType\": \"email\",\n                    \"_id\": \"6694b8942cf3cbec6b5290c5\"\n                }\n            ],\n            \"_id\": \"6694b8942cf3cbec6b5290be\"\n        }\n    ]\n\n    const handleOpenAdd = () => {\n        onOpen();\n        setType(\"add\")\n    }\n\n    const handleDelete = async (ids) => {\n        try {\n            setIsLoding(true);\n            let response = await deleteManyApi(\"api/account/deleteMany\", ids);\n            if (response.status === 200) {\n                toast.success(`Account Delete successfully`)\n                setSelectedValues([]);\n                setDelete(false);\n                setAction((pre) => !pre);\n            }\n        } catch (error) {\n            console.log(error);\n            toast.error(`server error`)\n\n        } finally {\n            setIsLoding(false);\n        }\n    };\n\n    const fetchData = async () => {\n        setIsLoding(true)\n        const result = await dispatch(fetchAccountData())\n\n        if (result.payload.status === 200) {\n            setData(result?.payload?.data);\n        } else {\n            toast.error(\"Failed to fetch data\", \"error\");\n        }\n        setIsLoding(false)\n    }\n\n    // const [columns, setColumns] = useState([...tableColumns]);\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\n\n\n    useEffect(() => {\n        fetchData();\n    }, [action])\n\n    return (\n        <div>\n            <CommonCheckTable\n                title={\"Account\"}\n                isLoding={isLoding}\n                columnData={tableColumns ?? []}\n                // dataColumn={dataColumn ?? []}\n                allData={data ?? []}\n                tableData={data}\n                searchDisplay={displaySearchData}\n                setSearchDisplay={setDisplaySearchData}\n                searchedDataOut={searchedData}\n                setSearchedDataOut={setSearchedData}\n                tableCustomFields={[]}\n                access={permission}\n                // action={action}\n                // setAction={setAction}\n                // selectedColumns={selectedColumns}\n                // setSelectedColumns={setSelectedColumns}\n                // isOpen={isOpen}\n                // onClose={onclose}\n                setIsImport={setIsImport}\n                onOpen={handleOpenAdd}\n                selectedValues={selectedValues}\n                setSelectedValues={setSelectedValues}\n                setDelete={setDelete}\n                deleteMany={false}\n                AdvanceSearch={\n                    <Button variant=\"outline\" colorScheme='brand' leftIcon={<SearchIcon />} mt={{ sm: \"5px\", md: \"0\" }} size=\"sm\" onClick={() => setAdvanceSearch(true)}>Advance Search</Button>\n                }\n                getTagValuesOutSide={getTagValuesOutSide}\n                searchboxOutside={searchboxOutside}\n                setGetTagValuesOutside={setGetTagValuesOutside}\n                setSearchboxOutside={setSearchboxOutside}\n                handleSearchType=\"AccountSearch\"\n            />\n\n            <AccountAdvanceSearch\n                advanceSearch={advanceSearch}\n                setAdvanceSearch={setAdvanceSearch}\n                setSearchedData={setSearchedData}\n                setDisplaySearchData={setDisplaySearchData}\n                allData={data ?? []}\n                setAction={setAction}\n                setGetTagValues={setGetTagValuesOutside}\n                setSearchbox={setSearchboxOutside}\n            />\n\n            <AddEdit isOpen={isOpen} size={\"lg\"} onClose={onClose} setAction={setAction} type={type} selectedId={selectedId} />\n            <CommonDeleteModel\n                isOpen={deleteModel}\n                onClose={() => setDelete(false)}\n                type=\"Account\"\n                handleDeleteData={handleDelete}\n                ids={selectedValues}\n            />\n\n            <ImportModal\n                text=\"Account file\"\n                isOpen={isImport}\n                onClose={setIsImport}\n                customFields={customFields}\n            />\n        </div>\n    )\n}\n\nexport default Index"],"names":["CommonFileUpload","props","count","text","onFileSelect","textColorPrimary","useColorModeValue","brandColor","_jsxs","Grid","templateColumns","gap","children","_jsx","GridItem","colSpan","base","Dropzone","w","me","minH","img","csv","height","isMultipleAllow","content","Box","Icon","as","MdUpload","h","color","Flex","justify","mx","mb","Text","fontSize","fontWeight","direction","textAlign","mt","my","state","allData","advanceSearch","setAdvanceSearch","isLoding","setSearchedData","setDisplaySearchData","setSearchClear","setSearchbox","dispatch","useDispatch","validationSchema","yup","name","officePhone","fax","emailAddress","formik","useFormik","initialValues","onSubmit","values","_ref","resetForm","setSearchValue","getSearchData","type","getValue","value","setGetTagValues","filter","item","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","dirty","_Fragment","Modal","onClose","isOpen","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","onClick","ModalBody","md","FormLabel","display","ms","Input","onChange","onBlur","placeholder","ModalFooter","Button","size","variant","mr","disabled","Spinner","colorScheme","customFields","setIsLoding","useState","navigate","useNavigate","accounts","AddData","async","fileData","e","console","log","length","file","sx","marginLeft","textTransform","action","setAction","onOpen","useDisclosure","selectedValues","setSelectedValues","getTagValuesOutSide","setGetTagValuesOutside","searchboxOutside","setSearchboxOutside","JSON","parse","localStorage","getItem","data","setData","displaySearchData","searchedData","selectedId","setSelectedId","deleteModel","setDelete","edit","setEdit","setType","isImport","setIsImport","permission","HasAccess","actionHeader","Header","accessor","isSortable","center","cell","row","i","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","minW","transform","update","MenuItem","py","icon","EditIcon","_row$values","_id","view","ViewIcon","_row$values2","concat","delete","DeleteIcon","_row$values3","tableColumns","width","className","_cell$row","handleViewOpen","original","textDecoration","cursor","id","useEffect","result","fetchAccountData","_result$payload","payload","status","toast","error","fetchData","CommonCheckTable","title","columnData","tableData","searchDisplay","setSearchDisplay","searchedDataOut","setSearchedDataOut","tableCustomFields","access","handleOpenAdd","deleteMany","AdvanceSearch","leftIcon","SearchIcon","sm","handleSearchType","AccountAdvanceSearch","AddEdit","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","success","pre","ImportModal"],"sourceRoot":""}