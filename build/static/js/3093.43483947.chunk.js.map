{"version":3,"file":"static/js/3093.43483947.chunk.js","mappings":"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","sources":["views/admin/phoneCall/View.js"],"sourcesContent":["import { Box, Button, Flex, Grid, GridItem, Heading, Text } from \"@chakra-ui/react\";\nimport Card from \"components/card/Card\";\nimport { HSeparator } from \"components/separator/Separator\";\nimport Spinner from \"components/spinner/Spinner\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport { getApi } from \"services/api\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport html2pdf from \"html2pdf.js\";\nconst View = () => {\n\n    const param = useParams()\n    const navigate = useNavigate()\n\n    const [data, setData] = useState()\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    const [isLoding, setIsLoding] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n    const fetchData = async () => {\n        setIsLoding(true)\n        let response = await getApi('api/phoneCall/view/', param.id)\n        setData(response?.data);\n        setIsLoding(false)\n    }\n    const generatePDF = () => {\n        setLoading(true)\n        const element = document.getElementById(\"reports\");\n        const hideBtn = document.getElementById(\"hide-btn\");\n\n        if (element) {\n            hideBtn.style.display = 'none';\n            html2pdf()\n                .from(element)\n                .set({\n                    margin: [0, 0, 0, 0],\n                    filename: `PhoneCall_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n                    image: { type: \"jpeg\", quality: 0.98 },\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n                })\n                .save().then(() => {\n                    setLoading(false)\n                    hideBtn.style.display = '';\n                })\n            // }, 500);\n        } else {\n            console.error(\"Element with ID 'reports' not found.\");\n            setLoading(false)\n        }\n    };\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    const [contactAccess, leadAccess] = HasAccess(['Contacts', 'Leads'])\n\n    return (\n        <>\n\n            {isLoding ?\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\n                    <Spinner />\n                </Flex> : <>\n                    <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\n                        <GridItem colSpan={{ base: 4 }}>\n                            <Heading size=\"lg\" m={3}>\n                                {data?.senderName || \"\"}\n                            </Heading>\n                        </GridItem>\n                        <GridItem colSpan={{ base: 4 }}>\n                            <Card >\n                                <Grid gap={4}>\n                                    <GridItem colSpan={2}>\n                                        <Box>\n                                            <Box display={\"flex\"} justifyContent={\"space-between\"}>\n                                                <Heading size=\"md\" mb={3}>\n                                                    Call Details\n                                                </Heading>\n                                                <Box id=\"hide-btn\">\n                                                    <Button leftIcon={<FaFilePdf />} size='sm' variant=\"brand\" onClick={generatePDF} disabled={loading}>\n                                                        {loading ? \"Please Wait...\" : \"Print as PDF\"}\n                                                    </Button>\n                                                    <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\" onClick={() => navigate(-1)} style={{ marginLeft: 10 }}>\n                                                        Back\n                                                    </Button>\n                                                </Box>\n\n                                            </Box>\n                                            <HSeparator />\n                                        </Box>\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Sender </Text>\n                                        <Text>{data?.senderName ? data?.senderName : ' - '}</Text>\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Recipient </Text>\n                                        <Text>{data?.recipient ? data?.recipient : ' - '}</Text>\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Create to </Text>\n                                        {data?.createBy ?\n                                            <Link to={contactAccess?.view && `/contactView/${data?.createBy}`}>\n                                                <Text color={contactAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: contactAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: contactAccess?.view ? 'underline' : 'none' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\n                                            </Link> : <Link to={leadAccess?.view && `/leadView/${data?.createByLead}`}>\n                                                <Text color={leadAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: leadAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: leadAccess?.view ? 'underline' : 'none' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\n                                            </Link>\n                                        }\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Realeted To </Text>\n                                        <Text>{data?.createBy ? \"contact\" : data?.createByLead && \"lead\"}</Text>\n                                    </GridItem>\n\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Start Date </Text>\n                                        <Text> {data?.startDate ? moment(data?.startDate).format('lll ') : ' - '} </Text>\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>End Date </Text>\n                                        <Text> {data?.endDate ? moment(data?.endDate).format('lll ') : ' - '} </Text>\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Timestamp </Text>\n                                        <Text> {data?.timestamp ? moment(data?.timestamp).format('DD-MM-YYYY  h:mma ') : ' - '} [{data?.timestamp ? moment(data?.timestamp).toNow() : ' - '}]</Text>\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Call Duration </Text>\n                                        <Text>{data?.callDuration ? data?.callDuration : ' - '}</Text>\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 2 }}>\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Call Notes </Text>\n                                        <pre style={{ whiteSpace: 'pre-wrap' }}>{data?.callNotes ? data?.callNotes : ' - '}</pre>\n                                    </GridItem>\n                                </Grid>\n                            </Card>\n                        </GridItem>\n\n                    </Grid>\n                </>}\n\n        </>\n    );\n};\n\nexport default View;\n"],"names":["View","param","useParams","navigate","useNavigate","data","setData","useState","isLoding","setIsLoding","JSON","parse","localStorage","getItem","loading","setLoading","useEffect","async","response","getApi","id","fetchData","contactAccess","leadAccess","HasAccess","_jsx","_Fragment","children","Flex","justifyContent","alignItems","width","Spinner","_jsxs","Grid","templateColumns","gap","GridItem","colSpan","base","Heading","size","m","senderName","Card","Box","display","mb","Button","leftIcon","FaFilePdf","variant","onClick","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","concat","moment","format","image","type","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","error","disabled","IoIosArrowBack","marginLeft","HSeparator","md","Text","fontSize","fontWeight","color","recipient","createBy","Link","to","view","sx","textDecoration","createByName","createByLead","startDate","endDate","timestamp","toNow","callDuration","whiteSpace","callNotes"],"sourceRoot":""}