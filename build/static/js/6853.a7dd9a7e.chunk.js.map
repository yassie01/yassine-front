{"version":3,"file":"static/js/6853.a7dd9a7e.chunk.js","mappings":"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","sources":["views/admin/reports/components/reportChart.js","views/admin/reports/index.js"],"sourcesContent":["import { Box, Grid, Radio, RadioGroup, Select, Stack } from '@chakra-ui/react';\nimport Card from \"components/card/Card\";\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport ReactApexChart from \"react-apexcharts\";\nimport ReactDatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useSelector } from 'react-redux';\nimport { postApi } from \"services/api\";\n\n\nconst ReportChart = (props) => {\n    const { dashboard } = props;\n    const [reportChart, setReportChart] = useState({})\n    const [startDate, setStartDate] = useState(new Date(new Date() - 14 * 24 * 60 * 60 * 1000));\n    const [endDate, setEndDate] = useState(new Date());\n    const [select, setSelect] = useState('all');\n    const [selection, setSelection] = useState('day');\n    const modules = useSelector((state) => state?.modules?.data)\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    const isEmailsActive = modules?.find((item) => item?.moduleName === \"Emails\");\n    const isCallsActive = modules?.find((item) => item?.moduleName === \"Calls\");\n    const featchChart = async () => {\n        const data = {\n            startDate: moment(startDate).format('YYYY-MM-DD'),\n            endDate: moment(endDate).format('YYYY-MM-DD'),\n            filter: selection\n        }\n        let result = await postApi(user.role === 'superAdmin' ? 'api/reporting/index' : `api/reporting/index?sender=${user._id}`, data);\n        if (result.status === 200) {\n            setReportChart(result?.data);\n        }\n    }\n\n    const options = {\n        chart: {\n            id: 'line-chart',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        yaxis: {\n            title: {\n                text: 'Count',\n            },\n        },\n        dataLabels: {\n            enabled: true,\n        }\n    };\n\n    const series = Object.keys(reportChart).map((key) => {\n        const dataSet = reportChart[key][0];\n        let seriesData = [];\n\n        if (dataSet?.Emails && isEmailsActive?.isActive) {\n            seriesData = seriesData.concat(\n                dataSet?.Emails?.map((item) => ({ x: item?.date, y: item?.Emailcount }))\n            );\n        }\n        if (dataSet?.Calls && isCallsActive?.isActive) {\n            seriesData = seriesData.concat(\n                dataSet?.Calls?.map((item) => ({ x: item?.date, y: item?.Callcount }))\n            );\n        }\n\n        return {\n            name: (key === \"Email\" && isEmailsActive?.isActive) ? \"Emails\" : (key === \"Call\" && isCallsActive?.isActive) ? \"Call\" : ((key === \"Email\" && isEmailsActive?.isActive) && (key === \"Call\" && isCallsActive?.isActive) ? key : \"\"),\n            data: seriesData,\n        };\n\n    });\n\n    useEffect(() => {\n        featchChart()\n    }, [startDate, endDate, selection])\n\n\n    const selectedSeries = select === 'all' ? series?.filter(series => series?.name !== \"\") : series?.filter(series => series?.name === select);\n\n    return (\n        <Card>\n            {!dashboard &&\n                <Box display='flex' alignItems='center' flexWrap={'wrap'} justifyContent='space-between' mb={4}>\n                    <Select value={select} onChange={(e) => setSelect(e.target.value)} size='sm' width={{ base: '100%', md: '15%' }} mb={{ base: 3, md: 'auto' }}>\n                        <option value='all'>All</option>\n                        <option value='EmailDetails'>Email</option>\n                        <option value='outboundcall'>Call</option>\n                    </Select>\n                    <Box width={{ base: '100%', md: 'auto' }} flexWrap={'wrap'} justifyContent={'left'} mb={{ base: 3, md: 'auto' }} display='flex'>\n                        <ReactDatePicker selected={startDate} onChange={(date) => setStartDate(date)} className='datePickerBorder' />\n                        <ReactDatePicker selected={endDate} onChange={(date) => setEndDate(date)} className='datePickerBorder' />\n                    </Box>\n                    <Box width={{ base: '100%', md: 'auto' }} display={'flex'} justifyContent={'right'} mb={{ base: 3, md: 'auto' }}>\n                        <RadioGroup onChange={(e) => setSelection(e)} value={selection}>\n                            <Stack direction='row'>\n                                <Radio value='day' >Daily</Radio>\n                                <Radio value='week'>Weekly</Radio>\n                            </Stack>\n                        </RadioGroup>\n                    </Box>\n                </Box>\n            }\n            <div id=\"chart\">\n                <div id=\"chart-timeline\">\n                    {selectedSeries && (\n                        <ReactApexChart\n                            options={options}\n                            series={selectedSeries}\n                            type='area'\n                            height={300}\n                        />\n                    )}\n                </div>\n            </div>\n\n\n\n        </Card>\n    )\n}\n\nexport default ReportChart\n","import Card from \"components/card/Card\";\nimport { useEffect, useState } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { getApi } from 'services/api';\nimport ReportChart from './components/reportChart';\nimport CommonCheckTable from \"components/reactTable/checktable\";\n\nconst Report = () => {\n    const title = 'Reports'\n    const [data, setData] = useState([])\n    const [isLoding, setIsLoding] = useState(false)\n    const [selectedValues, setSelectedValues] = useState([]);\n    // const [selectedColumns, setSelectedColumns] = useState([]);\n    // const [columns, setColumns] = useState([]);\n\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n\n    const tableColumns = [\n        { Header: 'Email Sent', accessor: 'emailsent' },\n        { Header: \"Outbound Calls\", accessor: \"outboundcall\" },\n    ];\n\n    // const fetchCustomDataFields = async () => {\n    //     const tempTableColumns = [\n    //         { Header: '#', accessor: '_id' },\n    //         { Header: 'Name', accessor: 'firstName' },\n    //         { Header: 'Email Sent', accessor: 'emailsent' },\n    //         { Header: \"Outbound Calls\", accessor: \"outboundcall\" },\n    //     ];\n    //     // setSelectedColumns(JSON.parse(JSON.stringify(tempTableColumns)));\n    // }\n\n    if (user.role === 'superAdmin') {\n        tableColumns.unshift({\n            Header: \"#\",\n            accessor: \"_id\",\n            isSortable: false,\n            width: 10\n        }, { Header: 'Name', accessor: 'firstName' })\n    }\n\n    const fetchData = async () => {\n        setIsLoding(true)\n        let result = await getApi(user.role === 'superAdmin' ? 'api/reporting' : `api/reporting?_id=${user._id}`);\n        if (result && result.status === 200) {\n            setData(result?.data)\n        }\n        setIsLoding(false)\n    }\n\n    // const [columns, setColumns] = useState([...tableColumns]);\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\n    useEffect(() => {\n        fetchData()\n        // fetchCustomDataFields()\n    }, [])\n\n    return (\n        <div>\n            <ReportChart />\n            <Card mt={4}>\n                <CommonCheckTable\n                    title={title}\n                    isLoding={isLoding}\n                    columnData={tableColumns ?? []}\n                    // dataColumn={dataColumn ?? []}\n                    allData={data ?? []}\n                    tableData={data}\n                    AdvanceSearch={false}\n                    checkBox={false}\n                    tableCustomFields={[]}\n                    deleteMany={true}\n                // selectedValues={selectedValues}\n                // setSelectedValues={setSelectedValues}\n                // selectedColumns={selectedColumns}\n                // setSelectedColumns={setSelectedColumns}\n                />\n            </Card>\n        </div>\n    )\n}\n\nexport default Report\n"],"names":["props","dashboard","reportChart","setReportChart","useState","startDate","setStartDate","Date","endDate","setEndDate","select","setSelect","selection","setSelection","modules","useSelector","state","_state$modules","data","user","JSON","parse","localStorage","getItem","isEmailsActive","find","item","moduleName","isCallsActive","series","Object","keys","map","key","dataSet","seriesData","_dataSet$Emails","_dataSet$Calls","Emails","isActive","concat","x","date","y","Emailcount","Calls","Callcount","name","useEffect","async","moment","format","filter","result","postApi","role","_id","status","featchChart","selectedSeries","_jsxs","Card","children","Box","display","alignItems","flexWrap","justifyContent","mb","Select","value","onChange","e","target","size","width","base","md","_jsx","ReactDatePicker","selected","className","RadioGroup","Stack","direction","Radio","id","ReactApexChart","options","chart","xaxis","type","yaxis","title","text","dataLabels","enabled","height","Report","setData","isLoding","setIsLoding","selectedValues","setSelectedValues","tableColumns","Header","accessor","unshift","isSortable","getApi","fetchData","ReportChart","mt","CommonCheckTable","columnData","allData","tableData","AdvanceSearch","checkBox","tableCustomFields","deleteMany"],"sourceRoot":""}