{"version":3,"file":"static/js/5563.b9cb7b11.chunk.js","mappings":"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","sources":["views/admin/lead/View.js","views/admin/lead/Add.js","views/admin/lead/Edit.js"],"sourcesContent":["import { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport {\n    Button, Flex, Grid, GridItem, Heading, Menu, MenuButton, MenuDivider, MenuItem, MenuList,\n    Tab,\n    TabList,\n    TabPanel,\n    TabPanels,\n    Tabs,\n    Text,\n    VStack,\n    useColorModeValue,\n    useDisclosure,\n} from \"@chakra-ui/react\";\nimport FolderTreeView from 'components/FolderTreeView/folderTreeView';\nimport Card from \"components/card/Card\";\nimport { HSeparator } from \"components/separator/Separator\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { constant } from \"constant\";\nimport { useEffect, useState } from \"react\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { Link, useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { getApi } from \"services/api\";\nimport PhoneCall from \"../contact/components/phonCall\";\nimport AddEmailHistory from \"../emailHistory/components/AddEmail\";\nimport AddMeeting from \"../meeting/components/Addmeeting\";\nimport AddPhoneCall from \"../phoneCall/components/AddPhoneCall\";\nimport Add from \"./Add\";\nimport Edit from \"./Edit\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport DataNotFound from \"components/notFoundData\";\nimport CustomView from \"utils/customView\";\nimport AddDocumentModal from \"utils/addDocumentModal\";\nimport CommonDeleteModel from \"components/commonDeleteModel\";\nimport { deleteApi } from \"services/api\";\nimport CommonCheckTable from \"components/reactTable/checktable\";\nimport moment from 'moment';\nimport AddEdit from '../task/components/AddEdit'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchLeadCustomFiled } from \"../../../redux/slices/leadCustomFiledSlice\";\nimport { FaFilePdf } from \"react-icons/fa\";\nimport html2pdf from \"html2pdf.js\";\n\nconst View = () => {\n    const param = useParams()\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    const textColor = useColorModeValue(\"gray.500\", \"white\");\n\n    const [data, setData] = useState()\n    const [allData, setAllData] = useState([])\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const [edit, setEdit] = useState(false);\n    const [deleteModel, setDelete] = useState(false);\n    const [isLoding, setIsLoding] = useState(false)\n    const [addMeeting, setMeeting] = useState(false);\n    const [showEmail, setShowEmail] = useState(false);\n    const [showCall, setShowCall] = useState(false);\n    const [showTasks, setShowTasks] = useState(false);\n    const [showMeetings, setShowMeetings] = useState(false);\n    const [addDocument, setAddDocument] = useState(false);\n    const [action, setAction] = useState(false)\n    // const [leadData, setLeadData] = useState([])\n    const [selectedTab, setSelectedTab] = useState(0);\n    const [taskModel, setTaskModel] = useState(false);\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const size = \"lg\";\n\n    const [addEmailHistory, setAddEmailHistory] = useState(false);\n    const [addPhoneCall, setAddPhoneCall] = useState(false);\n\n    const leadData = useSelector((state) => state?.leadCustomFiled?.data.data)\n\n    const [permission, taskPermission, meetingPermission, callAccess, emailAccess, taskAccess, meetingAccess] = HasAccess(['Leads', 'Tasks', 'Meetings', 'Calls', 'Emails', 'Tasks', 'Meetings']);\n\n\n    const columnsDataColumns = [\n        { Header: \"sender\", accessor: \"senderName\", },\n        {\n            Header: \"recipient\", accessor: \"createByName\", cell: (cell) => (\n                <Link to={`/Email/${cell?.row?.original?._id}`}>\n                    <Text\n                        me=\"10px\"\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\n                        color='brand.600'\n                        fontSize=\"sm\"\n                        fontWeight=\"700\"\n                    >\n                        {cell?.value || ' - '}\n                    </Text></Link>)\n        },\n        {\n            Header: \"time stamp\", accessor: \"timestamp\",\n            cell: (cell) => (\n                <div className=\"selectOpt\">\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\n                        {moment(cell?.value).fromNow()}\n                    </Text>\n                </div>\n            )\n        },\n        {\n            Header: \"Created\", accessor: \"createBy\",\n            cell: (cell) => (\n                <div className=\"selectOpt\">\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\n                        {moment(cell?.row?.values.timestamp).format('h:mma (DD/MM)')}\n                    </Text>\n                </div>\n            )\n        },\n    ];\n    const callColumns = [\n        { Header: \"sender\", accessor: \"senderName\", },\n        {\n            Header: \"recipient\", accessor: \"createByName\", cell: (cell) => (\n                <Link to={`/phone-call/${cell?.row?.original?._id}`}>\n                    <Text\n                        me=\"10px\"\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\n                        color='brand.600'\n                        fontSize=\"sm\"\n                        fontWeight=\"700\"\n                    >\n                        {cell?.value || ' - '}\n                    </Text></Link>)\n        },\n        {\n            Header: \"time stamp\", accessor: \"timestamp\",\n            cell: (cell) => (\n                <div className=\"selectOpt\">\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\n                        {moment(cell?.value).fromNow()}\n                    </Text>\n                </div>\n            )\n        },\n        {\n            Header: \"Created\", accessor: \"createBy\",\n            cell: (cell) => (\n                <div className=\"selectOpt\">\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\n                        {moment(cell?.row?.values.timestamp).format('h:mma (DD/MM)')}\n                    </Text>\n                </div>\n            )\n        },\n    ];\n    const MeetingColumns = [\n        {\n            Header: 'Agenda', accessor: 'agenda', cell: (cell) => (\n                <Link to={`/metting/${cell?.row?.original?._id}`}>\n                    <Text\n                        me=\"10px\"\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\n                        color='brand.600'\n                        fontSize=\"sm\"\n                        fontWeight=\"700\"\n                    >\n                        {cell?.value || ' - '}\n                    </Text></Link>)\n        },\n        { Header: \"date Time\", accessor: \"dateTime\", },\n        {\n            Header: \"times tamp\", accessor: \"timestamp\",\n            cell: (cell) => (\n                <div className=\"selectOpt\">\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\n                        {moment(cell?.value).fromNow()}\n                    </Text>\n                </div>\n            )\n        },\n        { Header: \"create By\", accessor: \"createdByName\", },\n    ];\n    const taskColumns = [\n        {\n            Header: 'Title', accessor: 'title', type: 'text', formikType: '', cell: (cell) => (\n                <div className=\"selectOpt\">\n                    <Text\n                        onClick={() => navigate(`/view/${cell?.row?.original._id}`)}\n                        me=\"10px\"\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\n                        color='brand.600'\n                        fontSize=\"sm\"\n                        fontWeight=\"700\"\n                    >\n                        {cell?.value}\n                    </Text>\n                </div>\n            )\n        },\n        { Header: \"Category\", accessor: \"category\", },\n        { Header: \"Assign To\", accessor: \"assignToName\", },\n        { Header: \"Start Date\", accessor: \"start\", },\n        { Header: \"End Date\", accessor: \"end\", },\n    ];\n\n\n    const handleTabChange = (index) => {\n        setSelectedTab(index);\n    };\n    const generatePDF = () => {\n        const element = document.getElementById(\"reports\");\n        if (element) {\n            element.style.display = 'block';\n            element.style.width = '100%'; // Adjust width for mobile\n            element.style.height = 'auto';\n            // setTimeout(() => {\n            html2pdf()\n                .from(element)\n                .set({\n                    margin: [0, 0, 0, 0],\n                    filename: `Lead_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n                    image: { type: \"jpeg\", quality: 0.98 },\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n                })\n                .save().then(() => {\n                    element.style.display = '';\n                })\n            // }, 500);\n        } else {\n            console.error(\"Element with ID 'reports' not found.\");\n        }\n    };\n\n    const download = async (data) => {\n        if (data) {\n            let result = await getApi(`api/document/download/`, data)\n            if (result && result.status === 200) {\n                window.open(`${constant.baseUrl}api/document/download/${data}`)\n                toast.success('file Download successful')\n            } else if (result && result.response.status === 404) {\n                toast.error('file Not Found')\n            }\n        }\n    }\n\n    const fetchData = async (i) => {\n        setIsLoding(true)\n        let response = await getApi('api/lead/view/', param.id)\n        setData(response.data?.lead);\n        setAllData(response.data);\n        setIsLoding(false)\n        setSelectedTab(i)\n    }\n\n    const handleDeleteLead = async (id) => {\n        try {\n            setIsLoding(true)\n            let response = await deleteApi('api/lead/delete/', id)\n            if (response.status === 200) {\n                setDelete(false)\n                setAction((pre) => !pre)\n                navigate('/lead')\n            }\n        } catch (error) {\n            console.log(error)\n        }\n        finally {\n            setIsLoding(false)\n        }\n    }\n\n    useEffect(() => {\n        fetchData()\n        dispatch(fetchLeadCustomFiled());\n    }, [action])\n\n\n    function toCamelCase(text) {\n        return text?.replace(/([a-z])([A-Z])/g, '$1 $2');\n    }\n\n    const firstValue = Object?.values(param)[0];\n    const splitValue = firstValue?.split('/')\n\n    return (\n        <>\n\n            {isLoding ?\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\n                    <Spinner />\n                </Flex> :\n                <>\n                    <Heading size=\"lg\" mt={0} m={3}>\n                        {data?.leadName || \"\"}\n                    </Heading>\n                    <Tabs onChange={handleTabChange} index={selectedTab}>\n                        <Grid templateColumns={'repeat(12, 1fr)'} mb={3} gap={1}>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <TabList sx={{\n                                    border: \"none\",\n                                    '& button:focus': { boxShadow: 'none', },\n                                    '& button': {\n                                        margin: { sm: \"0 3px\", md: \"0 5px\" }, padding: { sm: \"5px\", md: \"8px\" }, border: '2px solid #8080803d', borderTopLeftRadius: \"10px\", borderTopRightRadius: \"10px\", borderBottom: 0, fontSize: { sm: \"12px\", md: \"16px\" }\n                                    },\n                                    '& button[aria-selected=\"true\"]': {\n                                        border: \"2px solid brand.200\", borderBottom: 0, zIndex: '0'\n                                    },\n                                }} >\n                                    <Tab>Information</Tab>\n                                    {(emailAccess?.view || callAccess?.view || taskAccess?.view || meetingAccess?.view) && <Tab> Communication</Tab>}\n                                    <Tab>Document</Tab>\n                                </TabList>\n\n                            </GridItem>\n                            <GridItem colSpan={{ base: 12, md: 6 }} mt={{ sm: \"3px\", md: \"5px\" }} >\n                                <Flex justifyContent={\"right\"}>\n                                    <Menu>\n                                        {(user.role === 'superAdmin' || (permission?.create || permission?.update || permission?.delete)) && <MenuButton size=\"sm\" variant=\"outline\" colorScheme='blackAlpha' mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\n                                            Actions\n                                        </MenuButton>}\n                                        <MenuDivider />\n                                        <MenuList minWidth={2}>\n                                            {(user.role === 'superAdmin' || permission?.create) && <MenuItem color={'blue'} onClick={() => onOpen()} alignItems={\"start\"} icon={<AddIcon />}  >Add</MenuItem>}\n                                            {(user.role === 'superAdmin' || permission?.update) && <MenuItem onClick={() => setEdit(true)} alignItems={\"start\"} icon={<EditIcon />}>Edit</MenuItem>}\n                                            <MenuItem onClick={generatePDF} alignItems={\"start\"} icon={<FaFilePdf />} display={\"flex\"} style={{ alignItems: \"center\" }}>Print as PDF</MenuItem >\n                                            {(user.role === 'superAdmin' || permission?.delete) && <>\n                                                <MenuDivider />\n                                                <MenuItem alignItems={\"start\"} color={'red'} onClick={() => setDelete(true)} icon={<DeleteIcon />}>Delete</MenuItem>\n                                            </>}\n                                        </MenuList>\n                                    </Menu>\n                                    <Link to=\"/lead\">\n                                        <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\">\n                                            Back\n                                        </Button>\n                                    </Link>\n                                </Flex>\n                            </GridItem>\n                        </Grid>\n\n                        <TabPanels>\n                            <TabPanel pt={4} p={0}>\n                                <CustomView data={leadData?.[0]} fieldData={data} toCamelCase={toCamelCase} moduleId={leadData?.[0]?._id} fetchData={fetchData} id=\"reports\" />\n                            </TabPanel>\n                            <TabPanel pt={4} p={0}>\n                                <GridItem colSpan={{ base: 4 }} >\n                                    <Grid overflow={'hidden'} templateColumns={{ base: \"1fr\" }} gap={4}>\n                                        <Grid templateColumns={'repeat(12, 1fr)'} gap={4}>\n                                            {emailAccess?.view && <GridItem colSpan={{ base: 12, md: 6 }}>\n                                                <Card >\n                                                    <CommonCheckTable\n                                                        title={\"Email\"}\n                                                        isLoding={isLoding}\n                                                        columnData={columnsDataColumns ?? []}\n                                                        // dataColumn={columnsDataColumns ?? []}\n                                                        allData={showEmail ? allData.Email : allData?.Email?.length > 0 ? [allData.Email[0]] : []}\n                                                        tableData={showEmail ? allData.Email : allData?.Email?.length > 0 ? [allData.Email[0]] : []}\n                                                        AdvanceSearch={false}\n                                                        dataLength={allData?.Email?.length}\n                                                        tableCustomFields={[]}\n                                                        checkBox={false}\n                                                        deleteMany={true}\n                                                        ManageGrid={false}\n                                                        onOpen={() => setAddEmailHistory(true)}\n                                                        access={emailAccess}\n                                                    />\n                                                    {allData?.Email?.length > 1 &&\n                                                        <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n                                                            <Button size=\"sm\" colorScheme=\"brand\" variant=\"outline\" display=\"flex\" justifyContant=\"end\" onClick={() => showEmail ? setShowEmail(false) : setShowEmail(true)}>{showEmail ? \"Show less\" : \"Show more\"}</Button>\n                                                        </div>}\n                                                </Card>\n                                            </GridItem>}\n                                            {callAccess?.view && <GridItem colSpan={{ base: 12, md: 6 }}>\n                                                <Card>\n                                                    <CommonCheckTable\n                                                        title={\"Call\"}\n                                                        isLoding={isLoding}\n                                                        columnData={callColumns ?? []}\n                                                        // dataColumn={callColumns ?? []}\n                                                        allData={showCall ? allData?.phoneCall : allData?.phoneCall?.length > 0 ? [allData?.phoneCall[0]] : []}\n                                                        tableData={showCall ? allData?.phoneCall : allData?.phoneCall?.length > 0 ? [allData?.phoneCall[0]] : []}\n                                                        AdvanceSearch={false}\n                                                        dataLength={allData?.phoneCall?.length}\n                                                        tableCustomFields={[]}\n                                                        checkBox={false}\n                                                        deleteMany={true}\n                                                        ManageGrid={false}\n                                                        onOpen={() => setAddPhoneCall(true)}\n                                                        access={callAccess}\n                                                    />\n                                                    {allData?.phoneCall?.length > 1 && <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n                                                        <Button size=\"sm\" colorScheme=\"brand\" variant=\"outline\" display=\"flex\" justifyContant=\"end\" onClick={() => showCall ? setShowCall(false) : setShowCall(true)}>{showCall ? \"Show less\" : \"Show more\"}</Button>\n                                                    </div>}\n                                                </Card>\n                                            </GridItem>}\n                                            {taskAccess?.view && <GridItem colSpan={{ base: 12, md: 6 }}>\n                                                <Card >\n                                                    <CommonCheckTable\n                                                        title={\"Task\"}\n                                                        isLoding={isLoding}\n                                                        columnData={taskColumns ?? []}\n                                                        // dataColumn={taskColumns ?? []}\n                                                        allData={showTasks ? allData?.task : allData?.task?.length > 0 ? [allData?.task[0]] : []}\n                                                        tableData={showTasks ? allData?.task : allData?.task?.length > 0 ? [allData?.task[0]] : []}\n                                                        dataLength={allData?.task?.length}\n                                                        AdvanceSearch={false}\n                                                        tableCustomFields={[]}\n                                                        checkBox={false}\n                                                        deleteMany={true}\n                                                        ManageGrid={false}\n                                                        onOpen={() => setTaskModel(true)}\n                                                        access={taskAccess}\n                                                    />\n                                                    {\n                                                        allData?.task?.length > 1 && <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n                                                            <Button size=\"sm\" colorScheme=\"brand\" variant=\"outline\" display=\"flex\" justifyContant=\"end\" onClick={() => showTasks ? setShowTasks(false) : setShowTasks(true)}>{showTasks ? \"Show less\" : \"Show more\"}</Button>\n                                                        </div>}\n                                                </Card>\n                                            </GridItem>}\n\n                                            {meetingAccess?.view && <GridItem colSpan={{ base: 12, md: 6 }}>\n                                                <Card overflow={'scroll'}>\n                                                    <CommonCheckTable\n                                                        title={\"Meeting\"}\n                                                        isLoding={isLoding}\n                                                        columnData={MeetingColumns ?? []}\n                                                        // dataColumn={MeetingColumns ?? []}\n                                                        allData={showMeetings ? allData?.meeting : allData?.meeting?.length > 0 ? [allData?.meeting[0]] : []}\n                                                        tableData={showMeetings ? allData?.meeting : allData?.meeting?.length > 0 ? [allData?.meeting[0]] : []}\n                                                        AdvanceSearch={false}\n                                                        dataLength={allData?.meeting?.length} tableCustomFields={[]}\n                                                        checkBox={false}\n                                                        deleteMany={true}\n                                                        ManageGrid={false}\n                                                        onOpen={() => setMeeting(true)}\n                                                        access={meetingAccess}\n                                                    />\n\n                                                    {allData?.meeting?.length > 1 && <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n                                                        <Button colorScheme=\"brand\" size='sm' variant=\"outline\" display=\"flex\" justifyContant=\"end\" onClick={() => showMeetings ? setShowMeetings(false) : setShowMeetings(true)}>{showMeetings ? \"Show less\" : \"Show more\"}</Button>\n                                                    </div>}\n                                                </Card>\n                                            </GridItem>}\n                                        </Grid>\n                                    </Grid>\n                                </GridItem>\n                            </TabPanel>\n                            <TabPanel pt={4} p={0}>\n                                <GridItem colSpan={{ base: 4 }} >\n                                    <Card minH={'50vh'} >\n                                        <Flex alignItems={'center'} justifyContent={'space-between'} mb='2'>\n                                            <Heading size=\"md\" mb={3}>\n                                                Documents\n                                            </Heading>\n                                            <Button leftIcon={<AddIcon />} size='sm' variant='brand' onClick={() => setAddDocument(true)}>Add Document</Button>\n                                        </Flex>\n                                        <HSeparator />\n                                        <VStack mt={4} alignItems=\"flex-start\">\n                                            {allData?.Document?.length > 0 ? allData?.Document?.map((item) => (\n                                                <FolderTreeView name={item.folderName} item={item}>\n                                                    {item?.files?.map((file) => (\n                                                        <FolderTreeView download={download} data={file} name={file.fileName} isFile from=\"lead\" />\n                                                    ))}\n                                                </FolderTreeView>\n                                            )) : <Text textAlign={'center'} width=\"100%\" color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n                                                <DataNotFound />\n                                            </Text>}\n                                        </VStack>\n                                    </Card>\n                                </GridItem>\n                            </TabPanel>\n\n                        </TabPanels>\n                    </Tabs>\n                    {(user.role === 'superAdmin' || (permission?.update || permission?.delete)) && <Card mt={3}>\n                        <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\n                            <GridItem colStart={6} >\n                                <Flex justifyContent={\"right\"}>\n                                    {(user.role === 'superAdmin' || permission?.update) ? <Button size='sm' onClick={() => setEdit(true)} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button> : ''}\n                                    {(user.role === 'superAdmin' || permission?.delete) ? <Button size='sm' style={{ background: 'red.800' }} onClick={() => setDelete(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button> : ''}\n                                </Flex>\n                            </GridItem>\n                        </Grid>\n                    </Card>\n                    }\n                </>\n            }\n            {isOpen && <Add isOpen={isOpen} size={size} onClose={onClose} leadData={leadData?.[0]} setAction={setAction} />}\n            <Edit isOpen={edit} size={size} onClose={setEdit} leadData={leadData?.[0]} setAction={setAction} moduleId={leadData?.[0]?._id} data={data} />\n            <AddMeeting fetchData={fetchData} isOpen={addMeeting} leadContect={splitValue?.[0]} onClose={setMeeting} from=\"contact\" id={param.id} setAction={setAction} view={true} />\n            <AddEdit isOpen={taskModel} fetchData={fetchData} leadContect={splitValue?.[0]} onClose={setTaskModel} id={param.id} userAction={'add'} view={true} />\n            <AddPhoneCall viewData={allData} fetchData={fetchData} isOpen={addPhoneCall} onClose={setAddPhoneCall} setAction={setAction} data={data?.contact} id={param.id} lead={true} LData={data} />\n            <AddEmailHistory lead={true} leadEmail={allData?.lead?.leadEmail} fetchData={fetchData} isOpen={addEmailHistory} onClose={setAddEmailHistory} id={param.id} />\n            <AddDocumentModal addDocument={addDocument} setAddDocument={setAddDocument} linkId={param.id} from=\"lead\" setAction={setAction} fetchData={fetchData} />\n            <CommonDeleteModel isOpen={deleteModel} onClose={() => setDelete(false)} type='Lead' handleDeleteData={handleDeleteLead} ids={param.id} />\n        </>\n    );\n};\n\nexport default View;\n","import { CloseIcon } from '@chakra-ui/icons';\nimport { Button, Drawer, DrawerBody, DrawerContent, DrawerFooter, DrawerHeader, DrawerOverlay, IconButton } from '@chakra-ui/react';\nimport Spinner from 'components/spinner/Spinner';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport { postApi } from 'services/api';\nimport { generateValidationSchema } from 'utils';\nimport CustomForm from 'utils/customForm';\nimport * as yup from 'yup'\n\nconst Add = (props) => {\n    const [isLoding, setIsLoding] = useState(false)\n\n\n    const initialFieldValues = Object.fromEntries(\n        (props?.leadData?.fields || []).map(field => [field?.name, ''])\n    );\n    const initialValues = {\n        ...initialFieldValues,\n        createBy: JSON.parse(localStorage.getItem('user'))._id\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: yup.object().shape(generateValidationSchema(props?.leadData?.fields)),\n        onSubmit: (values, { resetForm }) => {\n            AddData();\n        },\n    });\n\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik\n\n    const AddData = async () => {\n        try {\n            setIsLoding(true)\n            let response = await postApi('api/form/add', { ...values, moduleId: props?.leadData?._id })\n            if (response.status === 200) {\n                props.onClose();\n                formik.resetForm();\n                props.setAction((pre) => !pre)\n            }\n        } catch (e) {\n            console.log(e);\n        }\n        finally {\n            setIsLoding(false)\n        }\n    };\n\n    const handleCancel = () => {\n        formik.resetForm();\n        props.onClose()\n    }\n\n    return (\n        <div>\n            <Drawer isOpen={props.isOpen} size={props.size}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader alignItems={\"center\"} justifyContent='space-between' display='flex'  >\n                        Add Lead\n                        <IconButton onClick={props.onClose} icon={<CloseIcon />} />\n                    </DrawerHeader>\n                    <DrawerBody>\n                        <CustomForm moduleData={props.leadData} values={values} setFieldValue={setFieldValue} handleChange={handleChange} handleBlur={handleBlur} errors={errors} touched={touched} />\n                    </DrawerBody>\n                    <DrawerFooter>\n                        <Button sx={{ textTransform: \"capitalize\" }} size=\"sm\" disabled={isLoding ? true : false} variant=\"brand\" type=\"submit\" onClick={handleSubmit}                        >\n                            {isLoding ? <Spinner /> : 'Save'}\n                        </Button>\n                        <Button\n                            variant=\"outline\"\n                            colorScheme='red' size=\"sm\"\n                            sx={{\n                                marginLeft: 2,\n                                textTransform: \"capitalize\",\n                            }}\n                            onClick={handleCancel}\n                        >\n                            Close\n                        </Button>\n                    </DrawerFooter>\n                </DrawerContent>\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Add\n","import { CloseIcon } from '@chakra-ui/icons';\nimport { Button, Drawer, DrawerBody, DrawerContent, DrawerFooter, DrawerHeader, DrawerOverlay, Flex, IconButton } from '@chakra-ui/react';\nimport Spinner from 'components/spinner/Spinner';\nimport { useFormik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { putApi } from 'services/api';\nimport { getApi } from 'services/api';\nimport { generateValidationSchema } from '../../../utils';\nimport CustomForm from '../../../utils/customForm';\nimport * as yup from 'yup'\n\nconst Edit = (props) => {\n    const { data } = props;\n    const [isLoding, setIsLoding] = useState(false);\n    const initialFieldValues = Object.fromEntries(\n        (props?.leadData?.fields || []).map(field => [field?.name, ''])\n    );\n\n    const [initialValues, setInitialValues] = useState({\n        ...initialFieldValues,\n        createBy: JSON.parse(localStorage.getItem('user'))._id\n    })\n    const param = useParams()\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        validationSchema: yup.object().shape(generateValidationSchema(props?.leadData?.fields)),\n        onSubmit: (values, { resetForm }) => {\n            EditData();\n        },\n    });\n\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik\n\n    const EditData = async () => {\n        try {\n            setIsLoding(true)\n            let response = await putApi(`api/form/edit/${props?.selectedId || param.id}`, { ...values, moduleId: props.moduleId })\n            if (response.status === 200) {\n                props.onClose();\n                props.setAction((pre) => !pre)\n            }\n        } catch (e) {\n            console.log(e);\n        }\n        finally {\n            setIsLoding(false)\n        }\n    };\n\n    const handleClose = () => {\n        props.onClose(false)\n        props.setSelectedId && props?.setSelectedId()\n        formik.resetForm();\n    }\n\n    let response\n    const fetchData = async () => {\n        if (data) {\n            setInitialValues((prev) => ({ ...prev, ...data }))\n        } else if (props?.selectedId) {\n            // } else if (props?.selectedId || param.id) {\n            try {\n                setIsLoding(true)\n                response = await getApi('api/lead/view/', props?.selectedId)\n                let editData = response?.data?.lead;\n                setInitialValues((prev) => ({ ...prev, ...editData }));\n            } catch (e) {\n                console.error(e)\n            } finally {\n                setIsLoding(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, [props?.selectedId, data])\n\n    return (\n        <div>\n            <Drawer isOpen={props.isOpen} size={props.size}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader alignItems={\"center\"} justifyContent='space-between' display='flex' >\n                        Edit Lead\n                        <IconButton onClick={handleClose} icon={<CloseIcon />} />\n                    </DrawerHeader>\n                    <DrawerBody>\n\n                        {isLoding ?\n                            <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\n                                <Spinner />\n                            </Flex>\n                            :\n                            <CustomForm moduleData={props.leadData} values={values} setFieldValue={setFieldValue} handleChange={handleChange} handleBlur={handleBlur} errors={errors} touched={touched} />\n\n                        }\n                    </DrawerBody>\n\n                    <DrawerFooter>\n                        <Button\n                            sx={{ textTransform: \"capitalize\" }}\n                            variant=\"brand\" size=\"sm\"\n                            type=\"submit\"\n                            disabled={isLoding ? true : false}\n                            onClick={handleSubmit}\n                        >\n                            {isLoding ? <Spinner /> : 'Update'}\n                        </Button>\n                        <Button\n                            variant=\"outline\"\n                            colorScheme='red' size=\"sm\"\n                            sx={{\n                                marginLeft: 2,\n                                textTransform: \"capitalize\",\n                            }}\n                            onClick={handleClose}\n                        >\n                            Close\n                        </Button>\n                    </DrawerFooter>\n\n                </DrawerContent>\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Edit"],"names":["View","_leadData$","_allData$Email","_allData$Email2","_allData$Email3","_allData$Email4","_allData$phoneCall","_allData$phoneCall2","_allData$phoneCall3","_allData$phoneCall4","_allData$task","_allData$task2","_allData$task3","_allData$task4","_allData$meeting","_allData$meeting2","_allData$meeting3","_allData$meeting4","_allData$Document","_allData$Document2","_leadData$2","_allData$lead","param","useParams","user","JSON","parse","localStorage","getItem","textColor","useColorModeValue","data","setData","useState","allData","setAllData","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","isLoding","setIsLoding","addMeeting","setMeeting","showEmail","setShowEmail","showCall","setShowCall","showTasks","setShowTasks","showMeetings","setShowMeetings","addDocument","setAddDocument","action","setAction","selectedTab","setSelectedTab","taskModel","setTaskModel","navigate","useNavigate","dispatch","useDispatch","addEmailHistory","setAddEmailHistory","addPhoneCall","setAddPhoneCall","leadData","useSelector","state","_state$leadCustomFile","leadCustomFiled","permission","taskPermission","meetingPermission","callAccess","emailAccess","taskAccess","meetingAccess","HasAccess","columnsDataColumns","Header","accessor","cell","_cell$row","_cell$row$original","_jsx","Link","to","concat","row","original","_id","children","Text","me","sx","color","textDecoration","fontSize","fontWeight","value","className","moment","fromNow","_cell$row2","values","timestamp","format","callColumns","_cell$row3","_cell$row3$original","_cell$row4","MeetingColumns","_cell$row5","_cell$row5$original","taskColumns","type","formikType","onClick","_cell$row6","cursor","download","async","result","getApi","status","window","open","constant","baseUrl","toast","success","response","error","fetchData","_response$data","id","lead","i","useEffect","fetchLeadCustomFiled","firstValue","Object","splitValue","split","_jsxs","_Fragment","Flex","justifyContent","alignItems","width","Spinner","Heading","size","mt","m","leadName","Tabs","onChange","index","Grid","templateColumns","mb","gap","GridItem","colSpan","base","md","TabList","border","boxShadow","margin","sm","padding","borderTopLeftRadius","borderTopRightRadius","borderBottom","zIndex","Tab","view","Menu","role","create","update","delete","MenuButton","variant","colorScheme","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","style","display","height","html2pdf","from","set","filename","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","FaFilePdf","DeleteIcon","leftIcon","IoIosArrowBack","TabPanels","TabPanel","pt","p","CustomView","fieldData","toCamelCase","text","replace","moduleId","overflow","Card","CommonCheckTable","title","columnData","Email","length","tableData","AdvanceSearch","dataLength","tableCustomFields","checkBox","deleteMany","ManageGrid","access","justifyContant","phoneCall","task","meeting","minH","HSeparator","VStack","Document","map","item","_item$files","FolderTreeView","name","folderName","files","file","fileName","isFile","textAlign","DataNotFound","colStart","background","Add","Edit","AddMeeting","leadContect","AddEdit","userAction","AddPhoneCall","viewData","contact","LData","AddEmailHistory","leadEmail","AddDocumentModal","linkId","CommonDeleteModel","handleDeleteData","deleteApi","pre","log","ids","props","_props$leadData","_props$leadData2","initialFieldValues","fromEntries","fields","field","initialValues","_objectSpread","createBy","formik","useFormik","validationSchema","yup","shape","generateValidationSchema","onSubmit","_ref","resetForm","AddData","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","_props$leadData3","postApi","e","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","IconButton","CloseIcon","DrawerBody","CustomForm","moduleData","DrawerFooter","textTransform","disabled","marginLeft","handleCancel","setInitialValues","enableReinitialize","EditData","putApi","selectedId","handleClose","setSelectedId","prev","_response","editData"],"sourceRoot":""}