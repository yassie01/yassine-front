{"version":3,"file":"static/js/9831.b37a6663.chunk.js","mappings":"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","sources":["views/admin/property/Add.js","views/admin/property/Edit.js","views/admin/property/components/Upload.js","views/admin/property/components/propertyPhoto.js","views/admin/property/View.js","../node_modules/@chakra-ui/tabs/dist/chakra-ui-tabs.esm.js"],"sourcesContent":["import { CloseIcon } from '@chakra-ui/icons';\nimport { Button, Drawer, DrawerBody, DrawerContent, DrawerFooter, DrawerHeader, DrawerOverlay, IconButton } from '@chakra-ui/react';\nimport Spinner from 'components/spinner/Spinner';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport { postApi } from 'services/api';\nimport { generateValidationSchema } from 'utils';\nimport CustomForm from 'utils/customForm';\nimport * as yup from 'yup'\n\nconst Add = (props) => {\n    const [isLoding, setIsLoding] = useState(false)\n\n    const initialFieldValues = Object.fromEntries(\n        (props?.propertyData?.fields || []).map(field => [field?.name, ''])\n    );\n\n    const initialValues = {\n        ...initialFieldValues,\n        createBy: JSON.parse(localStorage.getItem('user'))._id\n    };\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        validationSchema: yup.object().shape(generateValidationSchema(props?.propertyData?.fields)),\n\n        onSubmit: (values, { resetForm }) => {\n            AddData();\n        },\n    });\n\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik\n\n\n    const AddData = async () => {\n        try {\n            setIsLoding(true)\n            let response = await postApi('api/form/add', { ...values, moduleId: props?.propertyData?._id })\n            if (response.status === 200) {\n                props.onClose();\n                formik.resetForm();\n                props.setAction((pre) => !pre)\n            }\n        } catch (e) {\n            console.log(e);\n        }\n        finally {\n            setIsLoding(false)\n        }\n    };\n\n    return (\n        <div>\n            <Drawer isOpen={props.isOpen} size={props.size}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader alignItems={\"center\"} justifyContent='space-between' display='flex' >\n                        Add Property\n                        <IconButton onClick={props.onClose} icon={<CloseIcon />} />\n                    </DrawerHeader>\n                    <DrawerBody>\n                        <CustomForm moduleData={props.propertyData} values={values} setFieldValue={setFieldValue} handleChange={handleChange} handleBlur={handleBlur} errors={errors} touched={touched} />\n                    </DrawerBody>\n\n\n                    <DrawerFooter>\n                        <Button size=\"sm\" sx={{ textTransform: \"capitalize\" }} disabled={isLoding ? true : false} variant=\"brand\" type=\"submit\" onClick={handleSubmit}                        >\n                            {isLoding ? <Spinner /> : 'Save'}\n                        </Button>\n                        <Button size=\"sm\"\n                            variant=\"outline\"\n                            colorScheme='red'\n                            sx={{\n                                marginLeft: 2,\n                                textTransform: \"capitalize\",\n                            }}\n                            onClick={props.onClose}\n                        >\n                            Close\n                        </Button>\n                    </DrawerFooter>\n\n                </DrawerContent>\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Add\n","import { CloseIcon } from '@chakra-ui/icons';\nimport { Button, Drawer, DrawerBody, DrawerContent, DrawerFooter, DrawerHeader, DrawerOverlay, Flex, IconButton } from '@chakra-ui/react';\nimport Spinner from 'components/spinner/Spinner';\nimport { useFormik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getApi, putApi } from 'services/api';\nimport { generateValidationSchema } from 'utils';\nimport CustomForm from 'utils/customForm';\nimport * as yup from 'yup'\n\nconst Edit = (props) => {\n    const { data } = props\n    const initialFieldValues = Object.fromEntries(\n        (props?.leadData?.fields || []).map(field => [field?.name, ''])\n    );\n    const [initialValues, setInitialValues] = useState({\n        ...initialFieldValues,\n        createBy: JSON.parse(localStorage.getItem('user'))._id\n    })\n\n    const param = useParams()\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: yup.object().shape(generateValidationSchema(props?.propertyData?.fields)),\n        enableReinitialize: true,\n        onSubmit: (values, { resetForm }) => {\n            EditData();\n        },\n    });\n\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik;\n\n    const [isLoding, setIsLoding] = useState(false)\n\n    const EditData = async () => {\n        try {\n            setIsLoding(true)\n            let response = await putApi(`api/property/edit/${props?.selectedId || param.id}`, values)\n            if (response.status === 200) {\n                props.onClose();\n                props.setAction((pre) => !pre)\n            }\n        } catch (e) {\n            console.log(e);\n        }\n        finally {\n            setIsLoding(false)\n        }\n    };\n\n    const handleClose = () => {\n        props.onClose(false)\n        props.setSelectedId && props?.setSelectedId()\n    }\n\n    let response\n\n\n    const fetchData = async () => {\n        if (data) {\n            setInitialValues((prev) => ({ ...prev, ...data }))\n        } else if (props?.selectedId) {\n            try {\n                setIsLoding(true)\n                response = await getApi('api/property/view/', props?.selectedId)\n                setInitialValues((prev) => ({ ...prev, ...response?.data?.property }))\n            } catch (e) {\n                console.error(e)\n            } finally {\n                setIsLoding(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, [props?.selectedId, data])\n\n    return (\n        <div>\n            <Drawer isOpen={props.isOpen} size={props.size}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader alignItems={\"center\"} justifyContent='space-between' display='flex' >\n                        Edit Property\n                        <IconButton onClick={handleClose} icon={<CloseIcon />} />\n                    </DrawerHeader>\n                    <DrawerBody>\n                        {isLoding ?\n                            <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\n                                <Spinner />\n                            </Flex>\n                            :\n                            <CustomForm moduleData={props.propertyData} values={values} setFieldValue={setFieldValue} handleChange={handleChange} handleBlur={handleBlur} errors={errors} touched={touched} />\n                        }\n                    </DrawerBody>\n                    <DrawerFooter>\n                        <Button size=\"sm\"\n                            sx={{ textTransform: \"capitalize\" }}\n                            variant=\"brand\"\n                            disabled={isLoding ? true : false}\n                            type=\"submit\"\n                            onClick={handleSubmit}\n                        >\n                            {isLoding ? <Spinner /> : 'Update'}\n                        </Button>\n                        <Button size=\"sm\"\n                            variant=\"outline\"\n                            colorScheme='red'\n                            sx={{\n                                marginLeft: 2,\n                                textTransform: \"capitalize\",\n                            }}\n                            onClick={() => { props.onClose(false) }}\n                        >\n                            Close\n                        </Button>\n                    </DrawerFooter>\n\n                </DrawerContent>\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Edit","// Chakra imports\nimport {\n  Box, Flex,\n  Grid,\n  GridItem,\n  Icon,\n  Text,\n  useColorModeValue\n} from \"@chakra-ui/react\";\n// Custom components\n// Assets\nimport Dropzone from \"components/Dropzone\";\nimport { MdUpload } from \"react-icons/md\";\n\nexport default function Upload(props) {\n  const { used, total, count, ...rest } = props;\n  // Chakra Color Mode\n  const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\n  const brandColor = useColorModeValue(\"brand.500\", \"white\");\n  const textColorSecondary = \"gray.400\";\n  return (\n    <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\n      <GridItem colSpan={{ base: 12 }} >\n        <Dropzone\n          w={{ base: \"100%\" }}\n          me='36px'\n          minH={200}\n          img={props.text === 'Property Photos' ? 'img' : ''}\n          height={'100%'}\n          onFileSelect={props.onFileSelect}\n          content={\n            <Box>\n              <Icon as={MdUpload} w='80px' h='80px' color={brandColor} />\n              <Flex justify='center' mx='auto' mb='12px'>\n                <Text fontSize='xl' fontWeight='700' color={brandColor}>\n                  Upload Files\n                </Text>\n              </Flex>\n              {count > 0 && <Text fontSize='sm' fontWeight='500' color='secondaryGray.500'>\n                Selected Files : {count}\n              </Text>}\n            </Box>\n          }\n        />\n      </GridItem>\n      <GridItem colSpan={{ base: 12 }} >\n        <Flex direction='column' >\n          <Text\n            color={textColorPrimary}\n            fontWeight='bold'\n            textAlign='start'\n            fontSize='2xl'\n            mt={{ base: \"20px\" }}>\n            Upload {props.text}\n          </Text>\n          <Text\n            color={textColorSecondary}\n            fontSize='md'\n            my={{ base: \"auto\" }}\n            mx='auto'\n            textAlign='start'>\n            Accepted File Types (Images files - 15MB max) only 10 files\n          </Text>\n        </Flex>\n      </GridItem>\n    </Grid>\n  );\n}\n\n","import { Button, Grid, GridItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\nimport Spinner from 'components/spinner/Spinner'\nimport { useFormik } from 'formik'\nimport { useState } from 'react'\nimport { postApi } from 'services/api'\nimport Upload from './Upload'\n\nconst PropertyPhoto = (props) => {\n    const { onClose, isOpen, fetchData, text } = props\n    const [isLoding, setIsLoding] = useState(false)\n\n    const initialValues = {\n        property: ''\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        onSubmit: (values, { resetForm }) => {\n            AddData();\n            resetForm();\n        },\n    });\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik\n\n    const AddData = async () => {\n        try {\n            setIsLoding(true)\n            const formData = new FormData();\n            // Append property to the formData\n            values.property.forEach((file) => {\n                formData?.append('property', file);\n            });\n            let response;\n            if (text === 'Property Photos') {\n                response = await postApi(`api/property/add-property-photos/${props.id}`, formData);\n            } else if (text === 'Virtual Tours or Videos') {\n                response = await postApi(`api/property/add-virtual-tours-or-videos/${props.id}`, formData);\n            } else if (text === 'Floor Plans') {\n                response = await postApi(`api/property/add-floor-plans/${props.id}`, formData);\n            } else if (text === 'Property Documents') {\n                response = await postApi(`api/property/add-property-documents/${props.id}`, formData);\n            }\n\n            if (response?.status === 200) {\n                fetchData(1);\n                formik.resetForm()\n                onClose();\n            }\n\n        } catch (e) {\n            console.log(e);\n        }\n        finally {\n            setIsLoding(false)\n        }\n    };\n\n\n    return (\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Select {text} </ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\n                        <GridItem colSpan={{ base: 12 }}>\n                            <Upload count={values.property.length} onFileSelect={(file) => setFieldValue('property', file)} text={text} />\n                            <Text mb='10px' color={'red'}> {errors.property && touched.property && <>Please Select {text}</>}</Text>\n                        </GridItem>\n                    </Grid>\n                </ModalBody>\n                <ModalFooter>\n                    <Button size=\"sm\" variant='brand' onClick={handleSubmit} mr={1} disabled={isLoding ? true : false} >{isLoding ? <Spinner /> : 'Save'}</Button>\n                    <Button size=\"sm\" colorScheme=\"red\" variant=\"outline\" onClick={() => {\n                        onClose()\n                        formik.resetForm()\n                    }}>Close</Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nexport default PropertyPhoto\n","import { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Flex, Grid, GridItem, Heading, Image, Menu, MenuButton, MenuDivider, MenuItem, MenuList, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Tab, TabList, TabPanel, TabPanels, Tabs, Text, useColorModeValue, useDisclosure } from \"@chakra-ui/react\";\nimport Card from \"components/card/Card\";\nimport { HSeparator } from \"components/separator/Separator\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { useEffect, useState } from \"react\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { getApi } from \"services/api\";\nimport Add from \"./Add\";\nimport Edit from \"./Edit\";\nimport PropertyPhoto from \"./components/propertyPhoto\";\nimport { HasAccess } from \"../../../redux/accessUtils\";\nimport DataNotFound from \"components/notFoundData\";\nimport xlsx from '../../../assets/img/fileImage/xlsx.png'\nimport jpg from '../../../assets/img/fileImage/jpg.png'\nimport png from '../../../assets/img/fileImage/png.png'\nimport pdf from '../../../assets/img/fileImage/pdf.png'\nimport xls from '../../../assets/img/fileImage/xls.png'\nimport csv from '../../../assets/img/fileImage/csv.png'\nimport file from '../../../assets/img/fileImage/file.png'\nimport CustomView from \"utils/customView\";\nimport CommonCheckTable from \"components/reactTable/checktable\";\nimport CommonDeleteModel from \"components/commonDeleteModel\";\nimport { deleteApi } from \"services/api\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPropertyCustomFiled } from \"../../../redux/slices/propertyCustomFiledSlice\";\nimport { fetchContactCustomFiled } from '../../../redux/slices/contactCustomFiledSlice';\nimport { FaFilePdf } from \"react-icons/fa\";\nimport html2pdf from \"html2pdf.js\";\nimport moment from 'moment';\n\nconst View = () => {\n\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    const param = useParams()\n    const buttonbg = useColorModeValue(\"gray.200\", \"white\");\n    const textColor = useColorModeValue(\"gray.500\", \"white\");\n\n    const [data, setData] = useState()\n    const [filteredContacts, setFilteredContacts] = useState([])\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const [edit, setEdit] = useState(false);\n    const [deleteModel, setDelete] = useState(false);\n    const [action, setAction] = useState(false)\n    const [propertyPhoto, setPropertyPhoto] = useState(false);\n    const [showProperty, setShowProperty] = useState(false);\n    const [virtualToursorVideos, setVirtualToursorVideos] = useState(false);\n    const [floorPlans, setFloorPlans] = useState(false);\n    const [propertyDocuments, setPropertyDocuments] = useState(false);\n    const [isLoding, setIsLoding] = useState(false)\n    const [displayPropertyPhoto, setDisplayPropertyPhoto] = useState(false)\n    const [selectedTab, setSelectedTab] = useState(0);\n    const dispatch = useDispatch();\n    const propertyData = useSelector((state) => state?.propertyCustomFiled?.data?.data)\n\n    const [contactData, setContactData] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [type, setType] = useState(false)\n    const navigate = useNavigate();\n\n    const size = \"lg\";\n\n    const contactColumns = [\n        { Header: 'Title', accessor: 'title' },\n        { Header: \"First Name\", accessor: \"firstName\" },\n        { Header: \"Last Name\", accessor: \"lastName\" },\n        { Header: \"Phone Number\", accessor: \"phoneNumber\" },\n        { Header: \"Email Address\", accessor: \"email\" },\n        { Header: \"Contact Method\", accessor: \"preferredContactMethod\" },\n    ];\n\n    const fetchCustomDataFields = async () => {\n        setIsLoding(true);\n        const result = await dispatch(fetchContactCustomFiled())\n        setContactData(result?.payload?.data);\n\n        const tempTableColumns = [\n            { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n            ...result?.payload?.data?.[0]?.fields?.filter((field) => field?.isTableField === true)?.map((field) => ({ Header: field?.label, accessor: field?.name })),\n        ];\n        setColumns(tempTableColumns);\n        setIsLoding(false);\n    };\n\n    const [selectedColumns, setSelectedColumns] = useState([...columns]);\n\n    const handleTabChange = (index) => {\n        setSelectedTab(index);\n    };\n\n    const fetchData = async (i) => {\n        setIsLoding(true)\n        let response = await getApi('api/property/view/', param.id)\n        setData(response.data.property);\n        setFilteredContacts(response?.data?.filteredContacts);\n        setIsLoding(false)\n        setSelectedTab(i)\n    }\n    const generatePDF = () => {\n        const element = document.getElementById(\"reports\");\n        if (element) {\n            element.style.display = 'block';\n            element.style.width = '100%'; // Adjust width for mobile\n            element.style.height = 'auto';\n            // setTimeout(() => {\n            html2pdf()\n                .from(element)\n                .set({\n                    margin: [0, 0, 0, 0],\n                    filename: `Property_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n                    image: { type: \"jpeg\", quality: 0.98 },\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n                })\n                .save().then(() => {\n                    element.style.display = '';\n                })\n            // }, 500);\n        } else {\n            console.error(\"Element with ID 'reports' not found.\");\n        }\n    };\n    const handleDeleteProperties = async (id) => {\n        try {\n            setIsLoding(true)\n            let response = await deleteApi('api/property/delete/', id)\n            if (response.status === 200) {\n                setDelete(false)\n                setAction((pre) => !pre)\n                navigate('/properties')\n            }\n        } catch (error) {\n            console.log(error)\n        }\n        finally {\n            setIsLoding(false)\n        }\n    }\n\n    useEffect(() => {\n        dispatch(fetchPropertyCustomFiled())\n        fetchData()\n        fetchCustomDataFields()\n    }, [])\n\n\n    const [permission, contactAccess, emailAccess, callAccess] = HasAccess(['Properties', 'Contacts', 'Emails', 'Calls']);\n\n    return (\n        <>\n            <Add isOpen={isOpen} size={size} onClose={onClose} propertyData={propertyData?.[0]} />\n            <Edit isOpen={edit} size={size} onClose={setEdit} setAction={setAction} propertyData={propertyData?.[0]} data={data} />\n            <CommonDeleteModel isOpen={deleteModel} onClose={() => setDelete(false)} type='Property' handleDeleteData={handleDeleteProperties} ids={param.id} />\n\n            {isLoding ?\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\n                    <Spinner />\n                </Flex> : <>\n                    <Heading size=\"lg\" mt={0} m={3}>\n                        {data?.name || \"\"}\n                    </Heading>\n                    <Tabs onChange={handleTabChange} index={selectedTab}>\n                        <Grid templateColumns={'repeat(12, 1fr)'} mb={3} gap={1}>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <TabList sx={{\n                                    border: \"none\",\n                                    '& button:focus': { boxShadow: 'none', },\n                                    '& button': {\n                                        margin: { sm: \"0 3px\", md: \"0 5px\" }, padding: { sm: \"5px\", md: \"8px\" }, border: '2px solid #8080803d', borderTopLeftRadius: \"10px\", borderTopRightRadius: \"10px\", borderBottom: 0, fontSize: { sm: \"12px\", md: \"16px\" }\n                                    },\n                                    '& button[aria-selected=\"true\"]': {\n                                        border: \"2px solid brand.200\", borderBottom: 0, zIndex: '0'\n                                    },\n                                }} >\n                                    <Tab >Information</Tab>\n                                    <Tab>Gallery</Tab>\n                                </TabList>\n\n                            </GridItem>\n                            <GridItem colSpan={{ base: 12, md: 6 }} mt={{ sm: \"3px\", md: \"5px\" }} >\n                                <Flex justifyContent={\"right\"}>\n                                    <Menu>\n                                        {(user.role === 'superAdmin' || permission?.create || permission?.update || permission?.delete) && <MenuButton variant=\"outline\" size=\"sm\" colorScheme='blackAlpha' va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\n                                            Actions\n                                        </MenuButton>}\n                                        <MenuDivider />\n                                        <MenuList minWidth={2}>\n                                            {(user.role === 'superAdmin' || permission?.create) && <MenuItem alignItems={'start'} color={'blue'} onClick={() => onOpen()} icon={<AddIcon />}>Add</MenuItem>}\n                                            {(user.role === 'superAdmin' || permission?.update) && <MenuItem alignItems={'start'} onClick={() => setEdit(true)} icon={<EditIcon />}>Edit</MenuItem>}\n                                            <MenuItem onClick={generatePDF} alignItems={\"start\"} icon={<FaFilePdf />} display={\"flex\"} style={{ alignItems: \"center\" }}>Print as PDF</MenuItem >\n                                            {(user.role === 'superAdmin' || permission?.delete) && <>\n                                                <MenuDivider />\n                                                <MenuItem alignItems={'start'} color={'red'} onClick={() => setDelete(true)} icon={<DeleteIcon />}>Delete</MenuItem>\n                                            </>}\n                                        </MenuList>\n                                    </Menu>\n                                    <Link to=\"/properties\">\n                                        <Button size=\"sm\" leftIcon={<IoIosArrowBack />} variant=\"brand\">\n                                            Back\n                                        </Button>\n                                    </Link>\n                                </Flex>\n                            </GridItem>\n                        </Grid>\n\n                        <TabPanels>\n                            <TabPanel pt={4} p={0}>\n                                <CustomView data={propertyData?.[0]} fieldData={data} fetchData={fetchData} editUrl={`api/property/edit/${param.id}`} moduleId={propertyData?.[0]?._id} id=\"reports\" />\n                                {filteredContacts?.length > 0 &&\n                                    <GridItem colSpan={{ base: 12 }} mt={4}>\n                                        <Grid templateColumns={{ base: \"1fr\" }} >\n                                            <GridItem colSpan={2}>\n                                                <Grid templateColumns={'repeat(2, 1fr)'} >\n                                                    <GridItem colSpan={{ base: 2 }}>\n                                                        <CommonCheckTable\n                                                            AdvanceSearch={false}\n                                                            ManageGrid={false}\n                                                            access={false}\n                                                            columnData={columns ?? []}\n                                                            // dataColumn={columns ?? []}\n                                                            title={\"Interested Contact\"}\n                                                            allData={filteredContacts ?? []}\n                                                            tableData={filteredContacts}\n                                                            // selectedColumns={selectedColumns}\n                                                            // setSelectedColumns={setSelectedColumns}\n                                                            size={\"md\"}\n                                                            tableCustomFields={contactData?.[0]?.fields?.filter((field) => field?.isTableField === true) || []}\n                                                            customSearch={true}\n                                                            checkBox={false}\n                                                        />\n                                                    </GridItem>\n                                                </Grid>\n                                            </GridItem>\n\n                                        </Grid>\n                                    </GridItem>\n                                }\n                            </TabPanel>\n\n                            <TabPanel pt={4} p={0}>\n                                <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\n                                    <GridItem colSpan={{ base: 12, md: 6 }}>\n                                        <Card >\n                                            <Grid templateColumns=\"repeat(12, 1fr)\" gap={4}>\n                                                <GridItem colSpan={12}>\n                                                    <Box>\n                                                        <Flex flexWrap={'wrap'} mb={3} justifyContent={'space-between'} alingItem={'center'} >\n                                                            <Heading size=\"md\" >\n                                                                Property Photos\n                                                            </Heading>\n                                                            <Button size=\"sm\" leftIcon={<AddIcon />} onClick={() => setPropertyPhoto(true)} variant=\"brand\">Add New</Button>\n                                                            <PropertyPhoto text='Property Photos' fetchData={fetchData} isOpen={propertyPhoto} onClose={setPropertyPhoto} id={param.id} />\n                                                        </Flex>\n                                                        <HSeparator />\n                                                    </Box>\n                                                </GridItem>\n                                                <GridItem colSpan={{ base: 12 }} >\n                                                    <Flex overflowY={\"scroll\"} height={\"150px\"} alingItem={'center'} >\n                                                        {data?.propertyPhotos?.length > 0 ?\n                                                            data && data?.propertyPhotos?.length > 0 && data?.propertyPhotos?.map((item) => (\n                                                                <Image width={'150px'} m={1} src={item.img} alt=\"Your Image\" />\n                                                            )) : <Text textAlign={'center'} width=\"100%\" color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n                                                                <DataNotFound />\n                                                            </Text>}\n                                                    </Flex>\n                                                    {data?.propertyPhotos?.length > 0 ?\n                                                        <Flex justifyContent={\"end\"} mt={1}>\n                                                            <Button size=\"sm\" colorScheme=\"brand\" variant=\"outline\" onClick={() => { setDisplayPropertyPhoto(true); setType(\"photo\"); }}>Show more</Button>\n                                                        </Flex> : \"\"}\n                                                </GridItem>\n                                            </Grid>\n                                        </Card>\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 12, md: 6 }}>\n                                        <Card >\n                                            <Grid templateColumns=\"repeat(12, 1fr)\" gap={4}>\n                                                <GridItem colSpan={12}>\n                                                    <Box>\n                                                        <Flex flexWrap={'wrap'} mb={3} justifyContent={'space-between'} alingItem={'center'} >\n                                                            <Heading size=\"md\" >\n                                                                Virtual Tours or Videos\n                                                            </Heading>\n                                                            <Button size=\"sm\" leftIcon={<AddIcon />} onClick={() => setVirtualToursorVideos(true)} variant=\"brand\">Add New</Button>\n                                                            <PropertyPhoto text='Virtual Tours or Videos' fetchData={fetchData} isOpen={virtualToursorVideos} onClose={setVirtualToursorVideos} id={param.id} />\n                                                        </Flex>\n                                                        <HSeparator />\n                                                    </Box>\n                                                </GridItem>\n                                                <GridItem colSpan={{ base: 12 }} >\n                                                    <Flex overflowY={\"scroll\"} height={\"150px\"} alingItem={'center'} >\n                                                        {data?.virtualToursOrVideos?.length > 0 ?\n                                                            data && data?.virtualToursOrVideos?.length > 0 && data?.virtualToursOrVideos?.map((item) => (\n                                                                <video width=\"200\" controls autoplay loop style={{ margin: \"0 5px\" }}>\n                                                                    <source src={item.img} type=\"video/mp4\" />\n                                                                    <source src={item.img} type=\"video/ogg\" />\n                                                                </video>\n                                                            )) : <Text textAlign={'center'} width=\"100%\" color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n                                                                <DataNotFound />\n                                                            </Text>}\n\n                                                    </Flex>\n\n                                                </GridItem>\n                                            </Grid>\n                                        </Card>\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 12, md: 6 }}>\n                                        <Card >\n                                            <Grid templateColumns=\"repeat(12, 1fr)\" gap={4}>\n                                                <GridItem colSpan={12}>\n                                                    <Box>\n                                                        <Flex flexWrap={'wrap'} mb={3} justifyContent={'space-between'} alingItem={'center'} >\n                                                            <Heading size=\"md\" >\n                                                                Floor Plans\n                                                            </Heading>\n                                                            <Button size=\"sm\" leftIcon={<AddIcon />} onClick={() => setFloorPlans(true)} variant=\"brand\">Add New</Button>\n                                                            <PropertyPhoto text='Floor Plans' fetchData={fetchData} isOpen={floorPlans} onClose={setFloorPlans} id={param.id} />\n                                                        </Flex>\n                                                        <HSeparator />\n                                                    </Box>\n                                                </GridItem>\n                                                <GridItem colSpan={{ base: 12 }} >\n                                                    <Flex overflowY={\"scroll\"} height={\"150px\"} alingItem={'center'} >\n                                                        {data?.floorPlans?.length > 0 ?\n                                                            data && data?.floorPlans?.length > 0 && data?.floorPlans?.map((item) => (\n                                                                <Image key={item.createOn} width={'30%'} m={1} src={item.img} alt=\"Your Image\" />\n                                                            )) : <Text textAlign={'center'} width=\"100%\" color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n                                                                <DataNotFound />\n                                                            </Text>}\n                                                    </Flex>\n                                                    {data?.floorPlans?.length > 0 ?\n                                                        <Flex justifyContent={\"end\"} mt={1}>\n                                                            <Button size=\"sm\" colorScheme=\"brand\" variant=\"outline\" onClick={() => { setDisplayPropertyPhoto(true); setType(\"floor\"); }}>Show more</Button>\n                                                        </Flex> : \"\"}\n                                                </GridItem>\n                                            </Grid>\n                                        </Card>\n                                    </GridItem>\n                                    <GridItem colSpan={{ base: 12, md: 6 }}>\n                                        <Card  >\n                                            <Grid templateColumns=\"repeat(12, 1fr)\" gap={4}>\n                                                <GridItem colSpan={12}>\n                                                    <Box>\n                                                        <Flex flexWrap={'wrap'} mb={3} justifyContent={'space-between'} alingItem={'center'} >\n                                                            <Heading size=\"md\" >\n                                                                Property Documents\n                                                            </Heading>\n                                                            <Button size=\"sm\" variant=\"brand\" leftIcon={<AddIcon />} onClick={() => setPropertyDocuments(true)}>Add New</Button>\n                                                            <PropertyPhoto text='Property Documents' fetchData={fetchData} isOpen={propertyDocuments} onClose={setPropertyDocuments} id={param.id} />\n                                                        </Flex>\n                                                        <HSeparator />\n                                                    </Box>\n                                                </GridItem>\n                                                <GridItem colSpan={12} sx={{ maxHeight: '200px', overflowX: 'auto' }}>\n                                                    {data?.propertyDocuments?.length > 0 ?\n                                                        (data && data?.propertyDocuments?.length > 0 && data?.propertyDocuments?.map((item) => {\n                                                            const parts = item.filename.split('.');\n                                                            const lastIndex = parts[parts.length - 1]\n                                                            return (\n                                                                <Flex alignItems={'center'} mt='3'>\n                                                                    {lastIndex === 'xlsx' && <Image src={xlsx} boxSize='50px' />}\n                                                                    {lastIndex === 'jpg' && <Image src={jpg} boxSize='50px' />}\n                                                                    {lastIndex === 'png' && <Image src={png} boxSize='50px' />}\n                                                                    {lastIndex === 'pdf' && <Image src={pdf} boxSize='50px' />}\n                                                                    {lastIndex === 'xls' && <Image src={xls} boxSize='50px' />}\n                                                                    {lastIndex === 'csv' && <Image src={csv} boxSize='50px' />}\n                                                                    {!(lastIndex === 'xls' || lastIndex === 'csv' || lastIndex === 'png' || lastIndex === 'pdf' || lastIndex === 'xlsx' || lastIndex === 'jpg') && <Image src={file} boxSize='50px' />}\n                                                                    <Text ml={2} color='green.400' onClick={() => window.open(item?.img)} cursor={'pointer'} sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>\n                                                                        {item.filename}\n                                                                    </Text>\n                                                                </Flex>\n                                                            )\n                                                        }))\n                                                        :\n                                                        <Text textAlign={'center'} width=\"100%\" color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n                                                            <DataNotFound />\n                                                        </Text>}\n                                                </GridItem>\n                                            </Grid>\n                                            {data?.propertyDocuments?.length > 0 ?\n                                                <Flex justifyContent={\"end\"} mt={1}>\n                                                    <Button size=\"sm\" colorScheme=\"brand\" variant=\"outline\" onClick={() => { setShowProperty(true); setType(\"Doucument\"); }}>Show more</Button>\n                                                </Flex> : \"\"}\n                                        </Card>\n                                    </GridItem>\n                                </Grid>\n                            </TabPanel>\n                        </TabPanels>\n\n                    </Tabs>\n\n                    {(permission?.delete || permission?.update || user?.role === 'superAdmin') && <Card mt={3}>\n                        <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\n                            <GridItem colStart={6} >\n                                <Flex justifyContent={\"right\"}>\n                                    {permission?.update && <Button onClick={() => setEdit(true)} size=\"sm\" leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>}\n                                    {permission?.delete && <Button style={{ background: 'red.800' }} size=\"sm\" onClick={() => setDelete(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\n                                </Flex>\n                            </GridItem>\n                        </Grid>\n                    </Card>}\n                </>}\n\n            {/* property photo modal */}\n            <Modal onClose={() => setDisplayPropertyPhoto(false)} isOpen={displayPropertyPhoto} >\n                <ModalOverlay />\n                <ModalContent maxWidth={\"6xl\"} height={\"750px\"}>\n                    <ModalHeader>{type === \"photo\" ? \"Property All Photos\" : type === \"video\" ? \"Virtual Tours or Videos\" : type === \"floor\" ? \"Floors plans\" : \"\"}</ModalHeader>\n                    <ModalCloseButton onClick={() => setDisplayPropertyPhoto(false)} />\n                    <ModalBody overflowY={\"auto\"} height={\"700px\"}>\n                        <div style={{ columns: 3 }}  >\n                            {\n                                type === \"photo\" ?\n                                    data && data?.propertyPhotos?.length > 0 && data?.propertyPhotos?.map((item) => (\n                                        <a href={item.img} target=\"_blank\"> <Image width={\"100%\"} m={1} mb={4} src={item.img} alt=\"Your Image\" /></a>\n                                    )) :\n                                    type === \"video\" ? data && data?.virtualToursOrVideos?.length > 0 && data?.virtualToursOrVideos?.map((item) => (\n                                        <a href={item.img} target=\"_blank\">\n                                            <video width=\"380\" controls autoplay loop style={{ margin: \" 5px\" }}>\n                                                <source src={item.img} type=\"video/mp4\" />\n                                                <source src={item.img} type=\"video/ogg\" />\n                                            </video>\n                                        </a>\n                                    )) : type === \"floor\" ?\n                                        data && data?.floorPlans?.length > 0 && data?.floorPlans?.map((item) => (\n                                            <a href={item.img} target=\"_blank\">\n                                                <Image width={\"100%\"} m={1} mb={4} src={item.img} alt=\"Your Image\" />\n                                            </a>\n                                        )) : \"\"\n                            }\n                        </div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button size=\"sm\" variant=\"outline\" colorScheme='red' mr={2} onClick={() =>\n                            setDisplayPropertyPhoto(false)} >Close</Button>\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n\n            {/* property document modal */}\n            <Modal onClose={() => setShowProperty(false)} isOpen={showProperty} >\n                <ModalOverlay />\n                <ModalContent maxWidth={\"xl\"} height={\"750px\"}>\n                    <ModalHeader>Property All Document</ModalHeader>\n                    <ModalCloseButton onClick={() => setShowProperty(false)} />\n                    <ModalBody overflowY={\"auto\"} height={\"700px\"}>\n                        {data?.propertyDocuments?.length > 0 ?\n                            (data && data?.propertyDocuments?.length > 0 && data?.propertyDocuments?.map((item) => {\n                                const parts = item.filename.split('.');\n                                const lastIndex = parts[parts.length - 1]\n                                return (\n                                    <Flex alignItems={'center'} mt='3'>\n                                        {lastIndex === 'xlsx' && <Image src={xlsx} boxSize='50px' />}\n                                        {lastIndex === 'jpg' && <Image src={jpg} boxSize='50px' />}\n                                        {lastIndex === 'png' && <Image src={png} boxSize='50px' />}\n                                        {lastIndex === 'pdf' && <Image src={pdf} boxSize='50px' />}\n                                        {lastIndex === 'xls' && <Image src={xls} boxSize='50px' />}\n                                        {lastIndex === 'csv' && <Image src={csv} boxSize='50px' />}\n                                        {!(lastIndex === 'xls' || lastIndex === 'csv' || lastIndex === 'png' || lastIndex === 'pdf' || lastIndex === 'xlsx' || lastIndex === 'jpg') && <Image src={file} boxSize='50px' />}\n                                        <Text ml={2} color='green.400' onClick={() => window.open(item?.img)} cursor={'pointer'} sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>\n                                            {item.filename}\n                                        </Text>\n                                    </Flex>\n                                )\n                            }))\n                            :\n                            <Text textAlign={'center'} width=\"100%\" color={textColor} fontSize=\"sm\" fontWeight=\"700\">\n                                <DataNotFound />\n                            </Text>}\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button size=\"sm\" variant=\"outline\" colorScheme='red' mr={2} onClick={() =>\n                            setShowProperty(false)} >Close</Button>\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n\n        </>\n    );\n};\n\nexport default View;\n","import { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles } from '@chakra-ui/system';\nimport { normalizeEventKey, callAllHandlers, determineLazyBehavior, isUndefined, focus, omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useClickable } from '@chakra-ui/clickable';\nimport { createDescendantContext } from '@chakra-ui/descendant';\nimport { useControllableState, useId, useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { createContext, mergeRefs, getValidChildren } from '@chakra-ui/react-utils';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$1 = [\"defaultIndex\", \"onChange\", \"index\", \"isManual\", \"isLazy\", \"lazyBehavior\", \"orientation\", \"direction\"],\n    _excluded2$1 = [\"isDisabled\", \"isFocusable\"],\n    _excluded3 = [\"isSelected\", \"id\", \"children\"];\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nvar _createDescendantCont = createDescendantContext(),\n    TabsDescendantsProvider = _createDescendantCont[0],\n    useTabsDescendantsContext = _createDescendantCont[1],\n    useTabsDescendants = _createDescendantCont[2],\n    useTabsDescendant = _createDescendantCont[3];\n\n/**\n * Tabs hook that provides all the states, and accessibility\n * helpers to keep all things working properly.\n *\n * Its returned object will be passed unto a Context Provider\n * so all child components can read from it.\n * There is no document link yet\n * @see Docs https://chakra-ui.com/docs/components/useTabs\n */\nfunction useTabs(props) {\n  var defaultIndex = props.defaultIndex,\n      onChange = props.onChange,\n      index = props.index,\n      isManual = props.isManual,\n      isLazy = props.isLazy,\n      _props$lazyBehavior = props.lazyBehavior,\n      lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? \"horizontal\" : _props$orientation,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? \"ltr\" : _props$direction,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$1);\n  /**\n   * We use this to keep track of the index of the focused tab.\n   *\n   * Tabs can be automatically activated, this means selection follows focus.\n   * When we navigate with the arrow keys, we move focus and selection to next/prev tab\n   *\n   * Tabs can also be manually activated, this means selection does not follow focus.\n   * When we navigate with the arrow keys, we only move focus NOT selection. The user\n   * will need not manually activate the tab using `Enter` or `Space`.\n   *\n   * This is why we need to keep track of the `focusedIndex` and `selectedIndex`\n   */\n\n\n  var _React$useState = React.useState(defaultIndex != null ? defaultIndex : 0),\n      focusedIndex = _React$useState[0],\n      setFocusedIndex = _React$useState[1];\n\n  var _useControllableState = useControllableState({\n    defaultValue: defaultIndex != null ? defaultIndex : 0,\n    value: index,\n    onChange: onChange\n  }),\n      selectedIndex = _useControllableState[0],\n      setSelectedIndex = _useControllableState[1];\n  /**\n   * Sync focused `index` with controlled `selectedIndex` (which is the `props.index`)\n   */\n\n\n  React.useEffect(function () {\n    if (index != null) {\n      setFocusedIndex(index);\n    }\n  }, [index]);\n  /**\n   * Think of `useDescendants` as a register for the tab nodes.\n   */\n\n  var descendants = useTabsDescendants();\n  /**\n   * Generate a unique id or use user-provided id for the tabs widget\n   */\n\n  var id = useId(props.id, \"tabs\");\n  return {\n    id: id,\n    selectedIndex: selectedIndex,\n    focusedIndex: focusedIndex,\n    setSelectedIndex: setSelectedIndex,\n    setFocusedIndex: setFocusedIndex,\n    isManual: isManual,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior,\n    orientation: orientation,\n    descendants: descendants,\n    direction: direction,\n    htmlProps: htmlProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"TabsContext\",\n  errorMessage: \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\"\n}),\n    TabsProvider = _createContext[0],\n    useTabsContext = _createContext[1];\n\n/**\n * Tabs hook to manage multiple tab buttons,\n * and ensures only one tab is selected per time.\n *\n * @param props props object for the tablist\n */\nfunction useTabList(props) {\n  var _useTabsContext = useTabsContext(),\n      focusedIndex = _useTabsContext.focusedIndex,\n      orientation = _useTabsContext.orientation,\n      direction = _useTabsContext.direction;\n\n  var descendants = useTabsDescendantsContext();\n  var onKeyDown = React.useCallback(function (event) {\n    var _keyMap;\n\n    var nextTab = function nextTab() {\n      var next = descendants.nextEnabled(focusedIndex);\n      if (next) focus(next.node);\n    };\n\n    var prevTab = function prevTab() {\n      var prev = descendants.prevEnabled(focusedIndex);\n      if (prev) focus(prev.node);\n    };\n\n    var firstTab = function firstTab() {\n      var first = descendants.firstEnabled();\n      if (first) focus(first.node);\n    };\n\n    var lastTab = function lastTab() {\n      var last = descendants.lastEnabled();\n      if (last) focus(last.node);\n    };\n\n    var isHorizontal = orientation === \"horizontal\";\n    var isVertical = orientation === \"vertical\";\n    var eventKey = normalizeEventKey(event);\n    var ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\";\n    var ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\";\n    var keyMap = (_keyMap = {}, _keyMap[ArrowStart] = function () {\n      return isHorizontal && prevTab();\n    }, _keyMap[ArrowEnd] = function () {\n      return isHorizontal && nextTab();\n    }, _keyMap.ArrowDown = function ArrowDown() {\n      return isVertical && nextTab();\n    }, _keyMap.ArrowUp = function ArrowUp() {\n      return isVertical && prevTab();\n    }, _keyMap.Home = firstTab, _keyMap.End = lastTab, _keyMap);\n    var action = keyMap[eventKey];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [descendants, focusedIndex, orientation, direction]);\n  return _extends({}, props, {\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\n\n/**\n * Tabs hook to manage each tab button.\n *\n * A tab can be disabled and focusable, or both,\n * hence the use of `useClickable` to handle this scenario\n */\nfunction useTab(props) {\n  var isDisabled = props.isDisabled,\n      isFocusable = props.isFocusable,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded2$1);\n\n  var _useTabsContext2 = useTabsContext(),\n      setSelectedIndex = _useTabsContext2.setSelectedIndex,\n      isManual = _useTabsContext2.isManual,\n      id = _useTabsContext2.id,\n      setFocusedIndex = _useTabsContext2.setFocusedIndex,\n      selectedIndex = _useTabsContext2.selectedIndex;\n\n  var _useTabsDescendant = useTabsDescendant({\n    disabled: isDisabled && !isFocusable\n  }),\n      index = _useTabsDescendant.index,\n      register = _useTabsDescendant.register;\n\n  var isSelected = index === selectedIndex;\n\n  var onClick = function onClick() {\n    setSelectedIndex(index);\n  };\n\n  var onFocus = function onFocus() {\n    setFocusedIndex(index);\n    var isDisabledButFocusable = isDisabled && isFocusable;\n    var shouldSelect = !isManual && !isDisabledButFocusable;\n\n    if (shouldSelect) {\n      setSelectedIndex(index);\n    }\n  };\n\n  var clickableProps = useClickable(_extends({}, htmlProps, {\n    ref: mergeRefs(register, props.ref),\n    isDisabled: isDisabled,\n    isFocusable: isFocusable,\n    onClick: callAllHandlers(props.onClick, onClick)\n  }));\n  var type = \"button\";\n  return _extends({}, clickableProps, {\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type: type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? undefined : callAllHandlers(props.onFocus, onFocus)\n  });\n}\n\n/**\n * Tabs hook for managing the visibility of multiple tab panels.\n *\n * Since only one panel can be show at a time, we use `cloneElement`\n * to inject `selected` panel to each TabPanel.\n *\n * It returns a cloned version of its children with\n * all functionality included.\n */\nfunction useTabPanels(props) {\n  var context = useTabsContext();\n  var id = context.id,\n      selectedIndex = context.selectedIndex;\n  var validChildren = getValidChildren(props.children);\n  var children = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      isSelected: index === selectedIndex,\n      id: makeTabPanelId(id, index),\n      // Refers to the associated tab element, and also provides an accessible name to the tab panel.\n      \"aria-labelledby\": makeTabId(id, index)\n    });\n  });\n  return _extends({}, props, {\n    children: children\n  });\n}\n/**\n * Tabs hook for managing the visible/hidden states\n * of the tab panel.\n *\n * @param props props object for the tab panel\n */\n\nfunction useTabPanel(props) {\n  var isSelected = props.isSelected,\n      id = props.id,\n      children = props.children,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var _useTabsContext3 = useTabsContext(),\n      isLazy = _useTabsContext3.isLazy,\n      lazyBehavior = _useTabsContext3.lazyBehavior;\n\n  var hasBeenSelected = React.useRef(false);\n\n  if (isSelected) {\n    hasBeenSelected.current = true;\n  }\n\n  var shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenSelected.current,\n    isSelected: isSelected,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior\n  });\n  return _extends({\n    // Puts the tabpanel in the page `Tab` sequence.\n    tabIndex: 0\n  }, htmlProps, {\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    hidden: !isSelected,\n    id: id\n  });\n}\n/**\n * Tabs hook to show an animated indicators that\n * follows the active tab.\n *\n * The way we do it is by measuring the DOM Rect (or dimensions)\n * of the active tab, and return that as CSS style for\n * the indicator.\n */\n\nfunction useTabIndicator() {\n  var context = useTabsContext();\n  var descendants = useTabsDescendantsContext();\n  var selectedIndex = context.selectedIndex,\n      orientation = context.orientation;\n  var isHorizontal = orientation === \"horizontal\";\n  var isVertical = orientation === \"vertical\"; // Get the clientRect of the selected tab\n\n  var _React$useState2 = React.useState(function () {\n    if (isHorizontal) return {\n      left: 0,\n      width: 0\n    };\n    if (isVertical) return {\n      top: 0,\n      height: 0\n    };\n    return undefined;\n  }),\n      rect = _React$useState2[0],\n      setRect = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      hasMeasured = _React$useState3[0],\n      setHasMeasured = _React$useState3[1]; // Update the selected tab rect when the selectedIndex changes\n\n\n  useSafeLayoutEffect(function () {\n    if (isUndefined(selectedIndex)) return undefined;\n    var tab = descendants.item(selectedIndex);\n    if (isUndefined(tab)) return undefined; // Horizontal Tab: Calculate width and left distance\n\n    if (isHorizontal) {\n      setRect({\n        left: tab.node.offsetLeft,\n        width: tab.node.offsetWidth\n      });\n    } // Vertical Tab: Calculate height and top distance\n\n\n    if (isVertical) {\n      setRect({\n        top: tab.node.offsetTop,\n        height: tab.node.offsetHeight\n      });\n    } // Prevent unwanted transition from 0 to measured rect\n    // by setting the measured state in the next tick\n\n\n    var id = requestAnimationFrame(function () {\n      setHasMeasured(true);\n    });\n    return function () {\n      if (id) {\n        cancelAnimationFrame(id);\n      }\n    };\n  }, [selectedIndex, isHorizontal, isVertical, descendants]);\n  return _extends({\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom, height, width\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\"\n  }, rect);\n}\n\nfunction makeTabId(id, index) {\n  return id + \"--tab-\" + index;\n}\n\nfunction makeTabPanelId(id, index) {\n  return id + \"--tabpanel-\" + index;\n}\n\nvar _excluded = [\"children\", \"className\"],\n    _excluded2 = [\"htmlProps\", \"descendants\"];\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components.\n */\nvar Tabs = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Tabs\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      className = _omitThemingProps.className,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var _useTabs = useTabs(rest),\n      htmlProps = _useTabs.htmlProps,\n      descendants = _useTabs.descendants,\n      ctx = _objectWithoutPropertiesLoose(_useTabs, _excluded2);\n\n  var context = React.useMemo(function () {\n    return ctx;\n  }, [ctx]);\n  var rootProps = omit(htmlProps, [\"isFitted\"]);\n  return /*#__PURE__*/React.createElement(TabsDescendantsProvider, {\n    value: descendants\n  }, /*#__PURE__*/React.createElement(TabsProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: cx(\"chakra-tabs\", className),\n    ref: ref\n  }, rootProps, {\n    __css: styles.root\n  }), children))));\n});\n\nif (__DEV__) {\n  Tabs.displayName = \"Tabs\";\n}\n\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\nvar Tab = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var tabProps = useTab(_extends({}, props, {\n    ref: ref\n  }));\n\n  var tabStyles = _extends({\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, styles.tab);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({}, tabProps, {\n    className: cx(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  }));\n});\n\nif (__DEV__) {\n  Tab.displayName = \"Tab\";\n}\n\n/**\n * TabList is used to manage a list of tab buttons. It renders a `div` by default,\n * and is responsible the keyboard interaction between tabs.\n */\nvar TabList = /*#__PURE__*/forwardRef(function (props, ref) {\n  var tablistProps = useTabList(_extends({}, props, {\n    ref: ref\n  }));\n  var styles = useStyles();\n\n  var tablistStyles = _extends({\n    display: \"flex\"\n  }, styles.tablist);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, tablistProps, {\n    className: cx(\"chakra-tabs__tablist\", props.className),\n    __css: tablistStyles\n  }));\n});\n\nif (__DEV__) {\n  TabList.displayName = \"TabList\";\n}\n\n/**\n * TabPanel\n * Used to render the content for a specific tab.\n */\nvar TabPanel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var panelProps = useTabPanel(_extends({}, props, {\n    ref: ref\n  }));\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    outline: \"0\"\n  }, panelProps, {\n    className: cx(\"chakra-tabs__tab-panel\", props.className),\n    __css: styles.tabpanel\n  }));\n});\n\nif (__DEV__) {\n  TabPanel.displayName = \"TabPanel\";\n}\n\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\nvar TabPanels = /*#__PURE__*/forwardRef(function (props, ref) {\n  var panelsProps = useTabPanels(props);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, panelsProps, {\n    width: \"100%\",\n    ref: ref,\n    className: cx(\"chakra-tabs__tab-panels\", props.className),\n    __css: styles.tabpanels\n  }));\n});\n\nif (__DEV__) {\n  TabPanels.displayName = \"TabPanels\";\n}\n\n/**\n * TabIndicator\n *\n * Used to render an active tab indicator that animates between\n * selected tabs.\n */\nvar TabIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var indicatorStyle = useTabIndicator();\n\n  var style = _extends({}, props.style, indicatorStyle);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-tabs__tab-indicator\", props.className),\n    style: style,\n    __css: styles.indicator\n  }));\n});\n\nif (__DEV__) {\n  TabIndicator.displayName = \"TabIndicator\";\n}\n\nexport { Tab, TabIndicator, TabList, TabPanel, TabPanels, Tabs, TabsDescendantsProvider, TabsProvider, useTab, useTabIndicator, useTabList, useTabPanel, useTabPanels, useTabs, useTabsContext, useTabsDescendant, useTabsDescendants, useTabsDescendantsContext };\n"],"names":["props","_props$propertyData","_props$propertyData2","isLoding","setIsLoding","useState","initialFieldValues","Object","fromEntries","propertyData","fields","map","field","name","initialValues","_objectSpread","createBy","JSON","parse","localStorage","getItem","_id","formik","useFormik","enableReinitialize","validationSchema","yup","shape","generateValidationSchema","onSubmit","values","_ref","resetForm","AddData","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","async","_props$propertyData3","postApi","moduleId","status","onClose","setAction","pre","e","console","log","_jsx","children","_jsxs","Drawer","isOpen","size","DrawerOverlay","DrawerContent","DrawerHeader","alignItems","justifyContent","display","IconButton","onClick","icon","CloseIcon","DrawerBody","CustomForm","moduleData","DrawerFooter","Button","sx","textTransform","disabled","variant","type","Spinner","colorScheme","marginLeft","_props$leadData","data","leadData","setInitialValues","param","useParams","EditData","putApi","concat","selectedId","id","response","useEffect","prev","getApi","_response","_response$data","property","error","fetchData","handleClose","setSelectedId","Flex","width","Upload","used","total","count","textColorPrimary","_objectWithoutProperties","_excluded","useColorModeValue","brandColor","Grid","templateColumns","gap","GridItem","colSpan","base","Dropzone","w","me","minH","img","text","height","onFileSelect","content","Box","Icon","as","MdUpload","h","color","justify","mx","mb","Text","fontSize","fontWeight","direction","textAlign","mt","my","formData","FormData","forEach","file","append","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","length","_Fragment","ModalFooter","mr","View","_propertyData$","_contactData$","_contactData$$fields","_data$propertyPhotos","_data$propertyPhotos2","_data$propertyPhotos3","_data$propertyPhotos4","_data$virtualToursOrV","_data$virtualToursOrV2","_data$virtualToursOrV3","_data$floorPlans","_data$floorPlans2","_data$floorPlans3","_data$floorPlans4","_data$propertyDocumen","_data$propertyDocumen2","_data$propertyDocumen3","_data$propertyDocumen4","_data$propertyPhotos5","_data$propertyPhotos6","_data$virtualToursOrV4","_data$virtualToursOrV5","_data$floorPlans5","_data$floorPlans6","_data$propertyDocumen5","_data$propertyDocumen6","_data$propertyDocumen7","user","textColor","setData","filteredContacts","setFilteredContacts","onOpen","useDisclosure","edit","setEdit","deleteModel","setDelete","action","propertyPhoto","setPropertyPhoto","showProperty","setShowProperty","virtualToursorVideos","setVirtualToursorVideos","floorPlans","setFloorPlans","propertyDocuments","setPropertyDocuments","displayPropertyPhoto","setDisplayPropertyPhoto","selectedTab","setSelectedTab","dispatch","useDispatch","useSelector","state","_state$propertyCustom","_state$propertyCustom2","propertyCustomFiled","contactData","setContactData","columns","setColumns","setType","navigate","useNavigate","selectedColumns","setSelectedColumns","i","fetchPropertyCustomFiled","_result$payload","_result$payload2","_result$payload2$data","_result$payload2$data2","_result$payload2$data3","_result$payload2$data4","result","fetchContactCustomFiled","payload","tempTableColumns","Header","accessor","isSortable","filter","isTableField","label","fetchCustomDataFields","permission","contactAccess","emailAccess","callAccess","HasAccess","Add","Edit","CommonDeleteModel","handleDeleteData","deleteApi","ids","Heading","m","Tabs","onChange","index","md","TabList","border","boxShadow","margin","sm","padding","borderTopLeftRadius","borderTopRightRadius","borderBottom","zIndex","Tab","Menu","role","create","update","delete","MenuButton","va","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","AddIcon","EditIcon","generatePDF","element","document","getElementById","style","html2pdf","from","set","filename","moment","format","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","FaFilePdf","DeleteIcon","Link","to","leftIcon","IoIosArrowBack","TabPanels","TabPanel","pt","p","CustomView","fieldData","editUrl","CommonCheckTable","AdvanceSearch","ManageGrid","access","columnData","title","allData","tableData","tableCustomFields","customSearch","checkBox","Card","flexWrap","alingItem","PropertyPhoto","HSeparator","overflowY","propertyPhotos","item","Image","src","alt","DataNotFound","virtualToursOrVideos","controls","autoplay","loop","createOn","maxHeight","overflowX","parts","split","lastIndex","xlsx","boxSize","jpg","png","pdf","xls","csv","ml","window","open","cursor","textDecoration","colStart","background","maxWidth","href","target","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$1","_excluded2$1","_excluded3","_createDescendantCont","createDescendantContext","TabsDescendantsProvider","useTabsDescendantsContext","useTabsDescendants","useTabsDescendant","_createContext","createContext","errorMessage","TabsProvider","useTabsContext","makeTabId","makeTabPanelId","_excluded2","forwardRef","ref","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","className","_useTabs","defaultIndex","isManual","isLazy","_props$lazyBehavior","lazyBehavior","_props$orientation","_props$direction","htmlProps","_React$useState","React","focusedIndex","setFocusedIndex","_useControllableState","useControllableState","defaultValue","value","selectedIndex","setSelectedIndex","descendants","useId","useTabs","ctx","context","rootProps","omit","StylesProvider","chakra","div","cx","__css","root","__DEV__","displayName","useStyles","tabProps","isDisabled","isFocusable","_useTabsContext2","_useTabsDescendant","register","isSelected","clickableProps","useClickable","mergeRefs","callAllHandlers","tabIndex","onFocus","undefined","useTab","tabStyles","outline","tab","button","tablistProps","_useTabsContext","onKeyDown","event","_keyMap","nextTab","next","nextEnabled","focus","node","prevTab","prevEnabled","isHorizontal","isVertical","eventKey","normalizeEventKey","ArrowEnd","ArrowDown","ArrowUp","Home","first","firstEnabled","End","last","lastEnabled","preventDefault","useTabList","tablistStyles","tablist","panelProps","_useTabsContext3","hasBeenSelected","current","determineLazyBehavior","hidden","useTabPanel","tabpanel","panelsProps","getValidChildren","child","useTabPanels","tabpanels","TabIndicator","indicatorStyle","_React$useState2","left","top","rect","setRect","_React$useState3","hasMeasured","setHasMeasured","useSafeLayoutEffect","isUndefined","offsetLeft","offsetWidth","offsetTop","offsetHeight","requestAnimationFrame","cancelAnimationFrame","position","transitionProperty","transitionDuration","transitionTimingFunction","useTabIndicator","indicator"],"sourceRoot":""}