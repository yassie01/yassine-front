{"version":3,"file":"static/js/6419.6857f9e3.chunk.js","mappings":"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","sources":["../node_modules/react-email-editor/dist/index.js","../node_modules/react-email-editor/src/loadScript.ts","../node_modules/react-email-editor/src/EmailEditor.tsx","views/admin/emailTemplate/AddEdit.js"],"sourcesContent":["\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./react-email-editor.cjs.production.min.js')\n} else {\n  module.exports = require('./react-email-editor.cjs.development.js')\n}\n","const defaultScriptUrl = 'https://editor.unlayer.com/embed.js?2';\nconst callbacks: Function[] = [];\nlet loaded = false;\n\nconst isScriptInjected = (scriptUrl: string) => {\n  const scripts = document.querySelectorAll('script');\n  let injected = false;\n\n  scripts.forEach((script) => {\n    if (script.src.includes(scriptUrl)) {\n      injected = true;\n    }\n  });\n\n  return injected;\n};\n\nconst addCallback = (callback: Function) => {\n  callbacks.push(callback);\n};\n\nconst runCallbacks = () => {\n  if (loaded) {\n    let callback;\n\n    while ((callback = callbacks.shift())) {\n      callback();\n    }\n  }\n};\n\nexport const loadScript = (\n  callback: Function,\n  scriptUrl = defaultScriptUrl\n) => {\n  addCallback(callback);\n\n  if (!isScriptInjected(scriptUrl)) {\n    const embedScript = document.createElement('script');\n    embedScript.setAttribute('src', scriptUrl);\n    embedScript.onload = () => {\n      loaded = true;\n      runCallbacks();\n    };\n    document.head.appendChild(embedScript);\n  } else {\n    runCallbacks();\n  }\n};\n","import React, {\n  useEffect,\n  useState,\n  useImperativeHandle,\n  useMemo,\n} from 'react';\n\nimport pkg from '../package.json';\nimport { Editor, EditorRef, EmailEditorProps } from './types';\nimport { loadScript } from './loadScript';\n\nconst win = typeof window === 'undefined' ? { __unlayer_lastEditorId: 0 } : window\nwin.__unlayer_lastEditorId = win.__unlayer_lastEditorId || 0;\n\nexport const EmailEditor = React.forwardRef<EditorRef, EmailEditorProps>(\n  (props, ref) => {\n    const { onLoad, onReady, scriptUrl, minHeight = 500, style = {} } = props;\n\n    const [editor, setEditor] = useState<Editor | null>(null);\n\n    const [hasLoadedEmbedScript, setHasLoadedEmbedScript] = useState(false);\n\n    const editorId = useMemo(\n      () => props.editorId || `editor-${++win.__unlayer_lastEditorId}`,\n      [props.editorId]\n    );\n\n    const options: EmailEditorProps['options'] = {\n      ...(props.options || {}),\n      appearance: props.appearance ?? props.options?.appearance,\n      displayMode: props?.displayMode || props.options?.displayMode || 'email',\n      locale: props.locale ?? props.options?.locale,\n      projectId: props.projectId ?? props.options?.projectId,\n      tools: props.tools ?? props.options?.tools,\n\n      id: editorId,\n      source: {\n        name: pkg.name,\n        version: pkg.version,\n      },\n    };\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        editor,\n      }),\n      [editor]\n    );\n\n    useEffect(() => {\n      return () => {\n        editor?.destroy();\n      };\n    }, []);\n\n    useEffect(() => {\n      setHasLoadedEmbedScript(false);\n      loadScript(() => setHasLoadedEmbedScript(true), scriptUrl);\n    }, [scriptUrl]);\n\n    useEffect(() => {\n      if (!hasLoadedEmbedScript) return;\n      editor?.destroy();\n      setEditor(unlayer.createEditor(options));\n    }, [JSON.stringify(options), hasLoadedEmbedScript]);\n\n    const methodProps = Object.keys(props).filter((propName) =>\n      /^on/.test(propName)\n    );\n    useEffect(() => {\n      if (!editor) return;\n\n      onLoad?.(editor);\n\n      // All properties starting with on[Name] are registered as event listeners.\n      methodProps.forEach((methodProp) => {\n        if (\n          /^on/.test(methodProp) &&\n          methodProp !== 'onLoad' &&\n          methodProp !== 'onReady' &&\n          typeof props[methodProp] === 'function'\n        ) {\n          editor.addEventListener(methodProp, props[methodProp]);\n        }\n      });\n\n      if (onReady) {\n        editor.addEventListener('editor:ready', () => {\n          onReady(editor);\n        });\n      }\n    }, [editor, Object.keys(methodProps).join(',')]);\n\n    return (\n      <div\n        style={{\n          flex: 1,\n          display: 'flex',\n          minHeight: minHeight,\n        }}\n      >\n        <div id={editorId} style={{ ...style, flex: 1 }} />\n      </div>\n    );\n  }\n);\n","import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure, Input, FormLabel } from '@chakra-ui/react'\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport React from 'react'\nimport moment from 'moment'\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { BiLink } from 'react-icons/bi'\nimport { useEffect, useRef } from 'react'\nimport { useState } from 'react'\nimport { getApi } from 'services/api'\nimport Card from 'components/card/Card'\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { HasAccess } from '../../../redux/accessUtils';\nimport { HSeparator } from 'components/separator/Separator';\nimport CommonDeleteModel from 'components/commonDeleteModel';\nimport { deleteManyApi, } from 'services/api';\nimport { EmailEditor } from 'react-email-editor';\nimport { toast } from 'react-toastify';\nimport { postApi } from 'services/api';\nimport { putApi } from 'services/api';\n\nconst AddEdit = () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    const navigate = useNavigate()\n    const loction = useLocation()\n    const { type, id } = loction?.state || {}\n    const [permission] = HasAccess(['Email Template'])\n    const emailEditorRef = useRef(null);\n    const [preview, setPreview] = useState(false);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const togglePreview = () => {\n        if (preview) {\n            emailEditorRef.current?.editor?.hidePreview();\n            setPreview(false);\n        } else {\n            emailEditorRef.current?.editor?.showPreview('desktop');\n            setPreview(true);\n        }\n    };\n\n    const fetchData = async () => {\n        const result = await getApi(`api/email-temp/view/${id}`)\n        if (result && result.status === 200) {\n            setName(result?.data?.templateName)\n            setDescription(result?.data?.description)\n            emailEditorRef?.current?.editor?.loadDesign(result?.data?.design);\n        }\n    }\n\n    const saveDesign = () => {\n        if (name !== \"\") {\n            emailEditorRef.current?.editor?.exportHtml(async (allData) => {\n                const { html } = allData\n                const { design } = allData\n\n                const data = {\n                    html: html,\n                    design: design,\n                    templateName: name,\n                    description: description,\n                    createBy: user?._id\n                }\n                const result = await postApi('api/email-temp/add', data)\n                if (result && result.status === 200) {\n                    toast.success(result.data.message)\n                    setName('')\n                }\n                navigate('/email-template')\n            });\n        } else {\n            toast.error(\"Template Name is required\")\n        }\n\n    };\n\n    const editDesign = () => {\n        if (name !== \"\") {\n            emailEditorRef.current?.editor?.exportHtml(async (allData) => {\n                const { html } = allData\n                const { design } = allData\n\n                const data = {\n                    html: html,\n                    design: design,\n                    templateName: name,\n                    description: description,\n                    createBy: user?._id\n                }\n                const result = await putApi(`api/email-temp/edit/${id}`, data)\n                if (result && result.status === 200) {\n                    toast.success(result.data.message)\n                    navigate('/email-template')\n                }\n            });\n        } else {\n            toast.error(\"Template Name is required\")\n        }\n\n    };\n\n    const handleSave = () => {\n        type === \"add\" ? saveDesign() : editDesign()\n    }\n\n\n    useEffect(() => {\n        if (type === \"edit\") fetchData()\n    }, [type])\n\n    return (\n        <div>\n            <Card>\n                <Grid templateColumns=\"repeat(12, 1fr)\" mb={3} gap={1} justifyContent={\"space-between\"} alignItem={\"center\"}>\n                    <GridItem colSpan={{ base: 12, md: 6 }}>\n                        <Text fontSize=\"xl\" fontWeight=\"bold\" color={'blackAlpha.900'}>{type === \"add\" ? \"Create\" : \"Edit\"} Template </Text>\n                    </GridItem>\n\n                    <GridItem colSpan={{ base: 12, md: 6 }}>\n                        <Flex justifyContent={\"right\"}>\n                            <Button size=\"sm\" variant=\"brand\" onClick={togglePreview}>\n                                {preview ? \"Hide Preview\" : \"Show Preview\"}\n                            </Button>\n                            <Button size=\"sm\" variant=\"brand\" style={{ marginLeft: \"10px\" }} onClick={handleSave}>\n                                Save\n                            </Button>\n                            <Link to=\"/email-template\" style={{ marginLeft: \"10px\" }}>\n                                <Button size=\"sm\" leftIcon={<IoIosArrowBack />} variant=\"brand\">\n                                    Back\n                                </Button>\n                            </Link>\n                        </Flex>\n                    </GridItem>\n                </Grid>\n                <HSeparator />\n                <div>\n                    <Grid templateColumns=\"repeat(12, 1fr)\" gap={3} mt={2}>\n                        <GridItem colSpan={{ base: 12, md: 6 }} >\n                            <Input\n                                fontSize='sm'\n                                name=\"templateName\"\n                                placeholder='Template Name'\n                                fontWeight='500'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </GridItem>\n                        <GridItem colSpan={{ base: 12, md: 6 }} >\n                            <Input\n                                fontSize='sm'\n                                name=\"description\"\n                                placeholder='Description'\n                                fontWeight='500'\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                        </GridItem>\n                        <GridItem colSpan={{ base: 12, md: 12 }} mt={2}>\n                            <EmailEditor ref={emailEditorRef} />\n                        </GridItem>\n                    </Grid>\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default AddEdit\n"],"names":["module","exports","r","i","l","e","shift","d","window","__unlayer_lastEditorId","a","n","forwardRef","u","s","c","f","p","y","v","E","m","_","onLoad","h","onReady","j","scriptUrl","b","minHeight","I","O","style","g","w","t","useState","x","M","L","S","H","R","useMemo","editorId","k","o","options","appearance","displayMode","locale","projectId","tools","id","source","name","version","useImperativeHandle","editor","useEffect","destroy","push","document","querySelectorAll","forEach","src","includes","createElement","setAttribute","onload","head","appendChild","unlayer","createEditor","JSON","stringify","q","Object","keys","filter","test","addEventListener","join","flex","display","AddEdit","user","parse","localStorage","getItem","navigate","useNavigate","loction","useLocation","type","state","permission","HasAccess","emailEditorRef","useRef","preview","setPreview","setName","description","setDescription","async","result","getApi","concat","_result$data","_result$data2","_emailEditorRef$curre5","_emailEditorRef$curre6","_result$data3","status","data","templateName","current","loadDesign","design","fetchData","_jsx","children","_jsxs","Card","Grid","templateColumns","mb","gap","justifyContent","alignItem","GridItem","colSpan","base","md","Text","fontSize","fontWeight","color","Flex","Button","size","variant","onClick","togglePreview","_emailEditorRef$curre","_emailEditorRef$curre2","_emailEditorRef$curre3","_emailEditorRef$curre4","hidePreview","showPreview","marginLeft","handleSave","saveDesign","_emailEditorRef$curre7","_emailEditorRef$curre8","exportHtml","html","allData","createBy","_id","postApi","toast","success","message","error","editDesign","_emailEditorRef$curre9","_emailEditorRef$curre0","putApi","Link","to","leftIcon","IoIosArrowBack","HSeparator","mt","Input","placeholder","value","onChange","target","EmailEditor","ref"],"sourceRoot":""}