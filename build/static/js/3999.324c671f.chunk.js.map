{"version":3,"file":"static/js/3999.324c671f.chunk.js","mappings":"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","sources":["views/admin/opportunities/components/OpprtunityAdvanceSearch.js","views/admin/opportunities/components/ImportModel.js","views/admin/opportunities/index.js","components/commonFileUpload/index.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Grid, GridItem, Input, FormLabel, Select, Text, Button, } from '@chakra-ui/react';\nimport Spinner from 'components/spinner/Spinner';\nimport { setSearchValue, getSearchData, setGetTagValues } from '../../../../redux/slices/advanceSearchSlice';\nimport { useDispatch } from 'react-redux';\n\n\n\nconst OpprtunityAdvanceSearch = (props) => {\n    const { state, allData, advanceSearch, setAdvanceSearch, isLoding, setSearchedData, setDisplaySearchData, setSearchClear, setSearchbox } = props;\n\n    const dispatch = useDispatch();\n    const initialValues = {\n        opportunityName: '',\n        accountName2: '',\n        opportunityAmount: '',\n        expectedCloseDate: '',\n        salesStage: '',\n    }\n    const validationSchema = yup.object({\n        opportunityName: yup.string(),\n        accountName2: yup.string(),\n        opportunityAmount: yup.string(),\n        expectedCloseDate: yup.string(),\n        salesStage: yup.string()\n    });\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: (values, { resetForm }) => {\n            dispatch(setSearchValue(values))\n            dispatch(getSearchData({ values: values, allData: allData, type: 'Opprtunity' }))\n            // const searchResult = allData?.filter(\n            //     (item) =>\n            //         (!values?.senderName || (item?.senderName && item?.senderName.toLowerCase().includes(values?.senderName?.toLowerCase()))) &&\n            //         (!values?.realetedTo || (values.realetedTo === \"contact\" ? item.createBy : item.createByLead)) &&\n            //         (!values?.createByName || (item?.createByName && item?.createByName.toLowerCase().includes(values?.createByName?.toLowerCase())))\n            // )\n            // let getValue = [values.senderName, values?.realetedTo, values?.createByName].filter(value => value);\n            const getValue = [\n                {\n                    name: [\"opportunityName\"],\n                    value: values.opportunityName\n                },\n                {\n                    name: [\"accountName2\"],\n                    value: values.accountName2\n                },\n                {\n                    name: [\"opportunityAmount\"],\n                    value: values.opportunityAmount\n                },\n                {\n                    name: [\"expectedCloseDate\"],\n                    value: values.expectedCloseDate\n                },\n                {\n                    name: [\"salesStage\"],\n                    value: values.salesStage\n                },\n            ]\n            dispatch(setGetTagValues(getValue.filter(item => item.value)))\n            setDisplaySearchData(true)\n            setAdvanceSearch(false)\n            resetForm();\n            setSearchbox('');\n        }\n    })\n\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm, dirty } = formik;\n\n    return (\n        <>\n            <Modal onClose={() => { setAdvanceSearch(false); resetForm() }} isOpen={advanceSearch} isCentered>\n                <ModalOverlay />\n                <ModalContent>\n                    <ModalHeader>Advance Search</ModalHeader>\n                    <ModalCloseButton onClick={() => { setAdvanceSearch(false); resetForm() }} />\n                    <ModalBody>\n                        <Grid templateColumns=\"repeat(12, 1fr)\" mb={3} gap={2}>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\n                                    Opportunity Name\n                                </FormLabel>\n                                <Input\n                                    fontSize='sm'\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    value={values?.opportunityName}\n                                    name=\"opportunityName\"\n                                    placeholder='Enter Opportunity Name'\n                                    fontWeight='500'\n                                />\n                                <Text mb='10px' color={'red'}> {errors.opportunityName && touched.opportunityName && errors.opportunityName}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\n                                    Account Name\n                                </FormLabel>\n                                <Input\n                                    fontSize='sm'\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    value={values?.accountName2}\n                                    name=\"accountName2\"\n                                    placeholder='Enter Account Name'\n                                    fontWeight='500'\n                                />\n                                <Text mb='10px' color={'red'}> {errors.accountName2 && touched.accountName2 && errors.accountName2}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\n                                    Opportunity Amount\n                                </FormLabel>\n                                <Input\n                                    fontSize='sm'\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    value={values?.opportunityAmount}\n                                    name=\"opportunityAmount\"\n                                    placeholder='Enter Opportunity Amount'\n                                    fontWeight='500'\n                                />\n                                <Text mb='10px' color={'red'}> {errors.opportunityAmount && touched.opportunityAmount && errors.opportunityAmount}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\n                                    Expected Close Date\n                                </FormLabel>\n                                <Input\n                                    fontSize='sm'\n                                    onChange={handleChange} onBlur={handleBlur}\n                                    value={values?.expectedCloseDate}\n                                    name=\"expectedCloseDate\"\n                                    type=\"date\"\n                                    fontWeight='500'\n                                />\n                                <Text mb='10px' color={'red'}> {errors.expectedCloseDate && touched.expectedCloseDate && errors.expectedCloseDate}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\n                                    Sales Stage\n                                </FormLabel>\n                                <Select\n                                    value={values.salesStage}\n                                    name=\"salesStage\"\n                                    onChange={handleChange}\n                                    fontWeight='500'\n                                    placeholder={'Sales Stage'}\n                                >\n                                    <option value={\"Prospecting\"}>Prospecting</option>\n                                    <option value={\"Qualification\"}>Qualification</option>\n                                    <option value={\"Needs Analysis\"}>Needs Analysis</option>\n                                    <option value={\"Value Propositon\"}>Value Propositon</option>\n                                    <option value={\"Identifying Decision Makers\"}>Identifying Decision Makers</option>\n                                    <option value={\"Perception Analysis\"}>Perception Analysis</option>\n                                    <option value={\"Proposal/Price Quote\"}>Proposal/Price Quote</option>\n                                    <option value={\"Negotiation/Review\"}>Negotiation/Review</option>\n                                    <option value={\"Closed/Won\"}>Closed/Won</option>\n                                    <option value={\"Closed/Lost\"}>Closed/Lost</option>\n                                </Select>\n                                <Text mb='10px' color={'red'}> {errors.salesStage && touched.salesStage && errors.salesStage}</Text>\n                            </GridItem>\n\n                        </Grid>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button size=\"sm\" variant=\"brand\" mr={2} onClick={handleSubmit} disabled={isLoding || !dirty ? true : false} >{isLoding ? <Spinner /> : 'Search'}</Button>\n                        <Button size=\"sm\" variant=\"outline\" colorScheme=\"red\" onClick={() => resetForm()}>Clear</Button>\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n        </>\n    )\n}\n\nexport default OpprtunityAdvanceSearch\n","import { Button, Grid, GridItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\nimport Spinner from 'components/spinner/Spinner'\nimport { useFormik } from 'formik'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport CommonFileUpload from 'components/commonFileUpload'\n\nconst ImportModal = (props) => {\n    const { onClose, isOpen, text, customFields } = props\n    const [isLoding, setIsLoding] = useState(false)\n    const navigate = useNavigate();\n\n    const initialValues = {\n        opprotunities: ''\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        onSubmit: (values, { resetForm }) => {\n            AddData()\n            resetForm();\n        },\n    });\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm } = formik\n\n    const AddData = async () => {\n        try {\n            setIsLoding(true)\n            resetForm()\n\n            if (values.opprotunities) {\n                onClose();\n                navigate('/opprotunitiesImport', { state: { fileData: values.opprotunities, customFields: customFields } });\n            }\n\n        } catch (e) {\n            console.log(e);\n        }\n        finally {\n            setIsLoding(false)\n        }\n    };\n\n    return (\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Import Opprotunities</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\n                        <GridItem colSpan={{ base: 12 }}>\n                            <CommonFileUpload count={values.opprotunities.length} onFileSelect={(file) => setFieldValue('opprotunities', file)} text={text} />\n                            <Text mb='10px' color={'red'}> {errors.opprotunities && touched.opprotunities && <>Please Select {text}</>}</Text>\n                        </GridItem>\n                    </Grid>\n                </ModalBody>\n                <ModalFooter>\n                    <Button size=\"sm\" variant='brand' onClick={handleSubmit} disabled={isLoding ? true : false} >{isLoding ? <Spinner /> : 'Save'}</Button>\n                    <Button sx={{\n                        marginLeft: 2,\n                        textTransform: \"capitalize\",\n                    }} variant=\"outline\"\n                        colorScheme=\"red\" size=\"sm\" onClick={() => {\n                            onClose()\n                            formik.resetForm()\n                        }}>Close</Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nexport default ImportModal","import { useEffect, useState } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { DeleteIcon, EditIcon, ViewIcon } from '@chakra-ui/icons';\nimport { Button, Menu, MenuButton, MenuItem, MenuList, Text, useDisclosure } from '@chakra-ui/react';\nimport { getApi, deleteManyApi } from 'services/api';\nimport { HasAccess } from '../../../redux/accessUtils';\nimport CommonCheckTable from '../../../components/reactTable/checktable';\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport { CiMenuKebab } from 'react-icons/ci';\nimport moment from 'moment';\nimport { MdLeaderboard } from 'react-icons/md';\nimport { IoIosContact } from 'react-icons/io';\nimport AddEdit from './AddEdit';\nimport { useDispatch } from 'react-redux';\nimport { fetchEmailsData } from '../../../redux/slices/emailsSlice';\nimport { toast } from 'react-toastify';\nimport OpprtunityAdvanceSearch from './components/OpprtunityAdvanceSearch';\nimport { fetchOpportunityData } from '../../../redux/slices/opportunitySlice';\nimport CommonDeleteModel from '../../../components/commonDeleteModel'\nimport ImportModal from './components/ImportModel';\n\nconst Index = (props) => {\n    const title = \"Opprtunities\";\n    const [action, setAction] = useState(false);\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const [selectedValues, setSelectedValues] = useState([]);\n    const [advanceSearch, setAdvanceSearch] = useState(false);\n    const [getTagValuesOutSide, setGetTagValuesOutside] = useState([]);\n    const [searchboxOutside, setSearchboxOutside] = useState('');\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [isLoding, setIsLoding] = useState(false);\n    const [data, setData] = useState([]);\n    const [displaySearchData, setDisplaySearchData] = useState(false);\n    const [searchedData, setSearchedData] = useState([]);\n    const [selectedId, setSelectedId] = useState();\n    const [deleteModel, setDelete] = useState(false);\n    const [edit, setEdit] = useState(false);\n    const [type, setType] = useState(\"\")\n    const [isImport, setIsImport] = useState(false);\n\n    const [permission, accountAccess] = HasAccess([\"Opportunities\", \"Account\"]);\n\n    const actionHeader = {\n        Header: \"Action\",\n        accessor: \"action\",\n        isSortable: false,\n        center: true,\n        cell: ({ row, i }) => (\n            <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\n                <Menu isLazy>\n                    <MenuButton>\n                        <CiMenuKebab />\n                    </MenuButton>\n                    <MenuList\n                        minW={\"fit-content\"}\n                        transform={\"translate(1520px, 173px);\"}\n                    >\n                        {permission?.update && (\n                            <MenuItem\n                                py={2.5}\n                                icon={<EditIcon fontSize={15} mb={1} />}\n                                onClick={() => {\n                                    setType(\"edit\");\n                                    onOpen();\n                                    setSelectedId(row?.values?._id);\n                                }}\n                            >\n                                Edit\n                            </MenuItem>\n                        )}\n                        {permission?.view && (\n                            <MenuItem\n                                py={2.5}\n                                color={\"green\"}\n                                icon={<ViewIcon mb={1} fontSize={15} />}\n                                onClick={() => {\n                                    navigate(`/opportunitiesView/${row?.values?._id}`);\n                                }}\n                            >\n                                View\n                            </MenuItem>\n                        )}\n                        {permission?.delete && (\n                            <MenuItem\n                                py={2.5}\n                                color={\"red\"}\n                                icon={<DeleteIcon fontSize={15} mb={1} />}\n                                onClick={() => {\n                                    setDelete(true);\n                                    setSelectedValues([row?.values?._id]);\n                                }}\n                            >\n                                Delete\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Menu>\n            </Text>\n        ),\n    };\n    const tableColumns = [\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n        {\n            Header: 'Opportunity Name', accessor: 'opportunityName', cell: (cell) => (\n                <div className=\"selectOpt\">\n                    <Text\n                        onClick={() => handleViewOpen(cell?.row?.original._id)}\n                        me=\"10px\"\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\n                        color='brand.600'\n                        fontSize=\"sm\"\n                        fontWeight=\"700\"\n                    >\n                        {cell?.value}\n                    </Text>\n                </div>\n            )\n        },\n        {\n            Header: 'Account Name', accessor: 'accountName', cell: (cell) => (\n                (user.role === 'superAdmin' || accountAccess?.view) ?\n                    <div className=\"selectOpt\">\n                        <Text\n                            onClick={() => navigate(cell?.row?.original.accountName !== null && `/accountView/${cell?.row?.original.accountName}`)}\n                            me=\"10px\"\n                            sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\n                            color='brand.600'\n                            fontSize=\"sm\"\n                            fontWeight=\"700\"\n                        >\n                            {cell?.row?.original?.accountName2 ? cell?.row?.original?.accountName2 : \"-\"}\n                        </Text>\n                    </div>\n                    :\n                    <Text\n                    >\n                        {cell?.row?.original?.accountName2 ? cell?.row?.original?.accountName2 : \"-\"}\n                    </Text>\n\n            )\n        },\n        {\n            Header: 'Opportunity Amount', accessor: 'opportunityAmount',\n        },\n        {\n            Header: 'Expected Close Date', accessor: 'expectedCloseDate', cell: (cell) => (\n                <div>{moment(cell?.value).format(\"YYYY-MM-DD\")}</div>\n            )\n        },\n        {\n            Header: 'Sales Stage', accessor: 'salesStage',\n        },\n        ...(permission?.update || permission?.view || permission?.delete ? [actionHeader] : [])\n\n    ];\n    const handleViewOpen = (id) => {\n        navigate(`/opportunitiesView/${id}`)\n    }\n    const customFields = [\n        {\n            \"name\": \"opportunityName\",\n            \"label\": \"Opportunity Name\",\n            \"type\": \"text\",\n            \"fixed\": false,\n            \"isDefault\": false,\n            \"delete\": false,\n            \"belongsTo\": null,\n            \"backendType\": \"Mixed\",\n            \"isTableField\": false,\n            \"isView\": false,\n            \"options\": [\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6690be4a4e0f5916f4313f13\"\n                },\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6690be4a4e0f5916f4313f14\"\n                }\n            ],\n            \"validation\": [\n                {\n                    \"require\": true,\n                    \"message\": \"Opportunity Name is required \",\n                    \"_id\": \"6690be4a4e0f5916f4313f15\"\n                },\n                {\n                    \"min\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6690be4a4e0f5916f4313f16\"\n                },\n                {\n                    \"max\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6690be4a4e0f5916f4313f17\"\n                },\n                {\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"match\": false,\n                    \"_id\": \"6690be4a4e0f5916f4313f18\"\n                },\n                {\n                    \"message\": \"\",\n                    \"formikType\": \"\",\n                    \"_id\": \"6690be4a4e0f5916f4313f19\"\n                }\n            ],\n            \"_id\": \"6690be4a4e0f5916f4313f12\"\n        },\n        {\n            \"name\": \"accountName\",\n            \"label\": \"Account Name\",\n            \"type\": \"text\",\n            \"fixed\": false,\n            \"isDefault\": false,\n            \"delete\": false,\n            \"belongsTo\": null,\n            \"backendType\": \"Mixed\",\n            \"isTableField\": false,\n            \"isView\": false,\n            \"options\": [\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6690be854e0f5916f4314260\"\n                },\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6690be854e0f5916f4314261\"\n                }\n            ],\n            \"validation\": [\n                {\n                    \"require\": true,\n                    \"message\": \"Account Name is required \",\n                    \"_id\": \"6690be854e0f5916f4314262\"\n                },\n                {\n                    \"min\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6690be854e0f5916f4314263\"\n                },\n                {\n                    \"max\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6690be854e0f5916f4314264\"\n                },\n                {\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"match\": false,\n                    \"_id\": \"6690be854e0f5916f4314265\"\n                },\n                {\n                    \"message\": \"\",\n                    \"formikType\": \"\",\n                    \"_id\": \"6690be854e0f5916f4314266\"\n                }\n            ],\n            \"_id\": \"6690be854e0f5916f431425f\"\n        },\n        {\n            \"name\": \"opportunityAmount\",\n            \"label\": \"Opportunity Amount\",\n            \"type\": \"number\",\n            \"fixed\": false,\n            \"isDefault\": false,\n            \"delete\": false,\n            \"belongsTo\": null,\n            \"backendType\": \"Mixed\",\n            \"isTableField\": false,\n            \"isView\": false,\n            \"options\": [\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6690bea44e0f5916f43145c5\"\n                },\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6690bea44e0f5916f43145c6\"\n                }\n            ],\n            \"validation\": [\n                {\n                    \"require\": true,\n                    \"message\": \"Opportunity Amount is required \",\n                    \"_id\": \"6690bea44e0f5916f43145c7\"\n                },\n                {\n                    \"min\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6690bea44e0f5916f43145c8\"\n                },\n                {\n                    \"max\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6690bea44e0f5916f43145c9\"\n                },\n                {\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"match\": false,\n                    \"_id\": \"6690bea44e0f5916f43145ca\"\n                },\n                {\n                    \"message\": \"\",\n                    \"formikType\": \"\",\n                    \"_id\": \"6690bea44e0f5916f43145cb\"\n                }\n            ],\n            \"_id\": \"6690bea44e0f5916f43145c4\"\n        },\n        {\n            \"name\": \"expectedCloseDate\",\n            \"label\": \"Expected Close Date\",\n            \"type\": \"date\",\n            \"fixed\": false,\n            \"isDefault\": false,\n            \"delete\": false,\n            \"belongsTo\": null,\n            \"backendType\": \"Mixed\",\n            \"isTableField\": false,\n            \"isView\": false,\n            \"options\": [\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6690bec04e0f5916f4314942\"\n                },\n                {\n                    \"name\": \"\",\n                    \"value\": \"\",\n                    \"_id\": \"6690bec04e0f5916f4314943\"\n                }\n            ],\n            \"validation\": [\n                {\n                    \"require\": true,\n                    \"message\": \"Expected Close Date is required \",\n                    \"_id\": \"6690bec04e0f5916f4314944\"\n                },\n                {\n                    \"min\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6690bec04e0f5916f4314945\"\n                },\n                {\n                    \"max\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6690bec04e0f5916f4314946\"\n                },\n                {\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"match\": false,\n                    \"_id\": \"6690bec04e0f5916f4314947\"\n                },\n                {\n                    \"message\": \"\",\n                    \"formikType\": \"date\",\n                    \"_id\": \"6690bec04e0f5916f4314948\"\n                }\n            ],\n            \"_id\": \"6690bec04e0f5916f4314941\"\n        },\n        {\n            \"name\": \"salesStage\",\n            \"label\": \"Sales Stage\",\n            \"type\": \"select\",\n            \"fixed\": false,\n            \"isDefault\": false,\n            \"delete\": false,\n            \"belongsTo\": null,\n            \"backendType\": \"Mixed\",\n            \"isTableField\": false,\n            \"isView\": false,\n            \"options\": [\n                {\n                    \"name\": \"Prospecting\",\n                    \"value\": \"Prospecting\",\n                    \"_id\": \"6690bf4a4e0f5916f4314cd7\"\n                },\n                {\n                    \"name\": \"Qualification\",\n                    \"value\": \"Qualification\",\n                    \"_id\": \"6690bf4a4e0f5916f4314cd8\"\n                },\n                {\n                    \"name\": \"Needs Analysis\",\n                    \"value\": \"Needs Analysis\",\n                    \"_id\": \"6690bf4a4e0f5916f4314cd9\"\n                },\n                {\n                    \"name\": \"Value Propositon\",\n                    \"value\": \"Value Propositon\",\n                    \"_id\": \"6690bf4a4e0f5916f4314cda\"\n                },\n                {\n                    \"name\": \"Identifying Decision Makers\",\n                    \"value\": \"Identifying Decision Makers\",\n                    \"_id\": \"6690bf4a4e0f5916f4314cdb\"\n                },\n                {\n                    \"name\": \"Perception Analysis\",\n                    \"value\": \"Perception Analysis\",\n                    \"_id\": \"6690bf4a4e0f5916f4314cdc\"\n                },\n                {\n                    \"name\": \"Proposal/Price Quote\",\n                    \"value\": \"Proposal/Price Quote\",\n                    \"_id\": \"6690bf4a4e0f5916f4314cdd\"\n                },\n                {\n                    \"name\": \"Negotiation/Review\",\n                    \"value\": \"Negotiation/Review\",\n                    \"_id\": \"6690bf4a4e0f5916f4314cde\"\n                },\n                {\n                    \"name\": \"Closed/Won\",\n                    \"value\": \"Closed/Won\",\n                    \"_id\": \"6690bf4a4e0f5916f4314cdf\"\n                },\n                {\n                    \"name\": \"Closed/Lost\",\n                    \"value\": \"Closed/Lost\",\n                    \"_id\": \"6690bf4a4e0f5916f4314ce0\"\n                }\n            ],\n            \"validation\": [\n                {\n                    \"require\": true,\n                    \"message\": \"Sales Stage is required\",\n                    \"_id\": \"6690bf4a4e0f5916f4314ce1\"\n                },\n                {\n                    \"min\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6690bf4a4e0f5916f4314ce2\"\n                },\n                {\n                    \"max\": false,\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"_id\": \"6690bf4a4e0f5916f4314ce3\"\n                },\n                {\n                    \"value\": \"\",\n                    \"message\": \"\",\n                    \"match\": false,\n                    \"_id\": \"6690bf4a4e0f5916f4314ce4\"\n                },\n                {\n                    \"message\": \"\",\n                    \"formikType\": \"\",\n                    \"_id\": \"6690bf4a4e0f5916f4314ce5\"\n                }\n            ],\n            \"_id\": \"6690bf4a4e0f5916f4314cd6\"\n        }\n    ]\n\n    const handleOpenAdd = () => {\n        onOpen();\n        setType(\"add\")\n    }\n\n    const handleDelete = async (ids) => {\n        try {\n            setIsLoding(true);\n            let response = await deleteManyApi(\"api/opportunity/deleteMany\", ids);\n            if (response.status === 200) {\n                toast.success(`Opprtunities Delete successfully`)\n                setSelectedValues([]);\n                setDelete(false);\n                setAction((pre) => !pre);\n            }\n        } catch (error) {\n            console.log(error);\n            toast.error(`server error`)\n\n        } finally {\n            setIsLoding(false);\n        }\n    };\n\n    const fetchData = async () => {\n        setIsLoding(true)\n        const result = await dispatch(fetchOpportunityData())\n\n        if (result.payload.status === 200) {\n            setData(result?.payload?.data);\n        } else {\n            toast.error(\"Failed to fetch data\", \"error\");\n        }\n        setIsLoding(false)\n    }\n\n    // const [columns, setColumns] = useState([...tableColumns]);\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\n\n\n    useEffect(() => {\n        fetchData();\n    }, [action])\n\n    return (\n        <div>\n            <CommonCheckTable\n                title={title}\n                isLoding={isLoding}\n                columnData={tableColumns ?? []}\n                // dataColumn={dataColumn ?? []}\n                allData={data ?? []}\n                tableData={data}\n                searchDisplay={displaySearchData}\n                setSearchDisplay={setDisplaySearchData}\n                searchedDataOut={searchedData}\n                setSearchedDataOut={setSearchedData}\n                tableCustomFields={[]}\n                access={permission}\n                // action={action}\n                // setAction={setAction}\n                // selectedColumns={selectedColumns}\n                // setSelectedColumns={setSelectedColumns}\n                // isOpen={isOpen}\n                // onClose={onclose}\n                setIsImport={setIsImport}\n                onOpen={handleOpenAdd}\n                selectedValues={selectedValues}\n                setSelectedValues={setSelectedValues}\n                setDelete={setDelete}\n                deleteMany={false}\n                AdvanceSearch={\n                    <Button variant=\"outline\" colorScheme='brand' leftIcon={<SearchIcon />} mt={{ sm: \"5px\", md: \"0\" }} size=\"sm\" onClick={() => setAdvanceSearch(true)}>Advance Search</Button>\n                }\n                getTagValuesOutSide={getTagValuesOutSide}\n                searchboxOutside={searchboxOutside}\n                setGetTagValuesOutside={setGetTagValuesOutside}\n                setSearchboxOutside={setSearchboxOutside}\n                handleSearchType=\"OpprtunitySearch\"\n            />\n\n            <OpprtunityAdvanceSearch\n                advanceSearch={advanceSearch}\n                setAdvanceSearch={setAdvanceSearch}\n                setSearchedData={setSearchedData}\n                setDisplaySearchData={setDisplaySearchData}\n                allData={data ?? []}\n                setAction={setAction}\n                setGetTagValues={setGetTagValuesOutside}\n                setSearchbox={setSearchboxOutside}\n            />\n\n            <AddEdit isOpen={isOpen} size={\"lg\"} onClose={onClose} setAction={setAction} type={type} selectedId={selectedId} />\n            <CommonDeleteModel\n                isOpen={deleteModel}\n                onClose={() => setDelete(false)}\n                type=\"Opportunities\"\n                handleDeleteData={handleDelete}\n                ids={selectedValues}\n            />\n\n            <ImportModal\n                text=\"Opprotunities file\"\n                isOpen={isImport}\n                onClose={setIsImport}\n                customFields={customFields}\n            />\n        </div>\n    )\n}\n\nexport default Index","// Chakra imports\nimport {\n    Box, Flex,\n    Grid,\n    GridItem,\n    Icon,\n    Text,\n    useColorModeValue\n} from \"@chakra-ui/react\";\n// Custom components\n// Assets\nimport Dropzone from \"components/Dropzone\";\nimport { MdUpload } from \"react-icons/md\";\n\nexport default function CommonFileUpload(props) {\n    // const { used, total, count, ...rest } = props;\n    const { count, text, onFileSelect } = props;\n    // Chakra Color Mode\n    const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\n    const brandColor = useColorModeValue(\"brand.500\", \"white\");\n    const textColorSecondary = \"gray.400\";\n    return (\n        <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\n            <GridItem colSpan={{ base: 12 }} >\n                <Dropzone\n                    w={{ base: \"100%\" }}\n                    me='36px'\n                    minH={200}\n                    img={text === 'Property Photos' ? 'img' : ''}\n                    csv={'csv'}\n                    height={'100%'}\n                    onFileSelect={onFileSelect}\n                    isMultipleAllow={false}\n                    content={\n                        <Box>\n                            <Icon as={MdUpload} w='80px' h='80px' color={brandColor} />\n                            <Flex justify='center' mx='auto' mb='12px'>\n                                <Text fontSize='xl' fontWeight='700' color={brandColor}>\n                                    Upload File\n                                </Text>\n                            </Flex>\n                            {count > 0 && <Text fontSize='sm' fontWeight='500' color='secondaryGray.500'>\n                                Selected Files : {count}\n                            </Text>}\n                        </Box>\n                    }\n                />\n            </GridItem>\n            <GridItem colSpan={{ base: 12 }} >\n                <Flex direction='column' >\n                    <Text\n                        color={textColorPrimary}\n                        fontWeight='bold'\n                        textAlign='start'\n                        fontSize='2xl'\n                        mt={{ base: \"20px\" }}>\n                        Upload {text}\n                    </Text>\n                    <Text\n                        color={textColorSecondary}\n                        fontSize='md'\n                        my={{ base: \"auto\" }}\n                        mx='auto'\n                        textAlign='start'>\n                        Accepted File Type (csv, xlsx file - 15MB max) only 1 file\n                    </Text>\n                </Flex>\n            </GridItem>\n        </Grid>\n    );\n}"],"names":["props","state","allData","advanceSearch","setAdvanceSearch","isLoding","setSearchedData","setDisplaySearchData","setSearchClear","setSearchbox","dispatch","useDispatch","validationSchema","yup","opportunityName","accountName2","opportunityAmount","expectedCloseDate","salesStage","formik","useFormik","initialValues","onSubmit","values","_ref","resetForm","setSearchValue","getSearchData","type","getValue","name","value","setGetTagValues","filter","item","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","dirty","_jsx","_Fragment","children","_jsxs","Modal","onClose","isOpen","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","onClick","ModalBody","Grid","templateColumns","mb","gap","GridItem","colSpan","base","md","FormLabel","display","ms","fontSize","fontWeight","color","mt","Input","onChange","onBlur","placeholder","Text","Select","ModalFooter","Button","size","variant","mr","disabled","Spinner","colorScheme","text","customFields","setIsLoding","useState","navigate","useNavigate","opprotunities","AddData","async","fileData","e","console","log","CommonFileUpload","count","length","onFileSelect","file","sx","marginLeft","textTransform","action","setAction","onOpen","useDisclosure","selectedValues","setSelectedValues","getTagValuesOutSide","setGetTagValuesOutside","searchboxOutside","setSearchboxOutside","user","JSON","parse","localStorage","getItem","data","setData","displaySearchData","searchedData","selectedId","setSelectedId","deleteModel","setDelete","edit","setEdit","setType","isImport","setIsImport","permission","accountAccess","HasAccess","actionHeader","Header","accessor","isSortable","center","cell","row","i","textAlign","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","minW","transform","update","MenuItem","py","icon","EditIcon","_row$values","_id","view","ViewIcon","_row$values2","concat","delete","DeleteIcon","_row$values3","tableColumns","width","className","_cell$row","handleViewOpen","original","me","textDecoration","cursor","_cell$row4","_cell$row4$original","_cell$row5","_cell$row5$original","_cell$row6","_cell$row6$original","_cell$row7","_cell$row7$original","role","_cell$row2","_cell$row3","accountName","moment","format","id","useEffect","result","fetchOpportunityData","_result$payload","payload","status","toast","error","fetchData","CommonCheckTable","title","columnData","tableData","searchDisplay","setSearchDisplay","searchedDataOut","setSearchedDataOut","tableCustomFields","access","handleOpenAdd","deleteMany","AdvanceSearch","leftIcon","SearchIcon","sm","handleSearchType","OpprtunityAdvanceSearch","AddEdit","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","success","pre","ImportModal","textColorPrimary","useColorModeValue","brandColor","Dropzone","w","minH","img","csv","height","isMultipleAllow","content","Box","Icon","as","MdUpload","h","Flex","justify","mx","direction","my"],"sourceRoot":""}