{"version":3,"file":"static/js/3204.8b22b0fc.chunk.js","mappings":"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","sources":["views/admin/emailTemplate/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { DeleteIcon, EditIcon, ViewIcon } from '@chakra-ui/icons';\nimport { Button, Menu, MenuButton, MenuItem, MenuList, Select, Text, useDisclosure } from '@chakra-ui/react';\nimport { getApi } from 'services/api';\nimport { HasAccess } from '../../../redux/accessUtils';\nimport CommonCheckTable from '../../../components/reactTable/checktable';\nimport { CiMenuKebab } from 'react-icons/ci';\nimport { putApi } from 'services/api';\nimport { useLocation } from 'react-router-dom';\nimport { deleteManyApi } from 'services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport CommonDeleteModel from 'components/commonDeleteModel';\nimport { fetchEmailTempData } from '../../../redux/slices/emailTempSlice';\n\nconst Index = () => {\n    const [action, setAction] = useState(false);\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const [edit, setEdit] = useState(false);\n    const [eventView, setEventView] = useState(false)\n    const [id, setId] = useState('')\n    const [selectedId, setSelectedId] = useState();\n    const [selectedValues, setSelectedValues] = useState([]);\n    // const [advanceSearch, setAdvanceSearch] = useState(false);\n    const [getTagValuesOutSide, setGetTagValuesOutside] = useState([]);\n    const [searchboxOutside, setSearchboxOutside] = useState('');\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const [deleteMany, setDeleteMany] = useState(false);\n    const [isImportLead, setIsImportLead] = useState(false);\n    const [isLoding, setIsLoding] = useState(false);\n    const [data, setData] = useState([]);\n    const [displaySearchData, setDisplaySearchData] = useState(false);\n    const [searchedData, setSearchedData] = useState([]);\n    const [userAction, setUserAction] = useState(\"\");\n    const [permission] = HasAccess([\"Email Template\"]);\n    const location = useLocation();\n    // const state = location.state;\n    const navigate = useNavigate()\n    const dispatch = useDispatch();\n\n    const handleEditOpen = (row) => {\n        onOpen();\n        setUserAction(\"edit\")\n        navigate(`/email-template/email-template-addEdit`, { state: { type: 'edit', id: row?.values?._id } })\n        setSelectedId(row?.values?._id);\n    }\n\n    const actionHeader = {\n        Header: \"Action\", isSortable: false, center: true,\n        cell: ({ row }) => (\n            <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\n                <Menu isLazy >\n                    <MenuButton ><CiMenuKebab /></MenuButton>\n                    <MenuList minW={'fit-content'} transform={\"translate(1520px, 173px);\"}>\n                        {permission?.update &&\n                            <MenuItem py={2.5} icon={<EditIcon fontSize={15} mb={1} />} onClick={() => handleEditOpen(row)}>Edit</MenuItem>}\n                        {permission?.view &&\n                            <MenuItem py={2.5} color={\"green\"} icon={<ViewIcon fontSize={15} mb={1} />} onClick={() => navigate(`/email-template/${row?.values?._id}`)}>View</MenuItem>}\n                        {permission?.delete &&\n                            <MenuItem py={2.5} color={'red'} icon={<DeleteIcon fontSize={15} mb={1} />} onClick={() => { setDeleteMany(true); setSelectedValues([row?.values?._id]); }}>Delete</MenuItem>}\n                    </MenuList>\n                </Menu>\n            </Text>\n        )\n    }\n    const tableColumns = [\n        {\n            Header: \"#\",\n            accessor: \"_id\",\n            isSortable: false,\n            width: 5\n        },\n        {\n            Header: 'Template Name', accessor: 'templateName',\n            cell: (cell) => (\n                <div className=\"selectOpt\">\n                    <Text\n                        onClick={() => navigate(`/email-template/${cell?.row?.original._id}`)}\n                        me=\"10px\"\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\n                        color='brand.600'\n                        fontSize=\"sm\"\n                        fontWeight=\"700\"\n                    >\n                        {cell?.value}\n                    </Text>\n                </div>\n            )\n        },\n        { Header: \"Description\", accessor: \"description\" },\n        ...(permission?.update || permission?.delete ? [actionHeader] : []),\n    ];\n\n    const fetchData = async () => {\n        setIsLoding(true)\n        const result = await dispatch(fetchEmailTempData())\n        if (result.payload.status === 200) {\n            setData(result?.payload?.data);\n        } else {\n            toast.error(\"Failed to fetch data\", \"error\");\n        }\n        setIsLoding(false)\n    }\n\n    const handleDeleteTask = async (ids) => {\n        try {\n            setIsLoding(true)\n            let response = await deleteManyApi('api/email-temp/deleteMany', ids)\n            if (response.status === 200) {\n                setSelectedValues([])\n                setDeleteMany(false)\n                setAction((pre) => !pre)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n        finally {\n            setIsLoding(false)\n        }\n    }\n\n\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\n\n    const addBtn = () => {\n        navigate(`/email-template/email-template-addEdit`, { state: { type: 'add' } })\n        setUserAction(\"add\");\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [action])\n\n    return (\n        <div>\n            <CommonCheckTable\n                title={\"Email Template\"}\n                isLoding={isLoding}\n                columnData={tableColumns ?? []}\n                // dataColumn={dataColumn ?? []}\n                allData={data ?? []}\n                searchDisplay={displaySearchData}\n                setSearchDisplay={setDisplaySearchData}\n                searchedDataOut={searchedData}\n                setSearchedDataOut={setSearchedData}\n                tableCustomFields={[]}\n                access={permission}\n                // selectedColumns={selectedColumns}\n                // setSelectedColumns={setSelectedColumns}\n                // state={state}\n                onOpen={addBtn}\n                selectedValues={selectedValues}\n                setSelectedValues={setSelectedValues}\n                setDelete={setDeleteMany}\n                AdvanceSearch={false}\n                getTagValuesOutSide={getTagValuesOutSide}\n                searchboxOutside={searchboxOutside}\n                setGetTagValuesOutside={setGetTagValuesOutside}\n                setSearchboxOutside={setSearchboxOutside}\n                handleSearchType=\"template\"\n            />\n            <CommonDeleteModel isOpen={deleteMany} onClose={() => setDeleteMany(false)} type='Email Template' handleDeleteData={handleDeleteTask} ids={selectedValues} />\n        </div>\n    )\n}\n\nexport default Index\n\n"],"names":["Index","action","setAction","useState","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","eventView","setEventView","id","setId","selectedId","setSelectedId","selectedValues","setSelectedValues","getTagValuesOutSide","setGetTagValuesOutside","searchboxOutside","setSearchboxOutside","deleteMany","setDeleteMany","JSON","parse","localStorage","getItem","isImportLead","setIsImportLead","isLoding","setIsLoding","data","setData","displaySearchData","setDisplaySearchData","searchedData","setSearchedData","userAction","setUserAction","permission","HasAccess","navigate","useLocation","useNavigate","dispatch","useDispatch","actionHeader","Header","isSortable","center","cell","_ref","row","_jsx","Text","fontSize","fontWeight","textAlign","children","_jsxs","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","minW","transform","update","MenuItem","py","icon","EditIcon","mb","onClick","_row$values","_row$values2","state","type","values","_id","handleEditOpen","view","color","ViewIcon","_row$values3","concat","delete","DeleteIcon","_row$values4","tableColumns","accessor","width","className","_cell$row","original","me","sx","textDecoration","cursor","value","useEffect","async","result","fetchEmailTempData","_result$payload","payload","status","toast","error","fetchData","CommonCheckTable","title","columnData","allData","searchDisplay","setSearchDisplay","searchedDataOut","setSearchedDataOut","tableCustomFields","access","addBtn","setDelete","AdvanceSearch","handleSearchType","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","pre","console","log"],"sourceRoot":""}