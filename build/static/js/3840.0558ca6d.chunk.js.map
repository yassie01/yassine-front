{"version":3,"file":"static/js/3840.0558ca6d.chunk.js","mappings":"scAuBA,MAq1BA,EAr1BcA,IAAW,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GACpB,MAAMC,IAASC,EAAAA,EAAAA,MACT,GAAEC,IAAOF,GACTG,GAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAEtCC,GAAYC,GAAeC,KAAcC,EAAAA,EAAAA,GAAU,CAAC,UAAW,WAAY,WAE3EC,GAAMC,KAAWC,EAAAA,EAAAA,aAClB,OAAEC,GAAM,QAAEC,KAAYC,EAAAA,EAAAA,OACrBC,GAAMC,KAAWL,EAAAA,EAAAA,WAAS,IAC1BM,GAAaC,KAAaP,EAAAA,EAAAA,WAAS,IACnCQ,GAAiBC,KAAsBT,EAAAA,EAAAA,WAAS,IAChDU,GAASC,KAAcX,EAAAA,EAAAA,WAAS,GACjCY,IAAWC,EAAAA,EAAAA,OACVC,GAAMC,KAAWf,EAAAA,EAAAA,UAAS,KAC1BgB,GAAeC,KAAoBjB,EAAAA,EAAAA,UAAS,OAC5CkB,GAAmBC,KAAwBnB,EAAAA,EAAAA,UAAS,MAIrDoB,KAHQ,IAAIC,MAAOC,cAAcC,MAAM,KAAK,IAChC,IAAIF,MAAOC,cAAcC,MAAM,KAAK,GAEhCC,UAClB,GAAIpC,GAAI,CACJ,IAAIqC,QAAeC,EAAAA,EAAAA,IAAO,oBAAqBtC,IAC/CW,GAAc,OAAN0B,QAAM,IAANA,OAAM,EAANA,EAAQ3B,KACpB,IA4CE6B,GAAgB,CAClBC,KAAU,OAAJ9B,SAAI,IAAJA,QAAI,EAAJA,GAAM8B,KACZC,YAAiB,OAAJ/B,SAAI,IAAJA,QAAI,EAAJA,GAAM+B,YACnBC,eAAoB,OAAJhC,SAAI,IAAJA,QAAI,EAAJA,GAAMgC,eACtBC,WAAgB,OAAJjC,SAAI,IAAJA,QAAI,EAAJA,GAAMiC,WAClBC,QAAa,OAAJlC,SAAI,IAAJA,QAAI,EAAJA,GAAMkC,QACfC,IAAS,OAAJnC,SAAI,IAAJA,QAAI,EAAJA,GAAMmC,IACXC,UAAe,OAAJpC,SAAI,IAAJA,QAAI,EAAJA,GAAMoC,UACjBC,aAAkB,OAAJrC,SAAI,IAAJA,QAAI,EAAJA,GAAMqC,aACpBC,gBAAqB,OAAJtC,SAAI,IAAJA,QAAI,EAAJA,GAAMsC,gBACvBC,cAAmB,OAAJvC,SAAI,IAAJA,QAAI,EAAJA,GAAMuC,cACrBC,eAAoB,OAAJxC,SAAI,IAAJA,QAAI,EAAJA,GAAMwC,eACtBC,eAAoB,OAAJzC,SAAI,IAAJA,QAAI,EAAJA,GAAMyC,eACtBC,eAAoB,OAAJ1C,SAAI,IAAJA,QAAI,EAAJA,GAAM0C,eACtBC,kBAAuB,OAAJ3C,SAAI,IAAJA,QAAI,EAAJA,GAAM2C,kBACzBC,YAAiB,OAAJ5C,SAAI,IAAJA,QAAI,EAAJA,GAAM4C,YACnBC,aAAkB,OAAJ7C,SAAI,IAAJA,QAAI,EAAJA,GAAM6C,aACpBC,eAAoB,OAAJ9C,SAAI,IAAJA,QAAI,EAAJA,GAAM8C,eACtBC,eAAoB,OAAJ/C,SAAI,IAAJA,QAAI,EAAJA,GAAM+C,eACtBC,gBAAqB,OAAJhD,SAAI,IAAJA,QAAI,EAAJA,GAAMgD,gBACvBC,gBAAqB,OAAJjD,SAAI,IAAJA,QAAI,EAAJA,GAAMiD,gBACvBC,gBAAqB,OAAJlD,SAAI,IAAJA,QAAI,EAAJA,GAAMkD,gBACvBC,mBAAwB,OAAJnD,SAAI,IAAJA,QAAI,EAAJA,GAAMmD,mBAC1BC,aAAkB,OAAJpD,SAAI,IAAJA,QAAI,EAAJA,GAAMoD,aACpBC,cAAmB,OAAJrD,SAAI,IAAJA,QAAI,EAAJA,GAAMqD,cACrBC,gBAAqB,OAAJtD,SAAI,IAAJA,QAAI,EAAJA,GAAMsD,gBACvBC,YAAiB,OAAJvD,SAAI,IAAJA,QAAI,EAAJA,GAAMuD,YACnBvC,KAAU,OAAJhB,SAAI,IAAJA,QAAI,EAAJA,GAAMgB,KACZwC,SAAc,OAAJxD,SAAI,IAAJA,QAAI,EAAJA,GAAMwD,SAChBC,cAAmB,OAAJzD,SAAI,IAAJA,QAAI,EAAJA,GAAMyD,cACrBC,OAAY,OAAJ1D,SAAI,IAAJA,QAAI,EAAJA,GAAM0D,OACdC,QAAa,OAAJ3D,SAAI,IAAJA,QAAI,EAAJA,GAAM2D,QACfC,SAAc,OAAJ5D,SAAI,IAAJA,QAAI,EAAJA,GAAM4D,SAChBC,WAAYrE,KAAKC,MAAMC,aAAaC,QAAQ,SAASmE,KAGnDC,IAASC,EAAAA,EAAAA,IAAU,CACrBnC,cAAeA,GACfoC,iBAAkBC,EAAAA,EAClBC,oBAAoB,EACpBC,SAAU1C,MAAO2C,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAClC,MAAME,GAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNJ,GAAM,IACTK,aAAc,IAAInD,OAEtB,IAAIoD,QAAiBC,EAAAA,EAAAA,IAAO,oBAADC,OAAqBvF,IAAMkF,GACtDrD,GAAiB,MACO,MAApBwD,EAASG,QACTxD,KACAyD,EAAAA,GAAMC,QAAQ,GAADH,OAAIzD,GAAiB,0BAElC2D,EAAAA,GAAME,MAAM,GAADJ,OAAIzD,GAAiB,eACpC,IAGF8D,GAAoBA,CAACC,EAAWC,EAAOtD,KACzCiC,GAAOsB,cAAcF,EAAWC,GAChCjE,GAAiBgE,GACjB9D,GAAqBS,EAAK,EAGxBwD,GAAcC,IAChBxB,GAAOyB,cAAc,EAMzB,OAJAC,EAAAA,EAAAA,YAAU,KACNnE,IAAe,GAChB,CAAChC,GAAIgB,MAGJoF,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAACE,EAAAA,KAAI,CAACC,gBAAgB,iBAAiBC,IAAK,EAAGxG,GAAG,UAASqG,SAAA,EACvDI,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAIP,UAC3BI,EAAAA,EAAAA,KAACI,EAAAA,QAAO,CAACC,KAAK,KAAKC,EAAG,EAAEV,UACf,OAAJ3F,SAAI,IAAJA,QAAI,EAAJA,GAAM8B,OAAQ,SAGvBiE,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAIP,UAC3BI,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAAAX,UACDD,EAAAA,EAAAA,MAACE,EAAAA,KAAI,CAACE,IAAK,EAAEH,SAAA,EACTI,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,QAAS,EAAEN,UACjBD,EAAAA,EAAAA,MAACa,EAAAA,IAAG,CAAAZ,SAAA,EACAD,EAAAA,EAAAA,MAACa,EAAAA,IAAG,CAACC,QAAS,OAAQC,eAAgB,gBAAgBd,SAAA,EAClDI,EAAAA,EAAAA,KAACI,EAAAA,QAAO,CAACC,KAAK,KAAKM,GAAI,EAAEf,SAAC,qBAG1BD,EAAAA,EAAAA,MAACiB,EAAAA,KAAI,CAACrH,GAAG,WAAUqG,SAAA,EACfD,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAAAjB,SAAA,EACe,eAAdpG,GAAKsH,OAAmC,OAAVjH,SAAU,IAAVA,QAAU,EAAVA,GAAYkH,UAAoB,OAAVlH,SAAU,IAAVA,QAAU,EAAVA,GAAYmH,UAAoB,OAAVnH,SAAU,IAAVA,QAAU,EAAVA,GAAYoH,WAAWjB,EAAAA,EAAAA,KAACkB,EAAAA,GAAU,CAACC,QAAQ,UAAUC,YAAY,aAAaf,KAAK,KAAKgB,IAAE,EAACC,GAAI,IAAKC,GAAIC,EAAAA,OAAQC,WAAWzB,EAAAA,EAAAA,KAAC0B,EAAAA,gBAAe,IAAI9B,SAAC,aAG5NI,EAAAA,EAAAA,KAAC2B,EAAAA,GAAW,KACZhC,EAAAA,EAAAA,MAACiC,EAAAA,GAAQ,CAACC,SAAU,EAAEjC,SAAA,EACF,eAAdpG,GAAKsH,OAAmC,OAAVjH,SAAU,IAAVA,QAAU,EAAVA,GAAYkH,WAAWf,EAAAA,EAAAA,KAAC8B,EAAAA,GAAQ,CAACC,QAASA,KAAQvH,IAAQ,GAAOU,GAAQ,OAAQ8C,GAAOQ,WAAW,EACjIwD,WAAY,QAASC,MAAO,OAAQC,MAAMlC,EAAAA,EAAAA,KAACmC,EAAAA,QAAO,IAAIvC,SAAC,SACzC,eAAdpG,GAAKsH,OAAmC,OAAVjH,SAAU,IAAVA,QAAU,EAAVA,GAAYmH,WAAWhB,EAAAA,EAAAA,KAAC8B,EAAAA,GAAQ,CAACC,QAASA,KAAQvH,IAAQ,GAAOU,GAAQ,OAAO,EAAI8G,WAAY,QAASE,MAAMlC,EAAAA,EAAAA,KAACoC,EAAAA,SAAQ,IAAIxC,SAAC,UAC7JI,EAAAA,EAAAA,KAAC8B,EAAAA,GAAQ,CAACC,QAzItCM,KAChBvH,IAAW,GACX,MAAMwH,EAAUC,SAASC,eAAe,WAClCC,EAAUF,SAASC,eAAe,YAEpCF,GACAG,EAAQC,MAAMjC,QAAU,OACxBkC,MACKC,KAAKN,GACLO,IAAI,CACDC,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClBC,SAAS,mBAADjE,OAAqBkE,MAASC,OAAO,cAAa,QAC1DC,MAAO,CAAEjI,KAAM,OAAQkI,QAAS,KAChCC,YAAa,CAAEC,MAAO,EAAGC,SAAS,EAAMC,YAAY,GACpDC,MAAO,CAAEC,KAAM,KAAMR,OAAQ,SAAUS,YAAa,cAEvDC,OAAOC,MAAK,KACT9I,IAAW,GACX2H,EAAQC,MAAMjC,QAAU,EAAE,MAIlCoD,QAAQ3E,MAAM,wCACdpE,IAAW,GACf,EAiH4EkH,WAAY,QAASE,MAAMlC,EAAAA,EAAAA,KAAC8D,EAAAA,IAAS,IAAKrD,QAAS,OAAQiC,MAAO,CAAEV,WAAY,UAAWpC,SAAC,kBAE5G,eAAdpG,GAAKsH,OAAmC,OAAVjH,SAAU,IAAVA,QAAU,EAAVA,GAAYoH,WAAWtB,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACnDI,EAAAA,EAAAA,KAAC2B,EAAAA,GAAW,KACZ3B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAQ,CAACE,WAAY,QAASD,QAASA,IAAMnH,IAAmB,GAAOqH,MAAO,MAAOC,MAAMlC,EAAAA,EAAAA,KAACgE,EAAAA,WAAU,IAAIpE,SAAC,qBAIxHI,EAAAA,EAAAA,KAACwB,EAAAA,OAAM,CAACyC,UAAUjE,EAAAA,EAAAA,KAACkE,EAAAA,IAAc,IAAK7D,KAAK,KAAKc,QAAQ,QAAQY,QAASA,IAAMhH,IAAU,GAAG6E,SAAE,gBAKtGI,EAAAA,EAAAA,KAACmE,EAAAA,EAAU,UAGnBxE,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,mBAEzC,SAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFjL,GAAG,OACHwC,KAAK,OACLd,KAAK,OACLwJ,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOvC,KACrB6I,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARhI,EAANgI,GAAQ6G,cAAM,IAAA7O,GAAdA,EAAgB+F,MAAc,OAANiC,SAAM,IAANA,IAAe,QAAT/H,EAAN+H,GAAQ8G,eAAO,IAAA7O,GAAfA,EAAiB8F,KAAO,UAAY,KACzEgJ,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO9I,QAAc,OAANiC,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ/I,QAAc,OAANiC,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO9I,aAGlGiE,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,OAAY,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAM8B,KAAM,gBAAgB6D,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM8B,KAAW,OAAJ9B,SAAI,IAAJA,QAAI,EAAJA,GAAM8B,KAAO,YAGzH4D,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,mBAEzC,gBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,cACLd,KAAK,SACLwJ,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOtC,YACrB4I,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAAR9H,EAAN8H,GAAQ6G,cAAM,IAAA3O,GAAdA,EAAgB8F,aAAqB,OAANgC,SAAM,IAANA,IAAe,QAAT7H,EAAN6H,GAAQ8G,eAAO,IAAA3O,GAAfA,EAAiB6F,YAAc,UAAY,KACvF+I,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO7I,eAAqB,OAANgC,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ9I,eAAqB,OAANgC,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO7I,oBAGhHgE,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,cAAmB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAM+B,YAAa,gBAAgB4D,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM+B,YAAkB,OAAJ/B,SAAI,IAAJA,QAAI,EAAJA,GAAM+B,YAAc,YAGrJ2D,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,oBAEzC,mBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,iBACLd,KAAK,SACLwJ,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOrC,eACrB2I,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAAR5H,EAAN4H,GAAQ6G,cAAM,IAAAzO,GAAdA,EAAgB6F,gBAAwB,OAAN+B,SAAM,IAANA,IAAe,QAAT3H,EAAN2H,GAAQ8G,eAAO,IAAAzO,GAAfA,EAAiB4F,eAAiB,UAAY,KAC7F8I,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO5I,kBAAwB,OAAN+B,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ7I,kBAAwB,OAAN+B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO5I,uBAGtH+D,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,iBAAsB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMgC,eAAgB,mBAAmB2D,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMgC,eAAqB,OAAJhC,SAAI,IAAJA,QAAI,EAAJA,GAAMgC,eAAiB,YAGpK0D,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,YAEzC,YAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,UACLd,KAAK,MACLwJ,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOnC,QACrByI,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAAR1H,EAAN0H,GAAQ6G,cAAM,IAAAvO,GAAdA,EAAgB6F,SAAiB,OAAN6B,SAAM,IAANA,IAAe,QAATzH,EAANyH,GAAQ8G,eAAO,IAAAvO,GAAfA,EAAiB4F,QAAU,UAAY,KAC/E4I,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO1I,WAAiB,OAAN6B,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ3I,WAAiB,OAAN6B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO1I,gBAGxG6D,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,UAAe,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMkC,QAAS,WAAWyD,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMkC,QAAc,OAAJlC,SAAI,IAAJA,QAAI,EAAJA,GAAMkC,QAAU,YAGhIwD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,QAEzC,QAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,MACLd,KAAK,SACLwJ,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOlC,IACrBwI,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARxH,EAANwH,GAAQ6G,cAAM,IAAArO,GAAdA,EAAgB4F,KAAa,OAAN4B,SAAM,IAANA,IAAe,QAATvH,EAANuH,GAAQ8G,eAAO,IAAArO,GAAfA,EAAiB2F,IAAM,UAAY,KACvE2I,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOzI,OAAa,OAAN4B,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ1I,OAAa,OAAN4B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOzI,YAGhG4D,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,MAAW,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMmC,IAAK,OAAOwD,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMmC,IAAU,OAAJnC,SAAI,IAAJA,QAAI,EAAJA,GAAMmC,IAAM,YAG5GuD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,cAEzC,cAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,YACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOjC,UACrBuI,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARtH,EAANsH,GAAQ6G,cAAM,IAAAnO,GAAdA,EAAgB2F,WAAmB,OAAN2B,SAAM,IAANA,IAAe,QAATrH,EAANqH,GAAQ8G,eAAO,IAAAnO,GAAfA,EAAiB0F,UAAY,UAAY,KACnF0I,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOxI,aAAmB,OAAN2B,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQzI,aAAmB,OAAN2B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOxI,kBAG5G2D,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,YAAiB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMoC,UAAW,aAAauD,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMoC,UAAgB,OAAJpC,SAAI,IAAJA,QAAI,EAAJA,GAAMoC,UAAY,YAG1IsD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,kBAEzC,iBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,eACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOhC,aACrBsI,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARpH,EAANoH,GAAQ6G,cAAM,IAAAjO,GAAdA,EAAgB0F,cAAsB,OAAN0B,SAAM,IAANA,IAAe,QAATnH,EAANmH,GAAQ8G,eAAO,IAAAjO,GAAfA,EAAiByF,aAAe,UAAY,KACzFyI,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOvI,gBAAsB,OAAN0B,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQxI,gBAAsB,OAAN0B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOvI,qBAGlH0D,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,eAAoB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMqC,aAAc,iBAAiBsD,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMqC,aAAmB,OAAJrC,SAAI,IAAJA,QAAI,EAAJA,GAAMqC,aAAe,YAG1JqD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,sBAEzC,oBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,kBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAO/B,gBACrBqI,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARlH,EAANkH,GAAQ6G,cAAM,IAAA/N,GAAdA,EAAgByF,iBAAyB,OAANyB,SAAM,IAANA,IAAe,QAATjH,EAANiH,GAAQ8G,eAAO,IAAA/N,GAAfA,EAAiBwF,gBAAkB,UAAY,KAC/FwI,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOtI,mBAAyB,OAANyB,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQvI,mBAAyB,OAANyB,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOtI,wBAGxHyD,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,kBAAuB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMsC,gBAAiB,qBAAqBqD,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMsC,gBAAsB,OAAJtC,SAAI,IAAJA,QAAI,EAAJA,GAAMsC,gBAAkB,YAG1KoD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,oBAEzC,mBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,iBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOtB,eACrB4H,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARhH,EAANgH,GAAQ6G,cAAM,IAAA7N,GAAdA,EAAgBgG,gBAAwB,OAANgB,SAAM,IAANA,IAAe,QAAT/G,EAAN+G,GAAQ8G,eAAO,IAAA7N,GAAfA,EAAiB+F,eAAiB,UAAY,KAC7F+H,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO7H,kBAAwB,OAANgB,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ9H,kBAAwB,OAANgB,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO7H,uBAGtHgD,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,iBAAsB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAM+C,eAAgB,mBAAmB4C,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM+C,eAAqB,OAAJ/C,SAAI,IAAJA,QAAI,EAAJA,GAAM+C,eAAiB,YAGpK2C,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,mBAEzC,kBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,gBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAO9B,cACrBoI,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAAR9G,EAAN8G,GAAQ6G,cAAM,IAAA3N,GAAdA,EAAgBsF,eAAuB,OAANwB,SAAM,IAANA,IAAe,QAAT7G,EAAN6G,GAAQ8G,eAAO,IAAA3N,GAAfA,EAAiBqF,cAAgB,UAAY,KAC3FuI,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOrI,iBAAuB,OAANwB,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQtI,iBAAuB,OAANwB,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOrI,sBAGpHwD,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,gBAAqB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMuC,cAAe,kBAAkBoD,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMuC,cAAoB,OAAJvC,SAAI,IAAJA,QAAI,EAAJA,GAAMuC,cAAgB,YAG/JmD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,qBAEzC,oBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,kBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOrB,gBACrB2H,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAAR5G,EAAN4G,GAAQ6G,cAAM,IAAAzN,GAAdA,EAAgB6F,iBAAyB,OAANe,SAAM,IAANA,IAAe,QAAT3G,EAAN2G,GAAQ8G,eAAO,IAAAzN,GAAfA,EAAiB4F,gBAAkB,UAAY,KAC/F8H,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO5H,mBAAyB,OAANe,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ7H,mBAAyB,OAANe,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO5H,wBAGxH+C,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,kBAAuB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMgD,gBAAiB,oBAAoB2C,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMgD,gBAAsB,OAAJhD,SAAI,IAAJA,QAAI,EAAJA,GAAMgD,gBAAkB,YAGzK0C,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,oBAEzC,mBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,iBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAO7B,eACrBmI,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAAR1G,EAAN0G,GAAQ6G,cAAM,IAAAvN,GAAdA,EAAgBmF,gBAAwB,OAANuB,SAAM,IAANA,IAAe,QAATzG,EAANyG,GAAQ8G,eAAO,IAAAvN,GAAfA,EAAiBkF,eAAiB,UAAY,KAC7FsI,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOpI,kBAAwB,OAANuB,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQrI,kBAAwB,OAANuB,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOpI,uBAGtHuD,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,iBAAsB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMwC,eAAgB,mBAAmBmD,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMwC,eAAqB,OAAJxC,SAAI,IAAJA,QAAI,EAAJA,GAAMwC,eAAiB,YAGpKkD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,qBAEzC,oBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,kBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOpB,gBACrB0H,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARxG,EAANwG,GAAQ6G,cAAM,IAAArN,GAAdA,EAAgB0F,iBAAyB,OAANc,SAAM,IAANA,IAAe,QAATvG,EAANuG,GAAQ8G,eAAO,IAAArN,GAAfA,EAAiByF,gBAAkB,UAAY,KAC/F6H,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO3H,mBAAyB,OAANc,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ5H,mBAAyB,OAANc,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO3H,wBAGxH8C,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,kBAAuB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMiD,gBAAiB,oBAAoB0C,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMiD,gBAAsB,OAAJjD,SAAI,IAAJA,QAAI,EAAJA,GAAMiD,gBAAkB,YAGzKyC,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,oBAEzC,mBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,iBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAO5B,eACrBkI,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARtG,EAANsG,GAAQ6G,cAAM,IAAAnN,GAAdA,EAAgBgF,gBAAwB,OAANsB,SAAM,IAANA,IAAe,QAATrG,EAANqG,GAAQ8G,eAAO,IAAAnN,GAAfA,EAAiB+E,eAAiB,UAAY,KAC7FqI,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOnI,kBAAwB,OAANsB,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQpI,kBAAwB,OAANsB,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOnI,uBAGtHsD,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,iBAAsB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMyC,eAAgB,mBAAmBkD,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMyC,eAAqB,OAAJzC,SAAI,IAAJA,QAAI,EAAJA,GAAMyC,eAAiB,YAGpKiD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,qBAEzC,oBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,kBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOnB,gBACrByH,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARpG,GAANoG,GAAQ6G,cAAM,IAAAjN,IAAdA,GAAgBuF,iBAAyB,OAANa,SAAM,IAANA,IAAe,QAATnG,GAANmG,GAAQ8G,eAAO,IAAAjN,IAAfA,GAAiBsF,gBAAkB,UAAY,KAC/F4H,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO1H,mBAAyB,OAANa,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ3H,mBAAyB,OAANa,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO1H,wBAGxH6C,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,kBAAuB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMkD,gBAAiB,oBAAoByC,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMkD,gBAAsB,OAAJlD,SAAI,IAAJA,QAAI,EAAJA,GAAMkD,gBAAkB,YAGzKwC,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,oBAEzC,mBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,iBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAO3B,eACrBiI,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARlG,GAANkG,GAAQ6G,cAAM,IAAA/M,IAAdA,GAAgB6E,gBAAwB,OAANqB,SAAM,IAANA,IAAe,QAATjG,GAANiG,GAAQ8G,eAAO,IAAA/M,IAAfA,GAAiB4E,eAAiB,UAAY,KAC7FoI,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOlI,kBAAwB,OAANqB,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQnI,kBAAwB,OAANqB,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOlI,uBAGtHqD,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,iBAAsB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAM0C,eAAgB,mBAAmBiD,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM0C,eAAqB,OAAJ1C,SAAI,IAAJA,QAAI,EAAJA,GAAM0C,eAAiB,YAGpKgD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,yBAEzC,uBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,qBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOlB,mBACrBwH,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARhG,GAANgG,GAAQ6G,cAAM,IAAA7M,IAAdA,GAAgBoF,oBAA4B,OAANY,SAAM,IAANA,IAAe,QAAT/F,GAAN+F,GAAQ8G,eAAO,IAAA7M,IAAfA,GAAiBmF,mBAAqB,UAAY,KACrG2H,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOzH,sBAA4B,OAANY,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ1H,sBAA4B,OAANY,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOzH,2BAG9H4C,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,qBAA0B,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMmD,mBAAoB,wBAAwBwC,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMmD,mBAAyB,OAAJnD,SAAI,IAAJA,QAAI,EAAJA,GAAMmD,mBAAqB,YAGzLuC,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,wBAEzC,sBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,oBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAO1B,kBACrBgI,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAAR9F,GAAN8F,GAAQ6G,cAAM,IAAA3M,IAAdA,GAAgB0E,mBAA2B,OAANoB,SAAM,IAANA,IAAe,QAAT7F,GAAN6F,GAAQ8G,eAAO,IAAA3M,IAAfA,GAAiByE,kBAAoB,UAAY,KACnGmI,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOjI,qBAA2B,OAANoB,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQlI,qBAA2B,OAANoB,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOjI,0BAG5HoD,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,oBAAyB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAM2C,kBAAmB,uBAAuBgD,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM2C,kBAAwB,OAAJ3C,SAAI,IAAJA,QAAI,EAAJA,GAAM2C,kBAAoB,YAGpL+C,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,kBAGzC,iBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,eACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOjB,aACrBuH,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAAR5F,GAAN4F,GAAQ6G,cAAM,IAAAzM,IAAdA,GAAgBiF,cAAsB,OAANW,SAAM,IAANA,IAAe,QAAT3F,GAAN2F,GAAQ8G,eAAO,IAAAzM,IAAfA,GAAiBgF,aAAe,UAAY,KACzF0H,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOxH,gBAAsB,OAANW,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQzH,gBAAsB,OAANW,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOxH,qBAGlH2C,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,eAAoB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMoD,aAAc,iBAAiBuC,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMoD,aAAmB,OAAJpD,SAAI,IAAJA,QAAI,EAAJA,GAAMoD,aAAe,YAG1JsC,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,iBAGzC,gBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,cACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOzB,YACrB+H,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAAR1F,GAAN0F,GAAQ6G,cAAM,IAAAvM,IAAdA,GAAgBuE,aAAqB,OAANmB,SAAM,IAANA,IAAe,QAATzF,GAANyF,GAAQ8G,eAAO,IAAAvM,IAAfA,GAAiBsE,YAAc,UAAY,KACvFkI,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOhI,eAAqB,OAANmB,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQjI,eAAqB,OAANmB,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOhI,oBAGhHmD,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,cAAmB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAM4C,YAAa,gBAAgB+C,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM4C,YAAkB,OAAJ5C,SAAI,IAAJA,QAAI,EAAJA,GAAM4C,YAAc,YAGrJ8C,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,mBAEzC,kBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,gBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOhB,cACrBsH,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARxF,GAANwF,GAAQ6G,cAAM,IAAArM,IAAdA,GAAgB8E,eAAuB,OAANU,SAAM,IAANA,IAAe,QAATvF,GAANuF,GAAQ8G,eAAO,IAAArM,IAAfA,GAAiB6E,cAAgB,UAAY,KAC3FyH,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOvH,iBAAuB,OAANU,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQxH,iBAAuB,OAANU,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOvH,sBAGpH0C,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,gBAAqB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMqD,cAAe,kBAAkBsC,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMqD,cAAoB,OAAJrD,SAAI,IAAJA,QAAI,EAAJA,GAAMqD,cAAgB,YAG/JqC,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,kBAEzC,iBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,eACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOxB,aACrB8H,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARtF,GAANsF,GAAQ6G,cAAM,IAAAnM,IAAdA,GAAgBoE,cAAsB,OAANkB,SAAM,IAANA,IAAe,QAATrF,GAANqF,GAAQ8G,eAAO,IAAAnM,IAAfA,GAAiBmE,aAAe,UAAY,KACzFiI,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO/H,gBAAsB,OAANkB,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQhI,gBAAsB,OAANkB,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO/H,qBAGlHkD,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,eAAoB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAM6C,aAAc,iBAAiB8C,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM6C,aAAmB,OAAJ7C,SAAI,IAAJA,QAAI,EAAJA,GAAM6C,aAAe,YAG1J6C,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,qBAEzC,oBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,kBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOf,gBACrBqH,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARpF,GAANoF,GAAQ6G,cAAM,IAAAjM,IAAdA,GAAgB2E,iBAAyB,OAANS,SAAM,IAANA,IAAe,QAATnF,GAANmF,GAAQ8G,eAAO,IAAAjM,IAAfA,GAAiB0E,gBAAkB,UAAY,KAC/FwH,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOtH,mBAAyB,OAANS,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQvH,mBAAyB,OAANS,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOtH,wBAGxHyC,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,kBAAuB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMsD,gBAAiB,oBAAoBqC,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMsD,gBAAsB,OAAJtD,SAAI,IAAJA,QAAI,EAAJA,GAAMsD,gBAAkB,YAGzKoC,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,oBAEzC,mBAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,iBACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOvB,eACrB6H,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARlF,GAANkF,GAAQ6G,cAAM,IAAA/L,IAAdA,GAAgBiE,gBAAwB,OAANiB,SAAM,IAANA,IAAe,QAATjF,GAANiF,GAAQ8G,eAAO,IAAA/L,IAAfA,GAAiBgE,eAAiB,UAAY,KAC7FgI,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO9H,kBAAwB,OAANiB,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ/H,kBAAwB,OAANiB,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO9H,uBAGtHiD,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,iBAAsB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAM8C,eAAgB,mBAAmB6C,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM8C,eAAqB,OAAJ9C,SAAI,IAAJA,QAAI,EAAJA,GAAM8C,eAAiB,YAGpK4C,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,SAEzC,SAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACID,EAAAA,EAAAA,MAACsF,EAAAA,GAAM,CACH5F,MAAa,OAANrB,SAAM,IAANA,QAAM,EAANA,GAAQM,OAAOrD,KACtBc,KAAK,OACL0I,SAAgB,OAANzG,SAAM,IAANA,QAAM,EAANA,GAAQ0G,aAClBC,OAAQpF,GACRgF,WAAW,MACXW,YAAa,cACbN,YAAmB,OAAN5G,SAAM,IAANA,IAAAA,GAAQ6G,OAAO5J,MAAc,OAAN+C,SAAM,IAANA,IAAAA,GAAQ8G,QAAQ7J,KAAO,UAAY,KAAK2E,SAAA,EAE5EI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,UAASO,SAAC,aACxBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,aAAYO,SAAC,iBAC3BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,WAAUO,SAAC,cACzBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,aAAYO,SAAC,gBAC3BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,WAAUO,SAAC,eACzBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,UAASO,SAAC,aACxBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,QAAOO,SAAC,WACtBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,WAAUO,SAAC,cACzBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,WAAUO,SAAC,cACzBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,QAAOO,SAAC,cAE1BD,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO5J,QAAc,OAAN+C,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQ7J,QAAc,OAAN+C,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAO5J,aAGlG+E,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,OAAY,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMgB,KAAM,QAAQ2E,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMgB,KAAW,OAAJhB,SAAI,IAAJA,QAAI,EAAJA,GAAMgB,KAAO,YAGjH0E,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,aAEzC,aAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACID,EAAAA,EAAAA,MAACsF,EAAAA,GAAM,CACH5F,MAAa,OAANrB,SAAM,IAANA,QAAM,EAANA,GAAQM,OAAOb,SACtB1B,KAAK,WACL0I,SAAgB,OAANzG,SAAM,IAANA,QAAM,EAANA,GAAQ0G,aAClBC,OAAQpF,GACRgF,WAAW,MACXW,YAAa,kBACbN,YAAmB,OAAN5G,SAAM,IAANA,IAAAA,GAAQ6G,OAAOpH,UAAkB,OAANO,SAAM,IAANA,IAAAA,GAAQ8G,QAAQrH,SAAW,UAAY,KAAKmC,SAAA,EAEpFI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,UAASO,SAAC,aACxBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,UAASO,SAAC,cACxBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,gBAAeO,SAAC,mBAC9BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,YAAWO,SAAC,eAC1BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,iBAAgBO,SAAC,qBAC/BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,eAAcO,SAAC,kBAC7BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,aAAYO,SAAC,gBAC3BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,YAAWO,SAAC,eAC1BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,cAAaO,SAAC,iBAC5BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,SAAQO,SAAC,YACvBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,cAAaO,SAAC,iBAC5BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,gBAAeO,SAAC,mBAC9BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,UAASO,SAAC,aACxBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,aAAYO,SAAC,gBAC3BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,aAAYO,SAAC,gBAC3BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,cAAaO,SAAC,iBAC5BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,YAAWO,SAAC,eAC1BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,YAAWO,SAAC,eAC1BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,gBAAeO,SAAC,mBAC9BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,QAAOO,SAAC,WACtBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,iBAAgBO,SAAC,oBAC/BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,aAAYO,SAAC,gBAC3BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,SAAQO,SAAC,YACvBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,WAAUO,SAAC,cACzBI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,aAAYO,SAAC,gBAC3BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,qBAAoBO,SAAC,wBACnCI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,iBAAgBO,SAAC,oBAC/BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,YAAWO,SAAC,eAC1BI,EAAAA,EAAAA,KAAA,UAAQX,MAAM,QAAOO,SAAC,cAE1BD,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOpH,YAAkB,OAANO,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQrH,YAAkB,OAANO,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOpH,iBAG1GuC,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,WAAgB,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAMwD,SAAU,YAAYmC,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMwD,SAAe,OAAJxD,SAAI,IAAJA,QAAI,EAAJA,GAAMwD,SAAW,YAGrIkC,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,cAC/DI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAAAzE,SAAO,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM0D,OAAa,OAAJ1D,SAAI,IAAJA,QAAI,EAAJA,GAAM0D,OAAS,YAE1CgC,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,aAEzC,YAAlBzE,IACIwE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAAnE,SAAA,EACII,EAAAA,EAAAA,KAACwE,EAAAA,MAAK,CACFzI,KAAK,UACL0I,SAAUzG,GAAO0G,aACjBC,OAAQpF,GACRF,MAAOrB,GAAOM,OAAOV,QACrBgH,YAAmB,OAAN5G,SAAM,IAANA,IAAc,QAARhF,GAANgF,GAAQ6G,cAAM,IAAA7L,IAAdA,GAAgB4E,SAAiB,OAANI,SAAM,IAANA,IAAe,QAAT/E,GAAN+E,GAAQ8G,eAAO,IAAA7L,IAAfA,GAAiB2E,QAAU,UAAY,KAC/EmH,WAAS,KAEbpF,EAAAA,EAAAA,MAAC0E,EAAAA,KAAI,CAAC1D,GAAG,OAAOsB,MAAO,MAAMrC,SAAA,CAAC,KAAQ,OAAN5B,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOjH,WAAiB,OAANI,SAAM,IAANA,QAAM,EAANA,GAAQ8G,QAAQlH,WAAiB,OAANI,SAAM,IAANA,QAAM,EAANA,GAAQ6G,OAAOjH,gBAGxGoC,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACW,cAAeA,IAAM7F,GAAkB,UAAe,OAAJlF,SAAI,IAAJA,QAAI,EAAJA,GAAM2D,QAAS,YAAYgC,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM2D,QAAc,OAAJ3D,SAAI,IAAJA,QAAI,EAAJA,GAAM2D,QAAU,YAGjI+B,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,oBAGvD,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMiC,YACF8D,EAAAA,EAAAA,KAACmF,EAAAA,GAAI,CAACC,GAAkB,eAAd5L,GAAKsH,MAAqB,aAAAhC,OAAqB,OAAJ7E,SAAI,IAAJA,QAAI,EAAJA,GAAMiC,YAAa0D,UACpEI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACpC,MAAqB,eAAdzI,GAAKsH,KAAwB,WAAa,iBAAkBuE,GAAI,CAAE,UAAW,CAAEpD,MAAqB,eAAdzI,GAAKsH,KAAwB,WAAa,iBAAkBwE,eAA8B,eAAd9L,GAAKsH,KAAwB,YAAc,SAAY4B,MAAO,CAAE6C,OAAQ,WAAY3F,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMuL,eAAqB,OAAJvL,SAAI,IAAJA,QAAI,EAAJA,GAAMuL,eAAiB,WAGvTxF,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACpC,MAAqB,eAAdzI,GAAKsH,KAAwB,WAAa,iBAAkBuE,GAAI,CAAE,UAAW,CAAEpD,MAAqB,eAAdzI,GAAKsH,KAAwB,WAAa,iBAAkBwE,eAA8B,eAAd9L,GAAKsH,KAAwB,YAAc,SAAWlB,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMuL,eAAqB,OAAJvL,SAAI,IAAJA,QAAI,EAAJA,GAAMuL,eAAiB,YAIjS7F,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,EAAGiE,GAAI,GAAIxE,SAAA,EAClCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,OAAOtC,MAAO,iBAAiBrC,SAAC,gBAEvD,OAAJ3F,SAAI,IAAJA,IAAAA,GAAM4D,UACFmC,EAAAA,EAAAA,KAACmF,EAAAA,GAAI,CAACC,GAAE,gBAAAtG,OAAsB,OAAJ7E,SAAI,IAAJA,QAAI,EAAJA,GAAM4D,UAAW+B,UACvCI,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACpC,MAAiB,OAAVpI,SAAU,IAAVA,IAAAA,GAAY4L,KAAO,WAAa,iBAAkBJ,GAAI,CAAE,UAAW,CAAEpD,MAAiB,OAAVpI,SAAU,IAAVA,IAAAA,GAAY4L,KAAO,WAAa,iBAAkBH,eAA0B,OAAVzL,SAAU,IAAVA,IAAAA,GAAY4L,KAAO,YAAc,SAAY/C,MAAO,CAAE6C,OAAQ,WAAY3F,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMyL,aAAmB,OAAJzL,SAAI,IAAJA,QAAI,EAAJA,GAAMyL,aAAe,WAGrR1F,EAAAA,EAAAA,KAACqE,EAAAA,KAAI,CAACpC,MAAiB,OAAVpI,SAAU,IAAVA,IAAAA,GAAY4L,KAAO,WAAa,iBAAkBJ,GAAI,CAAE,UAAW,CAAEpD,MAAiB,OAAVpI,SAAU,IAAVA,IAAAA,GAAY4L,KAAO,WAAa,iBAAkBH,eAA0B,OAAVzL,SAAU,IAAVA,IAAAA,GAAY4L,KAAO,YAAc,SAAW7F,SAAM,OAAJ3F,SAAI,IAAJA,IAAAA,GAAMyL,aAAmB,OAAJzL,SAAI,IAAJA,QAAI,EAAJA,GAAMyL,aAAe,uBAoEhQ,OAAV7L,SAAU,IAAVA,QAAU,EAAVA,GAAYmH,UAAoB,OAAVnH,SAAU,IAAVA,QAAU,EAAVA,GAAYoH,SAAyB,gBAAX,OAAJzH,SAAI,IAAJA,QAAI,EAAJA,GAAMsH,SAA0Bd,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAACoF,GAAI,EAAE/F,UACrFI,EAAAA,EAAAA,KAACH,EAAAA,KAAI,CAACC,gBAAgB,iBAAiBC,IAAK,EAAEH,UAC1CI,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAC2F,SAAU,EAAEhG,UAClBD,EAAAA,EAAAA,MAACiB,EAAAA,KAAI,CAACF,eAAgB,QAAQd,SAAA,GACd,OAAV/F,SAAU,IAAVA,QAAU,EAAVA,GAAYmH,SAAyB,gBAAX,OAAJxH,SAAI,IAAJA,QAAI,EAAJA,GAAMsH,SAA0Bd,EAAAA,EAAAA,KAACwB,EAAAA,OAAM,CAACnB,KAAK,KAAK0B,QAASA,KAAQvH,IAAQ,GAAOU,GAAQ,OAAO,EAAI+I,UAAUjE,EAAAA,EAAAA,KAACoC,EAAAA,SAAQ,IAAKd,GAAI,IAAKH,QAAQ,UAAUC,YAAY,QAAOxB,SAAC,WACxL,OAAV/F,SAAU,IAAVA,QAAU,EAAVA,GAAYoH,SAAyB,gBAAX,OAAJzH,SAAI,IAAJA,QAAI,EAAJA,GAAMsH,SAA0Bd,EAAAA,EAAAA,KAACwB,EAAAA,OAAM,CAACnB,KAAK,KAAKqC,MAAO,CAAEmD,WAAY,WAAa9D,QAASA,IAAMnH,IAAmB,GAAOqJ,UAAUjE,EAAAA,EAAAA,KAACgE,EAAAA,WAAU,IAAK5C,YAAY,MAAKxB,SAAE,qBAMtNI,EAAAA,EAAAA,KAAC8F,EAAAA,EAAO,CAACC,OAAQxL,GAAM8F,KAAK,KAAKhG,QAASA,IAAMG,IAAQ,GAAQwL,UAAW3L,GAAS4L,WAAc,OAAF1M,SAAE,IAAFA,IAAAA,GAAI2M,MAAU,OAAF3M,SAAE,IAAFA,IAAS,QAAPL,GAAFK,GAAI2M,aAAK,IAAAhN,IAAM,QAANC,GAATD,GAAWiN,YAAI,IAAAhN,IAAe,QAAfC,GAAfD,GAAiBiN,qBAAa,IAAAhN,QAA5B,EAAFA,GAAgC2E,IAAMxE,GAAI0B,KAAMA,MAC5J+E,EAAAA,EAAAA,KAACqG,EAAAA,EAAiB,CAACN,OAAQpL,GAAiBN,QAASA,IAAMO,IAAmB,GAAQK,KAAK,UAAUqL,iBA5xBjF3K,UACxB,IAE4B,aADH4K,EAAAA,EAAAA,IAAc,yBAA0BC,IAChDzH,SACThE,GAAS,YACTiE,EAAAA,GAAMC,QAAQ,+BACdrE,IAAmB,GAE3B,CAAE,MAAOsE,GACL2E,QAAQ4C,IAAIvH,GACZF,EAAAA,GAAME,MAAM,eAEhB,GAgxBgJsH,IAAK,CAACjN,QAC/I,C,kDCt2BR,MAAMmN,EAAqBC,EAAAA,GAAW,CACzCC,gBAAiBD,EAAAA,KAAaE,SAAS,gCACvC5L,KAAM0L,EAAAA,KACNG,WAAYH,EAAAA,KACZI,SAAUJ,EAAAA,KACVK,kBAAmBL,EAAAA,KAAaE,SAAS,kCACzCI,OAAQN,EAAAA,KACRO,kBAAmBP,EAAAA,KAAaE,SAAS,mCACzCM,SAAUR,EAAAA,KACVS,WAAYT,EAAAA,KAAaE,SAAS,2BAClCQ,YAAaV,EAAAA,KACbnJ,YAAamJ,EAAAA,KACbW,SAAUX,EAAAA,M","sources":["views/admin/account/View.js","schema/opprtunitiesSchema.js"],"sourcesContent":["import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure, Box, Heading, Input, Select } from '@chakra-ui/react'\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport React from 'react'\nimport moment from 'moment'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { BiLink } from 'react-icons/bi'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport Card from 'components/card/Card'\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { HasAccess } from '../../../redux/accessUtils';\nimport { HSeparator } from 'components/separator/Separator';\nimport AddEdit from './AddEdit';\nimport CommonDeleteModel from 'components/commonDeleteModel';\nimport { deleteManyApi, putApi, getApi } from '../../../services/api';\nimport { FaFilePdf } from \"react-icons/fa\";\nimport html2pdf from \"html2pdf.js\";\nimport { opprtunitiesSchema } from '../../../schema/opprtunitiesSchema';\nimport { useFormik } from 'formik';\nimport dayjs from 'dayjs';\nimport { toast } from 'react-toastify';\nimport { accountSchema } from '../../../schema/accountSchema';\n\nconst View = (props) => {\n    const params = useParams()\n    const { id } = params\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n\n    const [permission, contactAccess, leadAccess] = HasAccess(['Account', 'Contacts', 'Leads'])\n\n    const [data, setData] = useState()\n    const { onOpen, onClose } = useDisclosure()\n    const [edit, setEdit] = useState(false);\n    const [deleteModel, setDelete] = useState(false);\n    const [deleteManyModel, setDeleteManyModel] = useState(false);\n    const [loading, setLoading] = useState(false)\n    const navigate = useNavigate()\n    const [type, setType] = useState(\"\")\n    const [editableField, setEditableField] = useState(null);\n    const [editableFieldName, setEditableFieldName] = useState(null);\n    const today = new Date().toISOString().split('T')[0];\n    const todayTime = new Date().toISOString().split('.')[0];\n\n    const fetchViewData = async () => {\n        if (id) {\n            let result = await getApi('api/account/view/', id);\n            setData(result?.data);\n        }\n    }\n    const generatePDF = () => {\n        setLoading(true)\n        const element = document.getElementById(\"reports\");\n        const hideBtn = document.getElementById(\"hide-btn\");\n\n        if (element) {\n            hideBtn.style.display = 'none';\n            html2pdf()\n                .from(element)\n                .set({\n                    margin: [0, 0, 0, 0],\n                    filename: `Account_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\n                    image: { type: \"jpeg\", quality: 0.98 },\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\n                })\n                .save().then(() => {\n                    setLoading(false)\n                    hideBtn.style.display = '';\n                })\n            // }, 500);\n        } else {\n            console.error(\"Element with ID 'reports' not found.\");\n            setLoading(false)\n        }\n    };\n    const handleDeleteAccount = async (ids) => {\n        try {\n            let response = await deleteManyApi('api/account/deleteMany', ids)\n            if (response.status === 200) {\n                navigate('/account')\n                toast.success(`Account Delete successfully`)\n                setDeleteManyModel(false)\n            }\n        } catch (error) {\n            console.log(error)\n            toast.error(`server error`)\n\n        }\n\n    }\n\n    const initialValues = {\n        name: data?.name,\n        officePhone: data?.officePhone,\n        alternatePhone: data?.alternatePhone,\n        assignUser: data?.assignUser,\n        website: data?.website,\n        fax: data?.fax,\n        ownership: data?.ownership,\n        emailAddress: data?.emailAddress,\n        nonPrimaryEmail: data?.nonPrimaryEmail,\n        billingStreet: data?.billingStreet,\n        billingStreet2: data?.billingStreet2,\n        billingStreet3: data?.billingStreet3,\n        billingStreet4: data?.billingStreet4,\n        billingPostalcode: data?.billingPostalcode,\n        billingCity: data?.billingCity,\n        billingState: data?.billingState,\n        billingCountry: data?.billingCountry,\n        shippingStreet: data?.shippingStreet,\n        shippingStreet2: data?.shippingStreet2,\n        shippingStreet3: data?.shippingStreet3,\n        shippingStreet4: data?.shippingStreet4,\n        shippingPostalcode: data?.shippingPostalcode,\n        shippingCity: data?.shippingCity,\n        shippingState: data?.shippingState,\n        shippingCountry: data?.shippingCountry,\n        description: data?.description,\n        type: data?.type,\n        industry: data?.industry,\n        annualRevenue: data?.annualRevenue,\n        rating: data?.rating,\n        SICCode: data?.SICCode,\n        memberOf: data?.memberOf,\n        modifiedBy: JSON.parse(localStorage.getItem('user'))._id\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: accountSchema,\n        enableReinitialize: true,\n        onSubmit: async (values, { resetForm }) => {\n            const payload = {\n                ...values,\n                modifiedDate: new Date()\n            }\n            let response = await putApi(`api/account/edit/${id}`, payload)\n            setEditableField(null);\n            if (response.status === 200) {\n                fetchViewData()\n                toast.success(`${editableFieldName} Update successfully`)\n            } else {\n                toast.error(`${editableFieldName} not Update`)\n            }\n        },\n    });\n    const handleDoubleClick = (fieldName, value, name) => {\n        formik.setFieldValue(fieldName, value);\n        setEditableField(fieldName)\n        setEditableFieldName(name)\n    };\n\n    const handleBlur = (e) => {\n        formik.handleSubmit();\n    };\n    useEffect(() => {\n        fetchViewData()\n    }, [id, edit])\n\n    return (\n        <div>\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\n                <GridItem colSpan={{ base: 4 }}>\n                    <Heading size=\"lg\" m={3}>\n                        {data?.name || \" \"}\n                    </Heading>\n                </GridItem>\n                <GridItem colSpan={{ base: 4 }}>\n                    <Card>\n                        <Grid gap={4}>\n                            <GridItem colSpan={2}>\n                                <Box>\n                                    <Box display={\"flex\"} justifyContent={\"space-between\"} >\n                                        <Heading size=\"md\" mb={3}>\n                                            Account Details\n                                        </Heading>\n                                        <Flex id=\"hide-btn\" >\n                                            <Menu>\n                                                {(user.role === 'superAdmin' || permission?.create || permission?.update || permission?.delete) && <MenuButton variant=\"outline\" colorScheme='blackAlpha' size=\"sm\" va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\n                                                    Actions\n                                                </MenuButton>}\n                                                <MenuDivider />\n                                                <MenuList minWidth={2}>\n                                                    {(user.role === 'superAdmin' || permission?.create) && <MenuItem onClick={() => { setEdit(true); setType(\"add\"); formik.resetForm() }\n                                                    } alignItems={'start'} color={'blue'} icon={<AddIcon />}>Add</MenuItem>}\n                                                    {(user.role === 'superAdmin' || permission?.update) && <MenuItem onClick={() => { setEdit(true); setType(\"edit\") }} alignItems={'start'} icon={<EditIcon />}>Edit</MenuItem>}\n                                                    <MenuItem onClick={generatePDF} alignItems={\"start\"} icon={<FaFilePdf />} display={\"flex\"} style={{ alignItems: \"center\" }}>Print as PDF</MenuItem >\n\n                                                    {(user.role === 'superAdmin' || permission?.delete) && <>\n                                                        <MenuDivider />\n                                                        <MenuItem alignItems={'start'} onClick={() => setDeleteManyModel(true)} color={'red'} icon={<DeleteIcon />}>Delete</MenuItem>\n                                                    </>}\n                                                </MenuList>\n                                            </Menu>\n                                            <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\" onClick={() => navigate(-1)} >\n                                                Back\n                                            </Button>\n                                        </Flex>\n                                    </Box>\n                                    <HSeparator />\n                                </Box>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Account Name </Text>\n                                {\n                                    editableField === \"name\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"name\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.name}\n                                                borderColor={formik?.errors?.name && formik?.touched?.name ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.name && formik?.touched.name && formik?.errors.name}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"name\", data?.name, \"Account Name\")}>{data?.name ? data?.name : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Office Phone </Text>\n                                {\n                                    editableField === \"officePhone\" ?\n                                        <>\n                                            <Input\n                                                name=\"officePhone\"\n                                                type=\"number\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.officePhone}\n                                                borderColor={formik?.errors?.officePhone && formik?.touched?.officePhone ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.officePhone && formik?.touched.officePhone && formik?.errors.officePhone}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"officePhone\", data?.officePhone, \"Office Phone\")}>{data?.officePhone ? data?.officePhone : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Alternate Phone</Text>\n                                {\n                                    editableField === \"alternatePhone\" ?\n                                        <>\n                                            <Input\n                                                name=\"alternatePhone\"\n                                                type=\"number\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.alternatePhone}\n                                                borderColor={formik?.errors?.alternatePhone && formik?.touched?.alternatePhone ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.alternatePhone && formik?.touched.alternatePhone && formik?.errors.alternatePhone}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"alternatePhone\", data?.alternatePhone, \"Alternate Phone\")}>{data?.alternatePhone ? data?.alternatePhone : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Website</Text>\n                                {\n                                    editableField === \"website\" ?\n                                        <>\n                                            <Input\n                                                name=\"website\"\n                                                type=\"url\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.website}\n                                                borderColor={formik?.errors?.website && formik?.touched?.website ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.website && formik?.touched.website && formik?.errors.website}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"website\", data?.website, \"Website\")}>{data?.website ? data?.website : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Fax</Text>\n                                {\n                                    editableField === \"fax\" ?\n                                        <>\n                                            <Input\n                                                name=\"fax\"\n                                                type=\"number\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.fax}\n                                                borderColor={formik?.errors?.fax && formik?.touched?.fax ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.fax && formik?.touched.fax && formik?.errors.fax}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"fax\", data?.fax, \"Fax\")}>{data?.fax ? data?.fax : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Ownership</Text>\n                                {\n                                    editableField === \"ownership\" ?\n                                        <>\n                                            <Input\n                                                name=\"ownership\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.ownership}\n                                                borderColor={formik?.errors?.ownership && formik?.touched?.ownership ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.ownership && formik?.touched.ownership && formik?.errors.ownership}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"ownership\", data?.ownership, \"Ownership\")}>{data?.ownership ? data?.ownership : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Email Address</Text>\n                                {\n                                    editableField === \"emailAddress\" ?\n                                        <>\n                                            <Input\n                                                name=\"emailAddress\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.emailAddress}\n                                                borderColor={formik?.errors?.emailAddress && formik?.touched?.emailAddress ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.emailAddress && formik?.touched.emailAddress && formik?.errors.emailAddress}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"emailAddress\", data?.emailAddress, \"Email Address\")}>{data?.emailAddress ? data?.emailAddress : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Non Primary Email</Text>\n                                {\n                                    editableField === \"nonPrimaryEmail\" ?\n                                        <>\n                                            <Input\n                                                name=\"nonPrimaryEmail\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.nonPrimaryEmail}\n                                                borderColor={formik?.errors?.nonPrimaryEmail && formik?.touched?.nonPrimaryEmail ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.nonPrimaryEmail && formik?.touched.nonPrimaryEmail && formik?.errors.nonPrimaryEmail}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"nonPrimaryEmail\", data?.nonPrimaryEmail, \"Non Primary Email\")}>{data?.nonPrimaryEmail ? data?.nonPrimaryEmail : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Street</Text>\n                                {\n                                    editableField === \"shippingStreet\" ?\n                                        <>\n                                            <Input\n                                                name=\"shippingStreet\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.shippingStreet}\n                                                borderColor={formik?.errors?.shippingStreet && formik?.touched?.shippingStreet ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingStreet && formik?.touched.shippingStreet && formik?.errors.shippingStreet}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingStreet\", data?.shippingStreet, \"Shipping Street\")}>{data?.shippingStreet ? data?.shippingStreet : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Street</Text>\n                                {\n                                    editableField === \"billingStreet\" ?\n                                        <>\n                                            <Input\n                                                name=\"billingStreet\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.billingStreet}\n                                                borderColor={formik?.errors?.billingStreet && formik?.touched?.billingStreet ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingStreet && formik?.touched.billingStreet && formik?.errors.billingStreet}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingStreet\", data?.billingStreet, \"Billing Street\")}>{data?.billingStreet ? data?.billingStreet : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Street2</Text>\n                                {\n                                    editableField === \"shippingStreet2\" ?\n                                        <>\n                                            <Input\n                                                name=\"shippingStreet2\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.shippingStreet2}\n                                                borderColor={formik?.errors?.shippingStreet2 && formik?.touched?.shippingStreet2 ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingStreet2 && formik?.touched.shippingStreet2 && formik?.errors.shippingStreet2}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingStreet2\", data?.shippingStreet2, \"Shipping Street2\")}>{data?.shippingStreet2 ? data?.shippingStreet2 : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Street2</Text>\n                                {\n                                    editableField === \"billingStreet2\" ?\n                                        <>\n                                            <Input\n                                                name=\"billingStreet2\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.billingStreet2}\n                                                borderColor={formik?.errors?.billingStreet2 && formik?.touched?.billingStreet2 ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingStreet2 && formik?.touched.billingStreet2 && formik?.errors.billingStreet2}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingStreet2\", data?.billingStreet2, \"Billing Street2\")}>{data?.billingStreet2 ? data?.billingStreet2 : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Street3</Text>\n                                {\n                                    editableField === \"shippingStreet3\" ?\n                                        <>\n                                            <Input\n                                                name=\"shippingStreet3\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.shippingStreet3}\n                                                borderColor={formik?.errors?.shippingStreet3 && formik?.touched?.shippingStreet3 ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingStreet3 && formik?.touched.shippingStreet3 && formik?.errors.shippingStreet3}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingStreet3\", data?.shippingStreet3, \"Shipping Street3\")}>{data?.shippingStreet3 ? data?.shippingStreet3 : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Street3</Text>\n                                {\n                                    editableField === \"billingStreet3\" ?\n                                        <>\n                                            <Input\n                                                name=\"billingStreet3\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.billingStreet3}\n                                                borderColor={formik?.errors?.billingStreet3 && formik?.touched?.billingStreet3 ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingStreet3 && formik?.touched.billingStreet3 && formik?.errors.billingStreet3}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingStreet3\", data?.billingStreet3, \"Billing Street3\")}>{data?.billingStreet3 ? data?.billingStreet3 : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Street4</Text>\n                                {\n                                    editableField === \"shippingStreet4\" ?\n                                        <>\n                                            <Input\n                                                name=\"shippingStreet4\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.shippingStreet4}\n                                                borderColor={formik?.errors?.shippingStreet4 && formik?.touched?.shippingStreet4 ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingStreet4 && formik?.touched.shippingStreet4 && formik?.errors.shippingStreet4}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingStreet4\", data?.shippingStreet4, \"Shipping Street4\")}>{data?.shippingStreet4 ? data?.shippingStreet4 : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Street4</Text>\n                                {\n                                    editableField === \"billingStreet4\" ?\n                                        <>\n                                            <Input\n                                                name=\"billingStreet4\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.billingStreet4}\n                                                borderColor={formik?.errors?.billingStreet4 && formik?.touched?.billingStreet4 ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingStreet4 && formik?.touched.billingStreet4 && formik?.errors.billingStreet4}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingStreet4\", data?.billingStreet4, \"Billing Street4\")}>{data?.billingStreet4 ? data?.billingStreet4 : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Postal Code</Text>\n                                {\n                                    editableField === \"shippingPostalcode\" ?\n                                        <>\n                                            <Input\n                                                name=\"shippingPostalcode\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.shippingPostalcode}\n                                                borderColor={formik?.errors?.shippingPostalcode && formik?.touched?.shippingPostalcode ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingPostalcode && formik?.touched.shippingPostalcode && formik?.errors.shippingPostalcode}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingPostalcode\", data?.shippingPostalcode, \"Shipping Postal Code\")}>{data?.shippingPostalcode ? data?.shippingPostalcode : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Postal Code</Text>\n                                {\n                                    editableField === \"billingPostalcode\" ?\n                                        <>\n                                            <Input\n                                                name=\"billingPostalcode\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.billingPostalcode}\n                                                borderColor={formik?.errors?.billingPostalcode && formik?.touched?.billingPostalcode ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingPostalcode && formik?.touched.billingPostalcode && formik?.errors.billingPostalcode}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingPostalcode\", data?.billingPostalcode, \"Billing Postal Code\")}>{data?.billingPostalcode ? data?.billingPostalcode : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping City\n                                </Text>\n                                {\n                                    editableField === \"shippingCity\" ?\n                                        <>\n                                            <Input\n                                                name=\"shippingCity\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.shippingCity}\n                                                borderColor={formik?.errors?.shippingCity && formik?.touched?.shippingCity ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingCity && formik?.touched.shippingCity && formik?.errors.shippingCity}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingCity\", data?.shippingCity, \"Shipping City\")}>{data?.shippingCity ? data?.shippingCity : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing City\n                                </Text>\n                                {\n                                    editableField === \"billingCity\" ?\n                                        <>\n                                            <Input\n                                                name=\"billingCity\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.billingCity}\n                                                borderColor={formik?.errors?.billingCity && formik?.touched?.billingCity ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingCity && formik?.touched.billingCity && formik?.errors.billingCity}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingCity\", data?.billingCity, \"Billing City\")}>{data?.billingCity ? data?.billingCity : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping State</Text>\n                                {\n                                    editableField === \"shippingState\" ?\n                                        <>\n                                            <Input\n                                                name=\"shippingState\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.shippingState}\n                                                borderColor={formik?.errors?.shippingState && formik?.touched?.shippingState ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingState && formik?.touched.shippingState && formik?.errors.shippingState}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingState\", data?.shippingState, \"Shipping State\")}>{data?.shippingState ? data?.shippingState : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing State</Text>\n                                {\n                                    editableField === \"billingState\" ?\n                                        <>\n                                            <Input\n                                                name=\"billingState\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.billingState}\n                                                borderColor={formik?.errors?.billingState && formik?.touched?.billingState ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingState && formik?.touched.billingState && formik?.errors.billingState}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingState\", data?.billingState, \"Billing State\")}>{data?.billingState ? data?.billingState : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Country</Text>\n                                {\n                                    editableField === \"shippingCountry\" ?\n                                        <>\n                                            <Input\n                                                name=\"shippingCountry\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.shippingCountry}\n                                                borderColor={formik?.errors?.shippingCountry && formik?.touched?.shippingCountry ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingCountry && formik?.touched.shippingCountry && formik?.errors.shippingCountry}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingCountry\", data?.shippingCountry, \"Shipping Country\")}>{data?.shippingCountry ? data?.shippingCountry : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Country</Text>\n                                {\n                                    editableField === \"billingCountry\" ?\n                                        <>\n                                            <Input\n                                                name=\"billingCountry\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.billingCountry}\n                                                borderColor={formik?.errors?.billingCountry && formik?.touched?.billingCountry ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingCountry && formik?.touched.billingCountry && formik?.errors.billingCountry}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingCountry\", data?.billingCountry, \"Billing Country\")}>{data?.billingCountry ? data?.billingCountry : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Type</Text>\n                                {\n                                    editableField === \"type\" ?\n                                        <>\n                                            <Select\n                                                value={formik?.values.type}\n                                                name=\"type\"\n                                                onChange={formik?.handleChange}\n                                                onBlur={handleBlur}\n                                                fontWeight='500'\n                                                placeholder={'Select Type'}\n                                                borderColor={formik?.errors.type && formik?.touched.type ? \"red.300\" : null}\n                                            >\n                                                <option value=\"Analyst\">Analyst</option>\n                                                <option value=\"Competitor\">Competitor </option>\n                                                <option value=\"Customer\">Customer</option>\n                                                <option value=\"Integrator\">Integrator</option>\n                                                <option value=\"Investor\">Investor </option>\n                                                <option value=\"Partner\">Partner</option>\n                                                <option value=\"Press\">Press</option>\n                                                <option value=\"Prospect\">Prospect</option>\n                                                <option value=\"Reseller\">Reseller</option>\n                                                <option value=\"Other\">Other</option>\n                                            </Select>\n                                            <Text mb='10px' color={'red'}> {formik?.errors.type && formik?.touched.type && formik?.errors.type}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"type\", data?.type, \"Type\")}>{data?.type ? data?.type : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Industry</Text>\n                                {\n                                    editableField === \"industry\" ?\n                                        <>\n                                            <Select\n                                                value={formik?.values.industry}\n                                                name=\"industry\"\n                                                onChange={formik?.handleChange}\n                                                onBlur={handleBlur}\n                                                fontWeight='500'\n                                                placeholder={'Select Industry'}\n                                                borderColor={formik?.errors.industry && formik?.touched.industry ? \"red.300\" : null}\n                                            >\n                                                <option value=\"Apparel\">Apparel</option>\n                                                <option value=\"Banking\">Banking </option>\n                                                <option value=\"Biotechnology\">Biotechnology</option>\n                                                <option value=\"Chemicals\">Chemicals</option>\n                                                <option value=\"Communications\">Communications </option>\n                                                <option value=\"Construction\">Construction</option>\n                                                <option value=\"Consulting\">Consulting</option>\n                                                <option value=\"Education\">Education</option>\n                                                <option value=\"Electronics\">Electronics</option>\n                                                <option value=\"Energy\">Energy</option>\n                                                <option value=\"Engineering\">Engineering</option>\n                                                <option value=\"Entertainment\">Entertainment</option>\n                                                <option value=\"Finance\">Finance</option>\n                                                <option value=\"Government\">Government</option>\n                                                <option value=\"Healthcare\">Healthcare</option>\n                                                <option value=\"Hospitality\">Hospitality</option>\n                                                <option value=\"Insurance\">Insurance</option>\n                                                <option value=\"Machinery\">Machinery</option>\n                                                <option value=\"Manufacturing\">Manufacturing</option>\n                                                <option value=\"Media\">Media</option>\n                                                <option value=\"Not For Profit\">Not For Profit</option>\n                                                <option value=\"Recreation\">Recreation</option>\n                                                <option value=\"Retail\">Retail</option>\n                                                <option value=\"Shipping\">Shipping</option>\n                                                <option value=\"Technology\">Technology</option>\n                                                <option value=\"Telecommunications\">Telecommunications</option>\n                                                <option value=\"Transportation\">Transportation</option>\n                                                <option value=\"Utilities\">Utilities</option>\n                                                <option value=\"Other\">Other</option>\n                                            </Select>\n                                            <Text mb='10px' color={'red'}> {formik?.errors.industry && formik?.touched.industry && formik?.errors.industry}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"industry\", data?.industry, \"Industry\")}>{data?.industry ? data?.industry : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Rating </Text>\n                                <Text >{data?.rating ? data?.rating : ' - '}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>SIC Code</Text>\n                                {\n                                    editableField === \"SICCode\" ?\n                                        <>\n                                            <Input\n                                                name=\"SICCode\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.SICCode}\n                                                borderColor={formik?.errors?.SICCode && formik?.touched?.SICCode ? \"red.300\" : null}\n                                                autoFocus\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.SICCode && formik?.touched.SICCode && formik?.errors.SICCode}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"SICCode\", data?.SICCode, \"SIC Code\")}>{data?.SICCode ? data?.SICCode : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assigned User </Text>\n                                {/* <Text>{data?.assignUserName ? data?.assignUserName : ' - '}</Text> */}\n                                {\n                                    data?.assignUser ?\n                                        <Link to={user.role === 'superAdmin' && `/userView/${data?.assignUser}`}>\n                                            <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\n                                        </Link>\n                                        :\n                                        <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\n\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Member Of </Text>\n                                {\n                                    data?.memberOf ?\n                                        <Link to={`/accountView/${data?.memberOf}`}>\n                                            <Text color={permission?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: permission?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: permission?.view ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.memberOfName ? data?.memberOfName : ' - '}</Text>\n                                        </Link>\n                                        :\n                                        <Text color={permission?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: permission?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: permission?.view ? 'underline' : 'none' } }}>{data?.memberOfName ? data?.memberOfName : ' - '}</Text>\n\n                                }\n                            </GridItem>\n\n                            {/* <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\n                                <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assign To  </Text>\n                                <Link to={data?.assignTo ? contactAccess?.view && `/contactView/${data?.assignTo}` : leadAccess?.view && `/leadView/${data?.assignToLead}`}>\n                                    <Text color={(data?.category === 'contact' && (contactAccess?.view || user?.role === 'superAdmin')) ? 'brand.600' : (leadAccess?.view || user?.role === 'superAdmin' && data?.category === 'lead') ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignToName ? data?.assignToName : ' - '}</Text>\n                                </Link>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\n                                <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\n                                {\n                                    editableField === \"description\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"description\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.description}\n                                                autoFocus\n                                                borderColor={formik?.errors?.description && formik?.touched?.description ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description)}>{data?.description ? data?.description : ' - '}</Text>\n                                }\n                            </GridItem>\n                            <GridItem colSpan={{ base: 2 }} >\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\n                                {\n                                    editableField === \"notes\" ?\n                                        <>\n                                            <Input\n                                                id=\"text\"\n                                                name=\"notes\"\n                                                type=\"text\"\n                                                onChange={formik.handleChange}\n                                                onBlur={handleBlur}\n                                                value={formik.values.notes}\n                                                autoFocus\n                                                borderColor={formik?.errors?.notes && formik?.touched?.notes ? \"red.300\" : null}\n                                            />\n                                            <Text mb='10px' color={'red'}> {formik?.errors.notes && formik?.touched.notes && formik?.errors.notes}</Text>\n\n                                        </>\n                                        :\n                                        <Text onDoubleClick={() => handleDoubleClick(\"notes\", data?.notes)}>{data?.notes ? data?.notes : ' - '}</Text>\n                                }\n                            </GridItem> */}\n                        </Grid>\n                    </Card>\n                </GridItem>\n\n            </Grid>\n            {\n                (permission?.update || permission?.delete || user?.role === 'superAdmin') && <Card mt={3}>\n                    <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\n                        <GridItem colStart={6} >\n                            <Flex justifyContent={\"right\"}>\n                                {(permission?.update || user?.role === 'superAdmin') && <Button size=\"sm\" onClick={() => { setEdit(true); setType(\"edit\") }} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>}\n                                {(permission?.delete || user?.role === 'superAdmin') && <Button size=\"sm\" style={{ background: 'red.800' }} onClick={() => setDeleteManyModel(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\n                            </Flex>\n                        </GridItem>\n                    </Grid>\n                </Card>\n            }\n            <AddEdit isOpen={edit} size=\"lg\" onClose={() => setEdit(false)} viewClose={onClose} selectedId={id?.event ? id?.event?._def?.extendedProps?._id : id} type={type} />\n            <CommonDeleteModel isOpen={deleteManyModel} onClose={() => setDeleteManyModel(false)} type='Account' handleDeleteData={handleDeleteAccount} ids={[id]} />\n        </div >\n    )\n}\n\nexport default View\n","import * as yup from 'yup'\n\nexport const opprtunitiesSchema = yup.object({\n    opportunityName: yup.string().required(\"Opportunity Name Is required\"),\n    type: yup.string(),\n    leadSource: yup.string(),\n    currency: yup.string(),\n    opportunityAmount: yup.string().required(\"Opportunity Amount Is required\"),\n    amount: yup.string(),\n    expectedCloseDate: yup.string().required(\"Expected Close Date Is required\"),\n    nextStep: yup.string(),\n    salesStage: yup.string().required(\"Sales Stage Is required\"),\n    probability: yup.string(),\n    description: yup.string(),\n    createBy: yup.string(),\n})"],"names":["props","_formik$errors","_formik$touched","_formik$errors2","_formik$touched2","_formik$errors3","_formik$touched3","_formik$errors4","_formik$touched4","_formik$errors5","_formik$touched5","_formik$errors6","_formik$touched6","_formik$errors7","_formik$touched7","_formik$errors8","_formik$touched8","_formik$errors9","_formik$touched9","_formik$errors0","_formik$touched0","_formik$errors1","_formik$touched1","_formik$errors10","_formik$touched10","_formik$errors11","_formik$touched11","_formik$errors12","_formik$touched12","_formik$errors13","_formik$touched13","_formik$errors14","_formik$touched14","_formik$errors15","_formik$touched15","_formik$errors16","_formik$touched16","_formik$errors17","_formik$touched17","_formik$errors18","_formik$touched18","_formik$errors19","_formik$touched19","_formik$errors20","_formik$touched20","_formik$errors21","_formik$touched21","_formik$errors22","_formik$touched22","_formik$errors23","_formik$touched23","_id$event","_id$event$_def","_id$event$_def$extend","params","useParams","id","user","JSON","parse","localStorage","getItem","permission","contactAccess","leadAccess","HasAccess","data","setData","useState","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","deleteManyModel","setDeleteManyModel","loading","setLoading","navigate","useNavigate","type","setType","editableField","setEditableField","editableFieldName","setEditableFieldName","fetchViewData","Date","toISOString","split","async","result","getApi","initialValues","name","officePhone","alternatePhone","assignUser","website","fax","ownership","emailAddress","nonPrimaryEmail","billingStreet","billingStreet2","billingStreet3","billingStreet4","billingPostalcode","billingCity","billingState","billingCountry","shippingStreet","shippingStreet2","shippingStreet3","shippingStreet4","shippingPostalcode","shippingCity","shippingState","shippingCountry","description","industry","annualRevenue","rating","SICCode","memberOf","modifiedBy","_id","formik","useFormik","validationSchema","accountSchema","enableReinitialize","onSubmit","values","_ref","resetForm","payload","_objectSpread","modifiedDate","response","putApi","concat","status","toast","success","error","handleDoubleClick","fieldName","value","setFieldValue","handleBlur","e","handleSubmit","useEffect","_jsxs","children","Grid","templateColumns","gap","_jsx","GridItem","colSpan","base","Heading","size","m","Card","Box","display","justifyContent","mb","Flex","Menu","role","create","update","delete","MenuButton","variant","colorScheme","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","onClick","alignItems","color","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","moment","format","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","FaFilePdf","_Fragment","DeleteIcon","leftIcon","IoIosArrowBack","HSeparator","md","Text","fontSize","fontWeight","Input","onChange","handleChange","onBlur","borderColor","errors","touched","autoFocus","onDoubleClick","Select","placeholder","Link","to","sx","textDecoration","cursor","assignUserName","view","memberOfName","mt","colStart","background","AddEdit","isOpen","viewClose","selectedId","event","_def","extendedProps","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","log","opprtunitiesSchema","yup","opportunityName","required","leadSource","currency","opportunityAmount","amount","expectedCloseDate","nextStep","salesStage","probability","createBy"],"sourceRoot":""}